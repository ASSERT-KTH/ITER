bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.getValue().equals(v.getEntry(iter.next())));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.getValue().equals(v.getEntry(iter.next())));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  &&  iter.getValue().equals(v.getEntry(iter.next())));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
2	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.next()),  v.getValue()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.next()),  v.getValue()));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.next()),  v.getValue()));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
3	[BUG]  [BUGGY]  res.setEntry(iter.getDimension(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter.getDimension(),  v);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter.getDimension(),  v);	  res.setEntry(v.getDimension(),    iter);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
4	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  iter,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v.getDimension(),  iter,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v.getDimension(),  iter,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension(),    iter);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
5	[BUG]  [BUGGY]  Iterator  iter  =  entries.keySet().entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  entries.keySet().entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  entries.keySet().entryIterator();	  Iterator    iter    =    res.keySet().entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
6	[BUG]  [BUGGY]  Iterator  iter  =  res.values().entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  res.values().entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  res.values().entryIterator();	  Iterator    iter    =    res.keySet().entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
7	[BUG]  [BUGGY]  res.setEntry(entry,  iter);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(entry,  iter);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(entry,  iter);	  res.setEntry(iter,    iter);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  v.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  v.values().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  v.values().iterator();	  Iterator    iter    =    res.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  res.keys().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  res.keys().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  res.keys().iterator();	  Iterator    iter    =    res.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
10	[BUG]  [BUGGY]  while(iter.hasNext();  iter.next().equals(v.getEntry(iter.next())))  {  [CE]  ')'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext();  iter.next().equals(v.getEntry(iter.next())))  {  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext();  iter.next().equals(v.getEntry(iter.next())))  {	  while(iter.hasNext()    ||    iter.next().equals(v.getEntry(iter.next())))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
11	[BUG]  [BUGGY]  res.setEntry(iter.getDimension(),  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter.getDimension(),  iter.getValue());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter.getDimension(),  iter.getValue());	  res.setEntry(iter.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
12	[BUG]  [BUGGY]  res.setEntry(iter.getDimension(),  iter);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter.getDimension(),  iter);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter.getDimension(),  iter);	  res.setEntry(iter.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
13	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  iter.getValue().equals(v.getEntry(iter.next())))  {  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  ||  iter.getValue().equals(v.getEntry(iter.next())))  {  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  ||  iter.getValue().equals(v.getEntry(iter.next())))  {	  while    (iter.hasNext()    &&    iter.getValue().equals(v.getEntry(iter.next())))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
14	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.key())))  {  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.key())))  {  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  &&  iter.next().equals(v.getEntry(iter.key())))  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
15	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().advance())  {  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().advance())  {  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  &&  iter.next().advance())  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
16	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().getValue())  {  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while  (iter.hasNext()  &&  iter.next().getValue())  {  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while  (iter.hasNext()  &&  iter.next().getValue())  {	  while    (iter.hasNext()    &&    iter.next())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =  v.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  v.entries.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  v.entries.iterator();	  Iterator    iter    =    res.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
18	[BUG]  [BUGGY]  res.setEntry(entry.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(entry.getKey());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(entry.getKey());	  res.setEntry(entry);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
19	[BUG]  [BUGGY]  res.setEntry(entry.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(entry.getValue());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(entry.getValue());	  res.setEntry(entry);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
20	[BUG]  [BUGGY]  res.setEntry(new  OpenIntToDoubleHashMap(),  iter);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(new  OpenIntToDoubleHashMap(),  iter);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(new  OpenIntToDoubleHashMap(),  iter);	  res.setEntry(new    OpenIntToDoubleHashMap());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
21	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
22	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.value());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.value());	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
23	[BUG]  [BUGGY]  res.setEntry(iter.getDimension()  *  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter.getDimension()  *  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter.getDimension()  *  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
24	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	Iterator  iter  =  this.current.entryIterator();	  Iterator    iter    =    current.entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
25	[BUG]  [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter.value());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter.value());	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
26	[BUG]  [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  iter);	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
27	[BUG]  [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  value);	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
28	[BUG]  [BUGGY]  res.setEntry(entry,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(entry,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(entry,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
29	[BUG]  [BUGGY]  res.setEntry(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v);	  res.setEntry(entry);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
30	[BUG]  [BUGGY]  res.setEntry(iter.getDimension()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter.getDimension()  +  1);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter.getDimension()  +  1);	  res.setEntry(iter.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
31	[BUG]  [BUGGY]  while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next())));  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next())));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next())));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  ';'  expected	15	None	replace
32	[BUG]  [BUGGY]  while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next())));  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next())));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next())));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  ';'  expected	15	None	replace
33	[BUG]  [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter,  DEFAULT_ZERO_TOLERANCE,  v);	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
34	[BUG]  [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(iter,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
35	[BUG]  [BUGGY]  res.setEntry(entry.getDimension(),  iter);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(entry.getDimension(),  iter);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(entry.getDimension(),  iter);	  res.setEntry(v.getDimension(),    iter);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
36	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  *  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v.getDimension()  *  1);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v.getDimension()  *  1);	  res.setEntry(v.getDimension()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
37	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.size());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.size());  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  iter.size());	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
38	[BUG]  [BUGGY]  res.setEntry(iter,  DEFAULT_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  res.setEntry(iter,  DEFAULT_TOLERANCE);  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	res.setEntry(iter,  DEFAULT_TOLERANCE);	  res.setEntry(iter,    iter);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
39	[BUG]  [BUGGY]  while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next()));  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next()));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext())  {  v.next().equals(v.getEntry(iter.next()));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  ';'  expected	15	None	replace
40	[BUG]  [BUGGY]  while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next()));  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();      [BUGGY]  while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next()));  [BUGGY]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext())  {  iter.next().equals(v.getEntry(iter.next()));	  while    (iter.hasNext()    &&    iter.next().equals(v.getEntry(iter.next())));    	non-compiled	[CE]  ';'  expected	15	None	replace
