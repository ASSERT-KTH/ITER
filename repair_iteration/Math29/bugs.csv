bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }      [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	
2	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }      [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	add	
3	[BUG] [BUGGY] Iterator iter = entries.iterator(); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }       [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	
4	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] [BUGGY] Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }       [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	add	
5	[BUG] [BUGGY] while (iter.hasNext()) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	
6	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); [BUGGY] [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	add	
7	[BUG] [BUGGY] iter.advance(); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	
8	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	add	
9	[BUG] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [BUGGY] }        return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	
10	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	add	
11	[BUG] [BUGGY] return res; [FE] java.lang.AssertionError: entry #0 [CONTEXT] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [BUGGY] return res; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	
12	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [BUGGY] [BUGGY] return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	add	
13	[BUG] [BUGGY] checkVectorDimensions(v.getDimension()); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }     [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	
14	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] [BUGGY] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }     [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	add	
15	[BUG] [BUGGY] entries.remove(index); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] entries.remove(index); [BUGGY] } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	
16	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] [BUGGY] entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	add	
17	[BUG] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	
18	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	add	
19	[BUG] [BUGGY] virtualSize = v.getDimension(); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	
20	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	add	
21	[BUG] [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	181	181	3	replace	
22	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); [BUGGY] [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	181	181	3	add	
23	[BUG] [BUGGY] epsilon = v.epsilon; [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] epsilon = v.epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	182	182	3	replace	
24	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); [BUGGY] [BUGGY] epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	182	182	3	add	
25	[BUG] [BUGGY] } [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	183	183	3	replace	
26	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	183	183	3	add	
27	[BUG] [BUGGY] return entries; [FE] java.lang.AssertionError: entry #0 [CONTEXT] private OpenIntToDoubleHashMap getEntries() { [BUGGY] return entries; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntries [RETURN_TYPE] OpenIntToDoubleHashMap  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.43301270189221935	208	208	3	replace	
28	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] private OpenIntToDoubleHashMap getEntries() { [BUGGY] [BUGGY] return entries; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntries [RETURN_TYPE] OpenIntToDoubleHashMap  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.43301270189221935	208	208	3	add	
29	[BUG] [BUGGY] } else if (entries.containsKey(index)) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); [BUGGY] } else if (entries.containsKey(index)) { [BUGGY] entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.42008402520840293	591	591	3	replace	
30	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); [BUGGY] [BUGGY] } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.42008402520840293	591	591	3	add	
31	[BUG] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY]      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	343	343	3	replace	
32	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	343	343	3	add	
33	[BUG] [BUGGY] Iterator iter = entries.iterator(); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      [BUGGY] Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	349	349	3	replace	
34	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      [BUGGY] [BUGGY] Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	349	349	3	add	
35	[BUG] [BUGGY] while (iter.hasNext()) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	350	350	3	replace	
36	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); [BUGGY] [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	350	350	3	add	
37	[BUG] [BUGGY] iter.advance(); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	351	351	3	replace	
38	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	351	351	3	add	
39	[BUG] [BUGGY] res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); [FE] java.lang.AssertionError: entry #0 [CONTEXT] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); [BUGGY] } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	352	352	3	replace	
40	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] [BUGGY] res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	352	352	3	add	
41	[BUG] [BUGGY] return res; [FE] java.lang.AssertionError: entry #0 [CONTEXT]      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } [BUGGY] return res; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	354	354	3	replace	
42	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT]      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); } [BUGGY] [BUGGY] return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4082482904638631	354	354	3	add	
43	[BUG] [BUGGY] checkVectorDimensions(v.getDimension()); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { [BUGGY] checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	
44	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector ebeDivide(RealVector v) { [BUGGY] [BUGGY] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this);      Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())); [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeDivide [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	add	
45	[BUG] [BUGGY] if (!isDefaultValue(value)) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); [BUGGY] if (!isDefaultValue(value)) { [BUGGY] entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	589	589	3	replace	
46	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); [BUGGY] [BUGGY] if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	589	589	3	add	
47	[BUG] [BUGGY] entries.put(index, value); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { [BUGGY] entries.put(index, value); [BUGGY] } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	590	590	3	replace	
48	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { [BUGGY] [BUGGY] entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	590	590	3	add	
49	[BUG] [BUGGY] } [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	
50	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	add	
51	[BUG] [BUGGY] checkIndex(index); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { [BUGGY] checkIndex(index); [BUGGY] if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.31622776601683794	588	588	3	replace	
52	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public void setEntry(int index, double value) { [BUGGY] [BUGGY] checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.31622776601683794	588	588	3	add	
53	[BUG] [BUGGY] return entries.get(index); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public double getEntry(int index) { checkIndex(index); [BUGGY] return entries.get(index); [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.2970442628930023	449	449	3	replace	
54	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public double getEntry(int index) { checkIndex(index); [BUGGY] [BUGGY] return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.2970442628930023	449	449	3	add	
55	[BUG] [BUGGY] checkIndex(index); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public double getEntry(int index) { [BUGGY] checkIndex(index); [BUGGY] return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.2809757434745082	448	448	3	replace	
56	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public double getEntry(int index) { [BUGGY] [BUGGY] checkIndex(index); return entries.get(index); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getEntry [RETURN_TYPE] double  int index [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.2809757434745082	448	448	3	add	
57	[BUG] [BUGGY] entries.put(key, value); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { [BUGGY] entries.put(key, value); [BUGGY] } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.23791547571544325	140	140	3	replace	
58	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { [BUGGY] [BUGGY] entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.23791547571544325	140	140	3	add	
59	[BUG] [BUGGY] return virtualSize; [FE] java.lang.AssertionError: entry #0 [CONTEXT] public int getDimension() { [BUGGY] return virtualSize; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getDimension [RETURN_TYPE] int  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21160368475757949	401	401	3	replace	
60	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public int getDimension() { [BUGGY] [BUGGY] return virtualSize; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] getDimension [RETURN_TYPE] int  [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21160368475757949	401	401	3	add	
61	[BUG] [BUGGY] this(values, DEFAULT_ZERO_TOLERANCE); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values) { [BUGGY] this(values, DEFAULT_ZERO_TOLERANCE); [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[])  double[] values [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	123	123	3	replace	
62	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values) { [BUGGY] [BUGGY] this(values, DEFAULT_ZERO_TOLERANCE); } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[])  double[] values [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	123	123	3	add	
63	[BUG] [BUGGY] } [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values) { this(values, DEFAULT_ZERO_TOLERANCE); [BUGGY] } [BUGGY]  [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[])  double[] values [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	124	124	3	replace	
64	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values) { this(values, DEFAULT_ZERO_TOLERANCE); [BUGGY] [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[])  double[] values [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	124	124	3	add	
65	[BUG] [BUGGY] public OpenMapRealVector(double[] values, double epsilon) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] [BUGGY] public OpenMapRealVector(double[] values, double epsilon) { [BUGGY] virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	133	133	3	replace	
66	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	133	133	3	add	
67	[BUG] [BUGGY] virtualSize = values.length; [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { [BUGGY] virtualSize = values.length; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	134	134	3	replace	
68	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { [BUGGY] [BUGGY] virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	134	134	3	add	
69	[BUG] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	135	135	3	replace	
70	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; [BUGGY] [BUGGY] entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	135	135	3	add	
71	[BUG] [BUGGY] this.epsilon = epsilon; [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] this.epsilon = epsilon; [BUGGY] for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	136	136	3	replace	
72	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); [BUGGY] [BUGGY] this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	136	136	3	add	
73	[BUG] [BUGGY] for (int key = 0; key < values.length; key++) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; [BUGGY] for (int key = 0; key < values.length; key++) { [BUGGY] double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	137	137	3	replace	
74	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; [BUGGY] [BUGGY] for (int key = 0; key < values.length; key++) { double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	137	137	3	add	
75	[BUG] [BUGGY] double value = values[key]; [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { [BUGGY] double value = values[key]; [BUGGY] if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	138	138	3	replace	
76	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { [BUGGY] [BUGGY] double value = values[key]; if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	138	138	3	add	
77	[BUG] [BUGGY] if (!isDefaultValue(value)) { [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; [BUGGY] if (!isDefaultValue(value)) { [BUGGY] entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	139	139	3	replace	
78	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] public OpenMapRealVector(double[] values, double epsilon) { virtualSize = values.length; entries = new OpenIntToDoubleHashMap(0.0); this.epsilon = epsilon; for (int key = 0; key < values.length; key++) { double value = values[key]; [BUGGY] [BUGGY] if (!isDefaultValue(value)) { entries.put(key, value); } } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector(double[],double)  double[] values double epsilon [VARIABLES] Entry current boolean double[] values double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.21004201260420147	139	139	3	add	
80	[BUG] [BUGGY] return FastMath.abs(value) < epsilon; [FE] java.lang.AssertionError: entry #0 [CONTEXT] protected boolean isDefaultValue(double value) { [BUGGY] return FastMath.abs(value) < epsilon; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] isDefaultValue [RETURN_TYPE] boolean  double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.20851441405707474	220	220	3	replace	
81	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 [CONTEXT] protected boolean isDefaultValue(double value) { [BUGGY] [BUGGY] return FastMath.abs(value) < epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] isDefaultValue [RETURN_TYPE] boolean  double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.20851441405707474	220	220	3	add	
