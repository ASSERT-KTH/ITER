bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  entry  ==  null)  {  checkVectorDimensions(v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  entry  ==  null)  {  checkVectorDimensions(v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	entry  ==  null)  {  checkVectorDimensions(v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
3	[BUG]  [BUGGY]  entry!=  null)  {  checkVectorDimensions(v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  entry!=  null)  {  checkVectorDimensions(v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	entry!=  null)  {  checkVectorDimensions(v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  v.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  v.getDimension()  +  1);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null,  v.getDimension()  +  1);	  Preconditions.checkState(v.getDimension()!=    null,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
7	[BUG]  [BUGGY]  ||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
8	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
9	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
10	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
11	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v!=    null)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
12	[BUG]  [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  value);	  res.setEntry(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
13	[BUG]  [BUGGY]  if(v  ==  null)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkAccess(v.getDimension());  }	  if(v!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
14	[BUG]  [BUGGY]  if(v!=  null)  {  checkAccess(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkAccess(new  RealVector(v.getDimension()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkAccess(new  RealVector(v.getDimension()));  }	  if(v!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
15	[BUG]  [BUGGY]  Annotations.checkAccess(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Annotations.checkAccess(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Annotations.checkAccess(v.getDimension());	  if(v!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
16	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
17	[BUG]  [BUGGY]  double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
18	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  /  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  /  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  /  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
19	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE  +  1;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE  +  1;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
20	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
21	[BUG]  [BUGGY]  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
22	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
23	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator()    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
24	[BUG]  [BUGGY]  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);	  checkAccess(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }	  checkAccess(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }	  checkAccess(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  CheckDimensions(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckDimensions(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckDimensions(v.getDimension());	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
30	[BUG]  [BUGGY]  entry  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  entry  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	entry  ==  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
31	[BUG]  [BUGGY]  entry!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  entry!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	entry!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
32	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    null,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    null,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    null,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
36	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
37	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
38	[BUG]  [BUGGY]  res.setDimension(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setDimension(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setDimension(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  res.setDimension(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
39	[BUG]  [BUGGY]  res.setDimension(v.getDimension()  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setDimension(v.getDimension()  -  1);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setDimension(v.getDimension()  -  1);	  res.setDimension(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
40	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
41	[BUG]  [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	  ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
42	[BUG]  [BUGGY]  ||  v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	  ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
44	[BUG]  [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
45	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }	  checkDimensions(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
46	[BUG]  [BUGGY]  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);	  checkDimensions(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }	  checkDimensions(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
48	[BUG]  [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
50	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getEntry());  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getEntry());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getEntry());	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
51	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  true);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  true);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  true);	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
52	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
53	[BUG]  [BUGGY]  ||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getType()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
54	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  /  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  /  2;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  /  2;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
56	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  *  2  +  1;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  2  +  1;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
57	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
58	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  illegal  start  of  expression)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
59	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
60	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  CheckState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  this.v.getEntrySet().iterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  current.getEntrySet().iterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
64	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  v.iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  v.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  v.iterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
65	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  CheckIntToDoubleHashMap(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
66	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getEntry());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getEntry());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getEntry());	  CheckIntToDoubleHashMap(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
67	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getValue());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getValue());	  CheckIntToDoubleHashMap(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
68	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getDimension(),  value);	  CheckIntToDoubleHashMap(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
69	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
70	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
71	[BUG]  [BUGGY]  CheckVectorDimensions(v.getEntry());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getEntry());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getEntry());	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  CheckVectorDimensions(v.getEpsilon());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getEpsilon());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getEpsilon());	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
73	[BUG]  [BUGGY]  CheckVectorDimensions(v.getValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getValue());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getValue());	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  CheckVectorDimensions(v.getDimension(),  this);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getDimension(),  this);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getDimension(),  this);	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  Vector  res  =  new  RealVector(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Vector  res  =  new  RealVector(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Vector  res  =  new  RealVector(v.getDimension());	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntryIterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  this.v.getEntryIterator();	  Iterator    <    RealVector>    entries    =    v.getEntryIterator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryIterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  current.getEntryIterator();	  Iterator    <    RealVector>    entries    =    v.getEntryIterator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    null,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  >  0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  >  0);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension()  >  0);	  Preconditions.checkState(v.getDimension()    ==    null,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
83	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
84	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
85	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
86	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
87	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
88	[BUG]  [BUGGY]  if(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null    &&    v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
89	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null    &&    v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getDimension()  ==  null);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkArgument(v.getDimension()  ==  null);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkArgument(v.getDimension()  ==  null);	  Preconditions.checkArgument(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getDimension()  >=  null);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkArgument(v.getDimension()  >=  null);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkArgument(v.getDimension()  >=  null);	  Preconditions.checkArgument(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
92	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
93	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
94	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
95	[BUG]  [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
96	[BUG]  [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	|  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
98	[BUG]  [BUGGY]  double  dimension  =  v.getDimension()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  double  dimension  =  v.getDimension()  +  1;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	double  dimension  =  v.getDimension()  +  1;	  double    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkAccess(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
100	[BUG]  [BUGGY]  CheckAccess(v.getDimension());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckAccess(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckAccess(v.getDimension());	  if(v.getDimension()!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
101	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
102	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
103	[BUG]  [BUGGY]  if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
104	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
106	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
107	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
109	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getEntry()));  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getEntry()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getEntry()));  }	  if(v!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
110	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  this);  }	  if(v!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
111	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
112	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getVectorDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  DEFAULT_  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  ||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getVectorDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  DEFAULT_  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getVectorDimension()!=  DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this,  DEFAULT_	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null  ||  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null);  checkVectorDimensions(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null);  checkVectorDimensions(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null);  checkVectorDimensions(v.getDimension());	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension(),  v.getDimension()));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension(),  v.getDimension()));  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(!v.getDimension().equals(v.getDimension(),  v.getDimension()));	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  v.getDimension());	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension()  +  1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension()  +  1));  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(!v.getDimension().equals(v.getDimension()  +  1));	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE    ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE    ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE    ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  >>  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  >>  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  >>  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }	  if(v    ==    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
125	[BUG]  [BUGGY]  if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getEntry()!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
126	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
127	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  epsilon.setDimension(v.getDimension());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  epsilon.setDimension(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	epsilon.setDimension(v.getDimension());	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
130	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  return  new  OpenMapRealVector(this);  }	  checkAccess(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
131	[BUG]  [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	|  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkNotNull(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkNotNull(v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkNotNull(v.getDimension());	  Preconditions.checkArgument(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
133	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
134	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DE  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DE	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
135	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  +  1);  }	  if(v!=    null)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
136	[BUG]  [BUGGY]  if(v!=  null)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()  +  1));  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()  +  1));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()  +  1));  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
139	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
140	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  >=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  >=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()  >=  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null    &&    v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
141	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
142	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(null,  v.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(null,  v.getDimension(),  v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(null,  v.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
143	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(null.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(null.getDimension(),  v.getEntry());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(null.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
144	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
145	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  v.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  RealVector>  entries  =  v.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  v.entrySet().iterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
146	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
147	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
148	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setEntry(v.getDimension()  +  1);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(v.getDimension()  +  1);	  res.setEntry(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
149	[BUG]  [BUGGY]  if(v.isDivide()  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide()  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide()  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.isDivide())    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
150	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    >=    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
152	[BUG]  [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  |  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	|  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
153	[BUG]  [BUGGY]  CheckVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
154	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
155	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
156	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
157	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  &&!v.getDimension().equals(v.getDimension()));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  &&!v.getDimension().equals(v.getDimension()));  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null  &&!v.getDimension().equals(v.getDimension()));	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
159	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  v.getDimension());	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
160	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
161	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
162	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
163	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  null)  {  checkDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkDimensions(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getDimension());  }	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
166	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
167	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
168	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
169	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
170	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
171	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
172	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
173	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
174	[BUG]  [BUGGY]  res.setDimension(v.getDimension()  -  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setDimension(v.getDimension()  -  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setDimension(v.getDimension()  -  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
175	[BUG]  [BUGGY]  res.setDimension(v.getDimension()  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setDimension(v.getDimension()  +  1);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setDimension(v.getDimension()  +  1);	  res.setDimension(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
176	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  4;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  *  4;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  4;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
177	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  3;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  int  dimension  =  v.getDimension()  *  3;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  3;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
178	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
179	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(Vector.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(Vector.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(Vector.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
180	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
181	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
182	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
183	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAUL	  if(v    ==    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
184	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
185	[BUG]  [BUGGY]  res.setEntry(epsilon,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  res.setEntry(epsilon,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(epsilon,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
186	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  epsilon);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getDimension(),  epsilon);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getDimension(),  epsilon);	  CheckIntToDoubleHashMap(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
187	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
188	[BUG]  [BUGGY]  Preconditions.checkArgument(!v.getDimension().equals(v.getDimension()));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkArgument(!v.getDimension().equals(v.getDimension()));  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkArgument(!v.getDimension().equals(v.getDimension()));	  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
189	[BUG]  [BUGGY]  if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
190	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
191	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
192	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
193	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
194	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
195	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
196	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null  &&  v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }	  Preconditions.checkState(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
198	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    null,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
199	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  >  DEFAULT_ZERO_TOLERANCE);	  Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE    ||    v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
201	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getDimension()!=  null,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Preconditions.checkArgument(v.getDimension()!=  null,  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkArgument(v.getDimension()!=  null,  v.getDimension());	  Preconditions.checkArgument(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
203	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
204	[BUG]  [BUGGY]  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
205	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	  if(v.isDivide())    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
206	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
207	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
208	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getDimension())  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckIntToDoubleHashMap(v.getDimension())  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getDimension())  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
209	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkDimensions(v.getDimension());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
210	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
211	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
212	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  v.getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  Iterator  <  Entry>  entries  =  v.getEntrySet().iterator();  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  Entry>  entries  =  v.getEntrySet().iterator();	  if(v!=    null)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
213	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
214	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkAccess(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
215	[BUG]  [BUGGY]  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	&&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
216	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
217	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
218	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  <  =  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
219	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
220	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v!=    null)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
221	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
222	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealV  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealV  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealV	  checkDimensions(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
223	[BUG]  [BUGGY]  CheckVectorDimensions(v.getDimension(),  v.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getDimension(),  v.getValue());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getDimension(),  v.getValue());	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
224	[BUG]  [BUGGY]  CheckVectorDimensions(v.getDimension(),  v.getEntryCount());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  CheckVectorDimensions(v.getDimension(),  v.getEntryCount());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getDimension(),  v.getEntryCount());	  CheckVectorDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
225	[BUG]  [BUGGY]  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  &&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	&&  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  ||    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
226	[BUG]  [BUGGY]  if(v  ==  null  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v  ==  null  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }	  if(v    ==    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
227	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
228	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v    ==    null)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
229	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
230	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
231	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkAccess(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
232	[BUG]  [BUGGY]  if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  illegal  start  of  expression)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
233	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension()    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
234	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
235	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	  if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
236	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry(),  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry(),  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry(),  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
237	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getEntry(),  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getEntry(),  v.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(v.getEntry(),  v.getDimension());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension(),    v.getEntry());    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
238	[BUG]  [BUGGY]  double  dimension  =  v.getDimension()  +  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  double  dimension  =  v.getDimension()  +  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	double  dimension  =  v.getDimension()  +  DEFAULT_ZERO_TOLERANCE;	  double    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
239	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  v);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeDivide(RealVector  v)  {      [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  v);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()),  v);  }	  if(v!=    null)    {    checkVectorDimensions(new    RealVector(v.getDimension()));    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
