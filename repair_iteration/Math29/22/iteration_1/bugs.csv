bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
2	[BUG]  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
3	[BUG]  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
4	[BUG]  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
5	[BUG]  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
6	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
7	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
8	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
9	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(v.getDimension());  }	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]  checkDimensions(v.getDimension());  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  checkDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkDimensions(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
13	[BUG]  [BUGGY]    Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  expression	44	None	add
14	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    int  dimension  =  v.getDimension();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    int  dimension  =  v.getDimension();		non-compiled	[CE]  illegal  start  of  expression	44	None	add
15	[BUG]  [BUGGY]    Preconditions.checkState(v.getDimension()!=  null);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    Preconditions.checkState(v.getDimension()!=  null);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    Preconditions.checkState(v.getDimension()!=  null);		non-compiled	[CE]  illegal  start  of  expression	44	None	add
16	[BUG]  [BUGGY]    Preconditions.checkState(v.getDimension()  ==  null);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    Preconditions.checkState(v.getDimension()  ==  null);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    Preconditions.checkState(v.getDimension()  ==  null);		non-compiled	[CE]  illegal  start  of  expression	44	None	add
17	[BUG]  [BUGGY]    res.setEntry(v);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    res.setEntry(v);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    res.setEntry(v);		non-compiled	[CE]  illegal  start  of  expression	44	None	add
18	[BUG]  [BUGGY]  checkAccess(v.getDimension());  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]  checkAccess(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkAccess(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
19	[BUG]  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeDivide(RealVector  v)  {  [BUGGY]    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	    if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
