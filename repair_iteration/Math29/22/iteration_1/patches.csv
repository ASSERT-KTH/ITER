bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE);	      Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE);	      Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  <  DEFAULT_ZERO_TOLERANCE);	      Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()!=  null,  v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null,  v.getDimension());	      Preconditions.checkState(v.getDimension()    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  v.getDimension());	      Preconditions.checkState(v.getDimension()    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkAccess(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(!v.getDimension().equals(v.getDimension()));  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(!v.getDimension().equals(v.getDimension()));	      Preconditions.checkState(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  >=  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  >=  null);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  >=  null);	      Preconditions.checkState(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  CheckVectorDimensions(v.getDimension());  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  CheckVectorDimensions(v.getDimension());  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckVectorDimensions(v.getDimension());	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v  ==  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(new  RealVector(v.getDimension()));  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getEntry());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  double  dimension  =  v.getDimension();  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	double  dimension  =  v.getDimension();	      int    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  int  dimension  =  v.getDimension()  +  1;  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  +  1;	      int    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  int  dimension  =  v.getDimension()  *  2;  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  2;	      int    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	checkDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalStateException( " ");  }	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  >=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);	      res.setEntry(v);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  res.setEntry(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  res.setEntry(v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setEntry(v.getDimension());	      res.setEntry(v);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  ||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
45	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  v.getEntryIterator();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Iterator  <  RealVector>  entries  =  v.getEntryIterator();  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Iterator  <  RealVector>  entries  =  v.getEntryIterator();	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v  ==  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(!v.getDimension().equals(DEFAULT_ZERO_TOLERANCE))  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  res.setDimension(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  res.setDimension(v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	res.setDimension(v.getDimension());	      res.setEntry(v);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
56	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkDimensions(v.getDimension());  }	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  checkDimensions(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	int  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	      int    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE  ||  v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE);	      Preconditions.checkState(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator()	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    else    {    OpenMapRealVector    res    =    new    OpenMapRealVector(this);    Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkState(v.getDimension()  ==  null,  DEFAULT_ZERO_TOLERANCE);	      Preconditions.checkState(v.getDimension()    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null)  {  checkAccess(v.getDimension());  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  if(v!=  null)  {  checkAccess(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  checkAccess(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkAccess(v.getDimension());  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
68	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension()	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  null  &&  v.getDimension()!=  null)  {  checkVectorDimensions(v.getDimension());  }	  if(v.getDimension()!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  v.getDimension());  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  return  new  OpenMapRealVector(this);  }	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
75	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  checkAccess(v.getDimension());  }  else  {  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();	  checkAccess(v.getDimension());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  CheckIntToDoubleHashMap(v.getDimension());  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  CheckIntToDoubleHashMap(v.getDimension());  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	CheckIntToDoubleHashMap(v.getDimension());	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(v.getDimension()!=  null);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  Preconditions.checkArgument(v.getDimension()!=  null);  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	Preconditions.checkArgument(v.getDimension()!=  null);	      Preconditions.checkState(v.getDimension()!=    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  checkVectorDimensions(v.getDimension());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    checkVectorDimensions(v.getDimension());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_ZERO)  {  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.isDivide())  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v.getDimension()!=  DEFAULT_TOLERANCE)  {  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  return  new  OpenMapRealVector(this);  }	      if(v.getDimension()!=    DEFAULT_ZERO_TOLERANCE)    {    if(v.getDimension()    ==    DEFAULT_ZERO_TOLERANCE)    {    return    new    OpenMapRealVector(this);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension());  [BUGGY]    checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension());	      res.setEntry(v);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeDivide(RealVector  v)  {    [BUGGY]  if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(this);      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeDivide  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3333333333333333	342	342	3	replace	if(v!=  null)  {  checkVectorDimensions(v.getDimension(),  v.getEntry());  }	  if(v!=    null)    {    checkVectorDimensions(v.getDimension());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
