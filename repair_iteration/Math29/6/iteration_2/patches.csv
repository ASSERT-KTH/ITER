bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  res.newOpenMapRealVector(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.newOpenMapRealVector(v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.newOpenMapRealVector(v);	  res.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	25	None	replace
2	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  epsilon);	  return    new    RealVectorIterator(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
3	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  res);	  return    new    RealVectorIterator(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
4	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(iter.key()),  v.getValue()  *  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(iter.key()),  v.getValue()  *  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(iter.key()),  v.getValue()  *  1);	  return    new    RealVector(v.getEntry(iter.key()),    v.getValue()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	60	None	replace
5	[BUG]  [BUGGY]  res.setEntry(v.getEntry(iter.key()),  v.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.getEntry(iter.key()),  v.getValue()  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.getEntry(iter.key()),  v.getValue()  +  1);	  return    new    RealVector(v.getEntry(iter.key()),    v.getValue()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	60	None	replace
6	[BUG]  [BUGGY]  res.setEntry(value.value(),  iter.value()  *  v.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(value.value(),  iter.value()  *  v.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(value.value(),  iter.value()  *  v.getEntry(iter.value()));	  res.setEntry(value.value(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
7	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  value.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  value.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  value.getEntry(iter.key()));	  res.setEntry(v,    iter.value()    *    value.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
8	[BUG]  [BUGGY]  if(v  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(v  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(v  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	54	None	replace
9	[BUG]  [BUGGY]  if(value  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(value  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(value  ==  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  }	  if(v!=    null)    {    return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	54	None	replace
10	[BUG]  [BUGGY]  if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  value);  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  value);  }	  if(v!=    null)    {    return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	54	None	replace
11	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  epsilon);	  return    new    RealVector(v.getValue(),    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
12	[BUG]  [BUGGY]  res.setValue(v.getValue(),  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  epsilon);	  return    new    RealVector(v.getValue(),    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
13	[BUG]  [BUGGY]  res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    value    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	21	None	replace
14	[BUG]  [BUGGY]  res.setValue(v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue());	  return    v.getValue();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	24	None	replace
15	[BUG]  [BUGGY]  return  v.getValue()  +  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.getValue()  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.getValue()  +  1;	  return    v.getValue();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	24	None	replace
16	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  realVector.getEntry(v.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  realVector.getEntry(v.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  realVector.getEntry(v.key()));	  res.setEntry(iter.key(),    iter.value()    *    realVector.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	47	None	replace
17	[BUG]  [BUGGY]  res.setIterator(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setIterator(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setIterator(iter.key(),  iter.value()  *  v.getEntry(iter.key()));	  return    iter.getIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
18	[BUG]  [BUGGY]  res.setIterator(iter.getIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setIterator(iter.getIterator());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setIterator(iter.getIterator());	  return    iter.getIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
19	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.value().getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.value().getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  iter.value().getEntry(iter.key()));	  res.setEntry(iter.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.value().getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
20	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value  *  iter.value().getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  value  *  iter.value().getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  value  *  iter.value().getEntry(iter.key()));	  res.setEntry(iter.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.value().getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
21	[BUG]  [BUGGY]  res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.value(),  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.value(),  v.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.value(),  v.getEntry(iter.key()));	  res.setEntry(iter.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.value().getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
22	[BUG]  [BUGGY]  RealVector  res  =  v.newOpenMapRealVector();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  RealVector  res  =  v.newOpenMapRealVector();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	RealVector  res  =  v.newOpenMapRealVector();	  return    v.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
23	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v);	  return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
24	[BUG]  [BUGGY]  return  new  RealVectorIterator(res,  v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(res,  v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(res,  v,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
25	[BUG]  [BUGGY]  res.setEntry(v,  iter.value()  *  value.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v,  iter.value()  *  value.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v,  iter.value()  *  value.getEntry(iter.value()));	  res.setEntry(value,    iter.value()    *    v.getEntry(iter.value()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	40	None	replace
26	[BUG]  [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);	  res.setValue(v.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
27	[BUG]  [BUGGY]  res.setValue(v.getValue(),  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  value);	  res.setValue(v.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
28	[BUG]  [BUGGY]  return  res.toArray(new  RealVector[iter.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.toArray(new  RealVector[iter.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.toArray(new  RealVector[iter.size()  ]);	  return    iter.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	52	None	replace
29	[BUG]  [BUGGY]  return  iter.toArray(new  RealVector[res.size()  -  1]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.toArray(new  RealVector[res.size()  -  1]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.toArray(new  RealVector[res.size()  -  1]);	  return    iter.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	52	None	replace
30	[BUG]  [BUGGY]  return  iter.toArray(new  RealVector[res.size()  +  1]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.toArray(new  RealVector[res.size()  +  1]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.toArray(new  RealVector[res.size()  +  1]);	  return    iter.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	52	None	replace
31	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue;  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue;  }	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    RealVector    v    =(RealVector)iter.next();    if(v.getEntry(v.getKey())!=    null)    {    continue;    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	65	None	replace
32	[BUG]  [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    RealVector    v    =(RealVector)iter.next();    if(v.getEntry(v.getKey())!=    null)    {    continue;    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	65	None	replace
33	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    RealVector    v    =(RealVector)iter.next();    if(v.getEntry(v.getKey())!=    null)    {    continue;    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	65	None	replace
34	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	45	None	replace
35	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  value  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  value  *  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	45	None	replace
36	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.value()  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getValue(),  iter.value()  *  v.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getValue(),  iter.value()  *  v.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
37	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  realAccess.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  realAccess.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.value()  *  realAccess.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
38	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  v.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  v.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.value()  *  v.getEntry(iter.value()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
39	[BUG]  [BUGGY]  res.setEntry(v.value(),  iter.value()  *  v.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.value(),  iter.value()  *  v.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.value(),  iter.value()  *  v.getEntry(iter.value()));	  res.setEntry(iter.value(),    iter.value()    *    v.getEntry(iter.value()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
40	[BUG]  [BUGGY]  res.setEntry(value.key(),  iter.value()  *  realAccess.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(value.key(),  iter.value()  *  realAccess.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(value.key(),  iter.value()  *  realAccess.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    *    realAccess.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	64	None	replace
41	[BUG]  [BUGGY]  res.setEntry(value.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(value.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(value.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	63	None	replace
42	[BUG]  [BUGGY]  return  value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  value;	  return    epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
43	[BUG]  [BUGGY]  return  ebeMultiply;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  ebeMultiply;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  ebeMultiply;	  return    epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
44	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	61	None	replace
45	[BUG]  [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	61	None	replace
46	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  epsilon);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	61	None	replace
47	[BUG]  [BUGGY]  return  new  RealVector(d.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(d.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(d.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
48	[BUG]  [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
49	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  value);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
50	[BUG]  [BUGGY]  return  v.epsilon,  value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.epsilon,  value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.epsilon,  value;	  return    res.epsilon,    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
51	[BUG]  [BUGGY]  return  value.epsilon,  res;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  value.epsilon,  res;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  value.epsilon,  res;	  return    res.epsilon,    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
52	[BUG]  [BUGGY]  return  epsilon,  value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon,  value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon,  value;	  return    res.epsilon,    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
53	[BUG]  [BUGGY]  return  res.newOpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.newOpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newOpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
54	[BUG]  [BUGGY]  return  res.newOpenMapRealVector(value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.newOpenMapRealVector(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newOpenMapRealVector(value);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
55	[BUG]  [BUGGY]  res.newOpenMapRealVector(v,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.newOpenMapRealVector(v,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.newOpenMapRealVector(v,  epsilon);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
56	[BUG]  [BUGGY]  return  res.newOpenMapRealVector(value,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.newOpenMapRealVector(value,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newOpenMapRealVector(value,  v);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
57	[BUG]  [BUGGY]  res.setIterator(value.getIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setIterator(value.getIterator());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setIterator(value.getIterator());	  res.setIterator(v.getIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	55	None	replace
58	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getValue(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getValue(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
59	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  V.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  V.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.value()  *  V.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
60	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(v.key()),  res.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(v.key()),  res.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(v.key()),  res.getValue());	  return    new    RealVector(res.getEntry(v.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
61	[BUG]  [BUGGY]  res.setEntry(v.key(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  v.getValue());	  return    new    RealVector(res.getEntry(v.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
62	[BUG]  [BUGGY]  return  new  RealVector(res.getEntry(v.key()),  v.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getEntry(v.key()),  v.value());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getEntry(v.key()),  v.value());	  return    new    RealVector(res.getEntry(v.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
63	[BUG]  [BUGGY]  res.epsilon  =  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.epsilon  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.epsilon  =  DEFAULT_ZERO_TOLERANCE;	  res.epsilon    =    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
64	[BUG]  [BUGGY]  res.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  value;	  res.epsilon    =    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
65	[BUG]  [BUGGY]  epsilon  =  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  epsilon  =  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	epsilon  =  DEFAULT_ZERO_TOLERANCE;	  res.epsilon    =    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
66	[BUG]  [BUGGY]  return  iter.getValue()  +  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.getValue()  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.getValue()  +  1;	  return    iter.getValue();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	37	None	replace
67	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));	  res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
68	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));	  res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
69	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));	  res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
70	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  v);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
71	[BUG]  [BUGGY]  res.setValue(v.getValue(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getValue(),  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getValue(),  v);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
72	[BUG]  [BUGGY]  new  RealVector(res.getValue(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  new  RealVector(res.getValue(),  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	new  RealVector(res.getValue(),  v);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
73	[BUG]  [BUGGY]  return  new  RealVector(res.getEntry(value.key()),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getEntry(value.key()),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getEntry(value.key()),  v.getValue());	  return    new    RealVector(v.getEntry(res.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	59	None	replace
74	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  iter.value());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  iter.value());	  return    new    RealVector(v.getEntry(res.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	59	None	replace
75	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  res);	  return    new    RealVectorIterator(res,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
76	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  v);	  return    new    RealVectorIterator(res,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
77	[BUG]  [BUGGY]  res.setEntry(value,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(value,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVectorIterator(value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
78	[BUG]  [BUGGY]  return  res.toArray(new  RealVector[v.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.toArray(new  RealVector[v.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.toArray(new  RealVector[v.size()  ]);	  return    v.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
79	[BUG]  [BUGGY]  return  res.toArray(new  RealVector[rs.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.toArray(new  RealVector[rs.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.toArray(new  RealVector[rs.size()  ]);	  return    v.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
80	[BUG]  [BUGGY]  return  entries.toArray(new  RealVector[entries.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  entries.toArray(new  RealVector[entries.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  entries.toArray(new  RealVector[entries.size()  ]);	  return    res.toArray(new    RealVector[entries.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	39	None	replace
81	[BUG]  [BUGGY]  return  entries.toArray(new  RealVector[res.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  entries.toArray(new  RealVector[res.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  entries.toArray(new  RealVector[res.size()  ]);	  return    res.toArray(new    RealVector[entries.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	39	None	replace
82	[BUG]  [BUGGY]  res.toArray(new  RealVector[entries.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.toArray(new  RealVector[entries.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.toArray(new  RealVector[entries.size()  ]);	  return    res.toArray(new    RealVector[entries.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	39	None	replace
83	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);	  return    new    RealVector(res.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
84	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);	  return    new    RealVector(res.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
85	[BUG]  [BUGGY]  return  new  RealVector(res.getKey(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getKey(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getKey(),  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
86	[BUG]  [BUGGY]  res.setKey(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setKey(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setKey(v.getKey(),  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
87	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  value);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
88	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  v,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVectorIterator(value,    res,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	28	None	replace
89	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  res,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  res,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  res,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVectorIterator(value,    res,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	28	None	replace
90	[BUG]  [BUGGY]  return  new  RealVectorIterator(res,  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(res,  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(res,  value,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVectorIterator(value,    res,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	28	None	replace
91	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  res,  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  res,  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  res,  DEFAULT_ZERO_TOLERANCE,  v);	  return    new    RealVectorIterator(value,    res,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	28	None	replace
92	[BUG]  [BUGGY]  return  res.getValue()  *  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.getValue()  *  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.getValue()  *  1;	  return    res.getValue()    +    1;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	36	None	replace
93	[BUG]  [BUGGY]  res.setEntry(v.key(),  entry.value()  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  entry.value()  *  v.getEntry(iter.key()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  entry.value()  *  v.getEntry(iter.key()));	  res.setEntry(entry.key(),    entry.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
94	[BUG]  [BUGGY]  res.setEntry(iter.key(),  entry.value()  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  entry.value()  *  v.getEntry(iter.key()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  entry.value()  *  v.getEntry(iter.key()));	  res.setEntry(entry.key(),    entry.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
95	[BUG]  [BUGGY]  return  v.getIterator()  +  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.getIterator()  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.getIterator()  +  1;	  return    res.getIterator()    +    1;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
96	[BUG]  [BUGGY]  return  iter.getIterator()  +  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.getIterator()  +  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.getIterator()  +  1;	  return    res.getIterator()    +    1;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
97	[BUG]  [BUGGY]  return  new  RealVector(iter.getEntry(iter.key()),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(iter.getEntry(iter.key()),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(iter.getEntry(iter.key()),  v.getValue());	  return    new    RealVector(res.getEntry(iter.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
98	[BUG]  [BUGGY]  return  res.res;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.res;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.res;	  return    v.res;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
99	[BUG]  [BUGGY]  res.res;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.res;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.res;	  return    v.res;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
100	[BUG]  [BUGGY]  res.setValue(v.getEntry(iter.key()),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getEntry(iter.key()),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getEntry(iter.key()),  v.getValue());	  return    new    RealVector(v.getEntry(iter.key()),    res.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
101	[BUG]  [BUGGY]  return  res,  v.epsilon;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res,  v.epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res,  v.epsilon;	  return    v,    res.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
102	[BUG]  [BUGGY]  return  epsilon,  v.epsilon;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon,  v.epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon,  v.epsilon;	  return    v,    res.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
103	[BUG]  [BUGGY]  return  v,  ebeMultiply;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v,  ebeMultiply;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v,  ebeMultiply;	  return    v,    res.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
104	[BUG]  [BUGGY]  return  res.toArray(new  RealVector[res.size()  1]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.toArray(new  RealVector[res.size()  1]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.toArray(new  RealVector[res.size()  1]);	  return    res.toArray(new    RealVector[res.size()    +    1]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	33	None	replace
105	[BUG]  [BUGGY]  return  v.epsilon,  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.epsilon,  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.epsilon,  DEFAULT_ZERO_TOLERANCE;	  return    res.epsilon,    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	57	None	replace
106	[BUG]  [BUGGY]  return  res.epsilon,  DEFAULT_ZERO_TOLERANCE,  value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.epsilon,  DEFAULT_ZERO_TOLERANCE,  value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.epsilon,  DEFAULT_ZERO_TOLERANCE,  value;	  return    res.epsilon,    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	57	None	replace
107	[BUG]  [BUGGY]  return  epsilon,  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon,  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon,  DEFAULT_ZERO_TOLERANCE;	  return    res.epsilon,    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	57	None	replace
108	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    entry.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	58	None	replace
109	[BUG]  [BUGGY]  res.setEntry(realAccess.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(realAccess.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(realAccess.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    *    realAccess.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	64	None	replace
110	[BUG]  [BUGGY]  Iterator  <  RealVector>  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  Iterator  <  RealVector>  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	Iterator  <  RealVector>  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    RealVector    v    =(RealVector)iter.next();    if(v.getEntry(v.getKey())!=    null)    {    continue;    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	65	None	replace
111	[BUG]  [BUGGY]  res.setEntry(v,  iter.value()  *  v.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v,  iter.value()  *  v.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v,  iter.value()  *  v.getEntry(iter.value()));	  res.setEntry(value,    iter.value()    *    v.getEntry(iter.value()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	40	None	replace
112	[BUG]  [BUGGY]  res.setValue(iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(iter.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(iter.getValue());	  return    iter.getValue();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	37	None	replace
113	[BUG]  [BUGGY]  res.setIterator(new  RealVectorIterator(v.getIterator()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setIterator(new  RealVectorIterator(v.getIterator()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setIterator(new  RealVectorIterator(v.getIterator()));	  res.setIterator(v.getIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	55	None	replace
114	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));	  res.setEntry(v.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	41	None	replace
115	[BUG]  [BUGGY]  res  =  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res  =  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res  =  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE);	  if(v!=    null)    {    return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	54	None	replace
116	[BUG]  [BUGGY]  return  new  RealVectorIterator(res,  v.res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(res,  v.res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(res,  v.res);	  return    v.res;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
117	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	63	None	replace
118	[BUG]  [BUGGY]  return  epsilon.multiply;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon.multiply;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon.multiply;	  return    epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
119	[BUG]  [BUGGY]  return  epsilon.doubleValue();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon.doubleValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon.doubleValue();	  return    epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
120	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  value);	  return    new    RealVector(v.getValue(),    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
121	[BUG]  [BUGGY]  return  new  RealVector(value.getValue(),  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(value.getValue(),  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(value.getValue(),  epsilon);	  return    new    RealVector(v.getValue(),    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
122	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(v.key()),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(v.key()),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(v.key()),  v.getValue());	  return    new    RealVector(res.getEntry(v.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
123	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	61	None	replace
124	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  value,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  value,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  value,  epsilon);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	61	None	replace
125	[BUG]  [BUGGY]  return  realVector.toArray(new  RealVector[res.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  realVector.toArray(new  RealVector[res.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  realVector.toArray(new  RealVector[res.size()  ]);	  return    v.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
126	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  res,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  res,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  res,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
127	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  res,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  res,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  res,  epsilon);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
128	[BUG]  [BUGGY]  res  =  new  RealVector(v.getValue(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res  =  new  RealVector(v.getValue(),  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res  =  new  RealVector(v.getValue(),  v);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
129	[BUG]  [BUGGY]  return  iter.toArray(new  RealVector[entries.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.toArray(new  RealVector[entries.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.toArray(new  RealVector[entries.size()  ]);	  return    iter.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	52	None	replace
130	[BUG]  [BUGGY]  return  v,  res.epsilon,  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v,  res.epsilon,  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v,  res.epsilon,  DEFAULT_ZERO_TOLERANCE;	  return    res.epsilon,    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	57	None	replace
131	[BUG]  [BUGGY]  return  v,  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v,  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v,  DEFAULT_ZERO_TOLERANCE;	  return    res.epsilon,    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	57	None	replace
132	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));	  res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
133	[BUG]  [BUGGY]  return  iter.newOpenMapRealVector(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.newOpenMapRealVector(v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.newOpenMapRealVector(v);	  return    iter.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	53	None	replace
134	[BUG]  [BUGGY]  return  iter.newOpenMapRealVector(res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.newOpenMapRealVector(res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.newOpenMapRealVector(res);	  return    iter.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	53	None	replace
135	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.value()  *  realVector.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
136	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  value  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  value  *  v.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  value  *  v.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
137	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(iter.key()),  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(iter.key()),  iter.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(iter.key()),  iter.getValue());	  return    new    RealVector(res.getEntry(iter.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
138	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  d,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  d,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  d,  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
139	[BUG]  [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getValue(),  DEFAULT_ZERO_TOLERANCE,  d);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
140	[BUG]  [BUGGY]  if(iter.getIterator()!=  null)  {  return  iter.getIterator();  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(iter.getIterator()!=  null)  {  return  iter.getIterator();  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(iter.getIterator()!=  null)  {  return  iter.getIterator();  }	  return    iter.getIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
141	[BUG]  [BUGGY]  res.setEntry(value,  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(value,  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(value,  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v,    iter.value()    *    value.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
142	[BUG]  [BUGGY]  return  openMapRealVector.newOpenMapRealVector();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  openMapRealVector.newOpenMapRealVector();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  openMapRealVector.newOpenMapRealVector();	  return    v.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
143	[BUG]  [BUGGY]  return  new  OpenMapRealVectorIterator(res,  v.newOpenMapRealVector());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  OpenMapRealVectorIterator(res,  v.newOpenMapRealVector());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  OpenMapRealVectorIterator(res,  v.newOpenMapRealVector());	  return    v.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
144	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  epsilon);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
145	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  value);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
146	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value  *  iter.value()  /  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  value  *  iter.value()  /  v.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  value  *  iter.value()  /  v.getEntry(iter.key()));	  res.setEntry(iter.key(),    value    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	21	None	replace
147	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  r);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  r);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  r);	  return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
148	[BUG]  [BUGGY]  return  new  RealVectorIterator(new  OpenMapRealVectorIterator(v,  res));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(new  OpenMapRealVectorIterator(v,  res));  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(new  OpenMapRealVectorIterator(v,  res));	  return    new    RealVectorIterator(res,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
149	[BUG]  [BUGGY]  return  rs.getIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  rs.getIterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  rs.getIterator();	  return    res.getIterator()    +    1;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
150	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value.value()  *  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  value.value()  *  v.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  value.value()  *  v.getEntry(iter.key()));	  res.setEntry(value.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
151	[BUG]  [BUGGY]  return  res.newOpenMapRealVector(v,  current);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.newOpenMapRealVector(v,  current);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newOpenMapRealVector(v,  current);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
152	[BUG]  [BUGGY]  res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.getEntry(v.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.getEntry(v.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  DEFAULT_ZERO_TOLERANCE  *  iter.getEntry(v.key()));	  res.setEntry(v.key(),    DEFAULT_ZERO_TOLERANCE    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	22	None	replace
153	[BUG]  [BUGGY]  return  v.ebeMultiply;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.ebeMultiply;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.ebeMultiply;	  return    v.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
154	[BUG]  [BUGGY]  return  v.value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.value;	  return    v.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
155	[BUG]  [BUGGY]  res.setEntry(iter.value(),  iter.value()  *  realVector.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.value(),  iter.value()  *  realVector.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.value(),  iter.value()  *  realVector.getEntry(iter.value()));	  res.setEntry(iter.value(),    iter.value()    *    v.getEntry(iter.value()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
156	[BUG]  [BUGGY]  res.setEntry(iter.value(),  iter.value()  *  RealVector.getEntry(iter.value()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.value(),  iter.value()  *  RealVector.getEntry(iter.value()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.value(),  iter.value()  *  RealVector.getEntry(iter.value()));	  res.setEntry(iter.value(),    iter.value()    *    v.getEntry(iter.value()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
157	[BUG]  [BUGGY]  res.setEntry(realVector.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(realVector.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(realVector.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    *    realVector.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	47	None	replace
158	[BUG]  [BUGGY]  return  v,  DEFAULT_ZERO_TOLERANCE,  res.epsilon;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v,  DEFAULT_ZERO_TOLERANCE,  res.epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v,  DEFAULT_ZERO_TOLERANCE,  res.epsilon;	  return    v,    res.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
159	[BUG]  [BUGGY]  return  new  RealVector(res.getEntry(iter.key()),  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(res.getEntry(iter.key()),  iter.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(res.getEntry(iter.key()),  iter.getValue());	  return    new    RealVector(v.getEntry(iter.key()),    res.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
160	[BUG]  [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    entry.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	58	None	replace
161	[BUG]  [BUGGY]  res.setOpenMapRealVector(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setOpenMapRealVector(v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setOpenMapRealVector(v);	  res.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	25	None	replace
162	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(entry.getKey(),  entry.getValue());	  res.newOpenMapRealVector();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	25	None	replace
163	[BUG]  [BUGGY]  return  new  RealVector(iter.getEntry(res.key()),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(iter.getEntry(res.key()),  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(iter.getEntry(res.key()),  v.getValue());	  return    new    RealVector(res.getEntry(iter.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
164	[BUG]  [BUGGY]  res.setValue(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setValue(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setValue(v.getKey(),  DEFAULT_ZERO_TOLERANCE);	  res.setValue(v.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
165	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  epsilon);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
166	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  d);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  d);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE,  d);	  return    new    RealVector(v.getKey(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
167	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE,  d,  epsilon);	  return    new    RealVector(v.getValue(),    DEFAULT_ZERO_TOLERANCE,    d);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	62	None	replace
168	[BUG]  [BUGGY]  if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  v);  }  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  v);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(v!=  null)  {  return  new  RealVectorIterator(res,  DEFAULT_ZERO_TOLERANCE,  v);  }	  if(v!=    null)    {    return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE);    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	54	None	replace
169	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  res);	  return    new    RealVectorIterator(value,    res,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	28	None	replace
170	[BUG]  [BUGGY]  return  iter.getIterator(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.getIterator(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.getIterator(),  DEFAULT_ZERO_TOLERANCE);	  return    iter.getIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
171	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  *  realVector.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  iter.value()  *  realVector.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  iter.value()  *  realVector.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    *    realVector.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	47	None	replace
172	[BUG]  [BUGGY]  return  value.epsilon,  res.epsilon;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  value.epsilon,  res.epsilon;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  value.epsilon,  res.epsilon;	  return    res.epsilon,    value;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
173	[BUG]  [BUGGY]  return  new  RealVector(v.getKey(),  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getKey(),  res);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getKey(),  res);	  return    new    RealVector(v.getValue(),    res);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
174	[BUG]  [BUGGY]  return  res.toArray(new  RealVector[res.size()  *  1]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.toArray(new  RealVector[res.size()  *  1]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.toArray(new  RealVector[res.size()  *  1]);	  return    res.toArray(new    RealVector[res.size()    +    1]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	33	None	replace
175	[BUG]  [BUGGY]  res.add(new  RealVector[res.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.add(new  RealVector[res.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.add(new  RealVector[res.size()  ]);	  res.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	31	None	replace
176	[BUG]  [BUGGY]  return  new  RealVector(v.getValue(),  ebeMultiply);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getValue(),  ebeMultiply);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getValue(),  ebeMultiply);	  return    new    RealVector(v.getValue(),    epsilon);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
177	[BUG]  [BUGGY]  res.setEntry(v.value(),  iter.value()  *  value.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.value(),  iter.value()  *  value.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.value(),  iter.value()  *  value.getEntry(iter.key()));	  res.setEntry(value.value(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
178	[BUG]  [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE,  v);	  return    new    RealVectorIterator(res,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
179	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  *  value.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  iter.value()  *  value.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  iter.value()  *  value.getEntry(iter.key()));	  res.setEntry(value.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
180	[BUG]  [BUGGY]  return  v.toArray(new  RealVector[entries.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.toArray(new  RealVector[entries.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.toArray(new  RealVector[entries.size()  ]);	  return    v.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
181	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  RealVector.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.getKey(),  iter.value()  *  RealVector.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.getKey(),  iter.value()  *  RealVector.getEntry(iter.key()));	  res.setEntry(iter.getKey(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
182	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  RealVector  v  =(RealVector)iter.next();  if(v.getEntry(v.getKey())!=  null)  {  continue	  for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    RealVector    v    =(RealVector)iter.next();    if(v.getEntry(v.getKey())!=    null)    {    continue;    }    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	65	None	replace
183	[BUG]  [BUGGY]  return  iter.epsilon,  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.epsilon,  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.epsilon,  DEFAULT_ZERO_TOLERANCE;	  return    iter.epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	56	None	replace
184	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  V.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  V.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(iter.key(),  iter.value()  *  V.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    *    realAccess.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	64	None	replace
185	[BUG]  [BUGGY]  res.setIterator(entries.getIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setIterator(entries.getIterator());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setIterator(entries.getIterator());	  res.setIterator(v.getIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	55	None	replace
186	[BUG]  [BUGGY]  return  iter.toArray(new  RealVector[iter.size()  ]);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.toArray(new  RealVector[iter.size()  ]);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.toArray(new  RealVector[iter.size()  ]);	  return    iter.toArray(new    RealVector[res.size()    ]);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	52	None	replace
187	[BUG]  [BUGGY]  return  res.getIterator()  *  1;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.getIterator()  *  1;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.getIterator()  *  1;	  return    res.getIterator()    +    1;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
188	[BUG]  [BUGGY]  return  iter.res;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  iter.res;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter.res;	  return    v.res;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
189	[BUG]  [BUGGY]  return  res.newOpenMapRealVector(d,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  res.newOpenMapRealVector(d,  v);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newOpenMapRealVector(d,  v);	  return    res.newOpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
190	[BUG]  [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVectorIterator(value,  DEFAULT_ZERO_TOLERANCE,  v.getValue());	  return    new    RealVectorIterator(value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
191	[BUG]  [BUGGY]  return  epsilon.value;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  epsilon.value;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  epsilon.value;	  return    epsilon;    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
192	[BUG]  [BUGGY]  return  v.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  v.getValue()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v.getValue()  *  DEFAULT_ZERO_TOLERANCE;	  return    v.getValue();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	24	None	replace
193	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue()  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(res.key()),  v.getValue()  +  1);	  return    new    RealVector(v.getEntry(iter.key()),    v.getValue()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	60	None	replace
194	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(res.key()),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);	  return    new    RealVector(v.getEntry(res.key()),    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	59	None	replace
195	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  *  realAccess.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  res.setEntry(v.key(),  iter.value()  *  realAccess.getEntry(iter.key()));  [BUGGY]      return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	res.setEntry(v.key(),  iter.value()  *  realAccess.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
196	[BUG]  [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }              [BUGGY]  return  new  RealVector(v.getEntry(res.key()),  iter.value());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  new  RealVector(v.getEntry(res.key()),  iter.value());	  return    new    RealVector(v.getEntry(iter.key()),    res.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
