projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.get(key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<=epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)<epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)entries.get(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)entries.get(key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<epsilon*DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>epsilon=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.get(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.get(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.get(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)this.entries.get(key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)entries.get(this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>epsilon=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>epsilon=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>epsilon=this.entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=this.entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entry.getValue().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFAULT_ZERO_TOLERANCE)<epsilon*DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<=DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=this.entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)this.entries.get(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(Entry)entries.get(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entry.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=iter.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)<=DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)<=epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)<DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)<=DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-DEFAULT_ZERO_TOLERANCE)<epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-this.value)<epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=this.entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Iterator<Entry>iter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value*epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFAULT_ZERO_TOLERANCE,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=iterator.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=this.entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFAULT_ZERO_TOLERANCE)<DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-DEFAULT_ZERO_TOLERANCE)<DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(key-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.entrySet().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.values().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)<DEFAULT_ZERO_TOLERANCE*DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entries.values().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entries.entrySet().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=(entries!=null)?entries.iterator().next():DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)>=epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value)==epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-value)>=DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<K,V>current=iter.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entry<?>current=entries.get(key).next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entrycurrent=entries.get(key).next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value+DEFAULT_ZERO_TOLERANCE)<DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value/DEFAULT_ZRO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220returnFastMath.abs(value-current)<epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.iterator().next().getEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Entryepsilon=entries.iterator().next().getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java220Iterator<Entry>iter=entries.values().iterator();
