projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value/1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entryentry=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.nextToDouble();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.entrySet.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=this.values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=currentEntry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=this.entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(null);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=this.entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=currentEntry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.add(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.put(key,current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry.put(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,virtualSize,epsilon));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,virtualSize,value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.clear();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setDefaultValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize-value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setDefaultValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,key-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,newDouble(value).doubleValue());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet().put(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=currents.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.getIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet.put(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)iter.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();resize=current.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=(Entry)current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(this.entries!=null)?entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=current.getValue();entries.put(key,current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.put(key,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=currentEntry.getValue();entries.put(key,current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,values[value-1]-value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(null,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,resize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.entrySet.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)this.epsilon.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)this.epsilon.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=current.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,key,value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,value,epsilon));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,epsilon,value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,value,virtualSize));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140this.epsilon=(Entry)current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=(Entry)this.value.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,newDouble(key).doubleValue());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,newDouble(value),virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setDefaultValue(this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,newDouble(key));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,newDouble(value),epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value-virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize-key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize-value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,epsilon-value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=values.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value/2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value/2.0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,value/1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=this.current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=current.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(virtualSize,value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.epsilon,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,epsilon,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=(Entry)values.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value,true);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(virtualSize,this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=values.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(virtualSize,value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=currentEntry.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)this.entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)entries.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)values.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.nextToDouble()+1;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.nextToFloat();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setDefaultValue(this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,ValueUtils.valueOf(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,ValueUtils.EMPTY_STRING_VALUE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.current.values.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=this.currents.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=current.getIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=this.entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=this.entry.getEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.getValue()+1;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry.put(value,key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry.put(key,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry.put(key,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(virtualSize,value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.epsilon,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize,key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,virtualSize,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entryentry=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entryentry=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet().put(key,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet().put(key,newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet().put(value,key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=currentEntry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=this.currentEntry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=value;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140this.epsilon=epsilon;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=entries.iterator().next();this.epsilon=value;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=currentEntry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=this.currentEntry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.value,true);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=this.current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=values[current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=this.entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next().entry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=this.entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,key,epsilon));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,epsilon,virtualSize));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,this.epsilon,virtualSize));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.setDefaultValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.setValue(value,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)this.entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entries.iterator().next();resize=current.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=values.iterator().next();resize=current.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(virtualSize,this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(values!=null)?this.entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(values!=null)?entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(values==null)?this.entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=currentEntry.getValue();entries.add(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.add(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.add(current,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet.put(key,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entrySet.put(value,key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.get(key).iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.entrySet().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setDefaultValue(this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(values==null)?entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(this.entries==null)?entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(newdouble[values.length],epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value-DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.setValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.nextToDouble(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,values.length-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(newdouble[values.length],DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,value/DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=(Entry)current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,epsilon-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.getEmptyIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=(Entry)current.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=entries.iterator().next();this.epsilon=(Entry)current.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=values.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,virtualSize,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=iter.getValue();entries.add(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=currents.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setDefaultValue(value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize-DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=newDouble(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)entry.clone();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=this.current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,resize,value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setDefaultValue(value,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setRealValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,resize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)values[iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=current.getEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entryentry=(Entry)iter2.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=values.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>entries=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=entry.getValue();entries.put(value,current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,this.epsilon,epsilon));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=values[current.getValue()];
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.entrySet().iterator().next();resize=current.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=iterator().next();resize=current.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,ValueUtils.doubleValue(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(newdouble[values.length],epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)entries.get(key);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(newdouble[values.length]);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=iter.getValue();entries.put(key,current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setDefaultValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,virtualSize,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,DEFAULT_ZERO_TOLERANCE,virtualSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=this.current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=current.entries().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setDefaultValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,DEFAULT_ZOOM_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,DEFAULT_ZRO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<?>current=iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry.put(value,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iteratoriter=(value!=null)?entries.iterator():DEFAULT_ZERO_TOLERANCE.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.entrySet().iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(this.epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,virtualSize,this.epsilon));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entry=(Entry)iter.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.epsilon,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(key,virtualSize,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entry<K,V>current=this.entry.getEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(value,this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,virtualSize,DEFAULT_ZERO_TOLERANCE));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.add(newOpenMapRealVector(value,DEFAULT_ZERO_TOLERANCE,value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=entries.iterator().next();this.epsilon=(Entry)current.clone();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entrycurrent=(Entry)iter.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140iter.setValue(DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140resize=iter.getEntryCount();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=this.current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(value,this.epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap)value).setValue(null,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Entryentry=(Entry)iter.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140Iterator<Entry>iter=current.entries().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140((OpenIntToDoubleHashMap<Double>)value).setValue(this.value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java140entries.put(value,newDouble(value).doubleValue());
