bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  cannot  find  symbol  	28	None	replace
2	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [CE]  no  suitable  method  found  for  checkVectorDimensions(double)  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  checkVectorDimensions(dimension);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(double)	28	None	replace
3	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  variable);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  cannot  find  symbol  	28	None	replace
4	[BUG]  [BUGGY]  Iterator  <  RealVector>  iter  =  v.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  iter  =  v.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  iter  =  v.entries.iterator();	  Iterator    <    RealVector>    iter    =    this.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
5	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
6	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
7	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
8	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getKey());    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
9	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  v.getDimension());  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getKey(),  v.getDimension());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getKey());    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
10	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntryHashMap().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntryHashMap().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.getEntryHashMap().iterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
11	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.entrySet().iterator();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.entrySet().iterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntrySet().iterator();    	non-compiled	[CE]  ';'  expected	43	None	replace
12	[BUG]  [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  entries.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  ';'  expected	86	None	replace
13	[BUG]  [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  entry.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  entry.entrySet().iterator();	  Iterator    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  ';'  expected	86	None	replace
14	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.current.getEntry();  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.current.getEntry();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  this.current.getEntry();	  Entry    <    RealVector,    RealVector>    entry    =    current.getEntry();    	non-compiled	[CE]  ';'  expected	62	None	replace
15	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.getValue();  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.getValue();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  current.getValue();	  Entry    <    RealVector,    RealVector>    entry    =    current.getEntry();    	non-compiled	[CE]  ';'  expected	62	None	replace
16	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  current,  v);  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  current,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  current,  v);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    current);    	non-compiled	[CE]  ';'  expected	34	None	replace
17	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  current);  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  current);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  current);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    current);    	non-compiled	[CE]  ';'  expected	34	None	replace
18	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  current,  DEFAULT_ZERO_TOLERANCE);  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  current,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  current,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    current);    	non-compiled	[CE]  ';'  expected	34	None	replace
19	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();	  float    dimension    =    v.getDimension();    	non-compiled	[CE]  ';'  expected	73	None	replace
20	[BUG]  [BUGGY]  Double  dimension  =  v.getDimension();  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Double  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Double  dimension  =  v.getDimension();	  float    dimension    =    v.getDimension();    	non-compiled	[CE]  ';'  expected	73	None	replace
21	[BUG]  [BUGGY]  long  dimension  =  v.getDimension();  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  long  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	long  dimension  =  v.getDimension();	  float    dimension    =    v.getDimension();    	non-compiled	[CE]  ';'  expected	73	None	replace
22	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.entries.iterator();  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.entries.iterator();	  Iterator    <    RealVector>    entries    =    v.iterator();    	non-compiled	[CE]  ';'  expected	30	None	replace
23	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  v.entrySet().iterator();  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  v.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  v.entrySet().iterator();	  Iterator    <    RealVector>    entries    =    v.iterator();    	non-compiled	[CE]  ';'  expected	30	None	replace
24	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(null);  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(null);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(null);	  Entry    <    RealVector,    RealVector>    entry    =    v.getEntry(0);    	non-compiled	[CE]  ';'  expected	3	None	replace
25	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(1);  [CE]  ';'  expected  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(1);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(1);	  Entry    <    RealVector,    RealVector>    entry    =    v.getEntry(0);    	non-compiled	[CE]  ';'  expected	3	None	replace
26	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(i);  [CE]  ';'  expected  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(i);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(i);	  Entry    <    RealVector,    RealVector>    entry    =    v.getEntry(0);    	non-compiled	[CE]  ';'  expected	3	None	replace
27	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    defsilon);    	non-compiled	[CE]  ';'  expected	88	None	replace
28	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getKey();  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getKey();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getKey();	  Entry    <    RealVector,    RealVector>    entry    =    v.getValue();    	non-compiled	[CE]  ';'  expected	1	None	replace
29	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEpsilon();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEpsilon();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEpsilon();	  Entry    <    RealVector,    RealVector>    entry    =    v.getValue();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	1	None	replace
30	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.current.getEntrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.current.getEntrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.current.getEntrySet().iterator();	  Iterator    <    RealVector>    entries    =    current.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
31	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryHashMap().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryHashMap().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.getEntryHashMap().iterator();	  Iterator    <    RealVector>    entries    =    current.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
32	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.openMapRealVector.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.openMapRealVector.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.openMapRealVector.entrySet().iterator();	  Iterator    <    RealVector>    entries    =    this.openMapRealVector.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	67	None	replace
33	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.openMapRealVector.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.openMapRealVector.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.openMapRealVector.iterator();	  Iterator    <    RealVector>    entries    =    this.openMapRealVector.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	67	None	replace
34	[BUG]  [BUGGY]  float  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  checkVectorDimensions(float,double)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  float  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	float  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  float    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(float,double)	85	None	replace
35	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  /  2;  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension()  /  2;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension()  /  2;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  ';'  expected	11	None	replace
36	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  2  +  1;  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension()  *  2  +  1;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension()  *  2  +  1;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  ';'  expected	11	None	replace
37	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  4;  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension()  *  4;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension()  *  4;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  ';'  expected	11	None	replace
38	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
39	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
40	[BUG]  [BUGGY]  java.lang.AssertionError:  v.getDimension()  ==  null;  [CE]  not  a  statement  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  java.lang.AssertionError:  v.getDimension()  ==  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	java.lang.AssertionError:  v.getDimension()  ==  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
41	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  [CE]  not  a  statement  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
42	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    V.getDimension();    	non-compiled	[CE]  not  a  statement	83	None	replace
43	[BUG]  [BUGGY]  int  dimension  =  V.getDimension();  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  V.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  V.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    V.getDimension();    	non-compiled	[CE]  ';'  expected	83	None	replace
44	[BUG]  [BUGGY]  double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  ';'  expected	10	None	replace
45	[BUG]  [BUGGY]  Double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Double  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	10	None	replace
46	[BUG]  [BUGGY]  long  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  possible  loss  of  precision  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  long  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	long  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
47	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.entryIterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
48	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.iterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
49	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [CE]  cannot  find  symbol  current  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  this.current.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  this.current.entryIterator();	  Iterator    iter    =    current.entryIterator();    	non-compiled	[CE]  cannot  find  symbol  current	42	None	replace
50	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  this.realAccess);  [CE]  cannot  find  symbol  realAccess  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  this.realAccess);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  this.realAccess);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    realAccess);    	non-compiled	[CE]  cannot  find  symbol  realAccess	89	None	replace
51	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getValue());	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
52	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.size());  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.size());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.size());	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
53	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	7	None	replace
54	[BUG]  [BUGGY]  if(v.isMultiply())  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.isMultiply())  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.isMultiply())  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
55	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	57	None	replace
56	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.v.getEntry(v.getDimension());  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.v.getEntry(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  this.v.getEntry(v.getDimension());	  Entry    <    RealVector,    RealVector>    entry    =    this.v.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	replace
57	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =(this.v!=  null)?  this.v.getEntry()  :  null;  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =(this.v!=  null)?  this.v.getEntry()  :  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =(this.v!=  null)?  this.v.getEntry()  :  null;	  Entry    <    RealVector,    RealVector>    entry    =    this.v.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	replace
58	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,double,double)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	  Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,double,double)	54	None	replace
59	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  cannot  find  symbol  value  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);	  Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol  value	54	None	replace
60	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  value);  [CE]  cannot  find  symbol  value  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  cannot  find  symbol  value	33	None	replace
61	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  cannot  find  symbol  value  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  cannot  find  symbol  value	33	None	replace
62	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  this);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,double,RealVector,OpenMapRealVector)  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  this);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,double,RealVector,OpenMapRealVector)	33	None	replace
63	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  boolean    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  not  a  statement	65	None	replace
64	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  boolean    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  ';'  expected	65	None	replace
65	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.getEntryIterator();  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.getEntryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  this.current.getEntryIterator();	  Iterator    <    Entry>    iter    =    current.getEntryIterator();    	non-compiled	[CE]  ';'  expected	38	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entryIterator();  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  current.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  current.entryIterator();	  Iterator    <    Entry>    iter    =    current.getEntryIterator();    	non-compiled	[CE]  ';'  expected	38	None	replace
67	[BUG]  [BUGGY]  Iterator  <  RealVector>  iter  =  v.values().iterator();  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  iter  =  v.values().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  iter  =  v.values().iterator();	  Iterator    <    RealVector>    iter    =    v.entrySet().iterator();    	non-compiled	[CE]  ';'  expected	53	None	replace
68	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
69	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
70	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
71	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
72	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getValue());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
73	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getDimension());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getValue());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	25	None	replace
75	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	25	None	replace
76	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
77	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  value);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
78	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
79	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.current.getEntryIterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.current.getEntryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.current.getEntryIterator();	  Iterator    <    RealVector>    entries    =    current.getEntryIterator();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
83	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryIterator(v);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntryIterator(v);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.getEntryIterator(v);	  Iterator    <    RealVector>    entries    =    current.getEntryIterator();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
84	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);	  Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
85	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
86	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension()  +  1;  checkIntegerDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension()  +  1;  checkIntegerDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension()  +  1;  checkIntegerDimensions(dimension);	  Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
87	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getEntry());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  v.getDimension());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEntry(),  v.getDimension());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getEntry());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
90	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
93	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  boolean  dimension  =  v.getDimension();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  boolean  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  boolean  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
94	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	55	None	replace
95	[BUG]  [BUGGY]  Int  dimension  =  v.getDimension();  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Int  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Int  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    Int    dimension    =    v.getDimension();    	non-compiled	[CE]  ';'  expected	82	None	replace
96	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  ';'  expected	27	None	replace
97	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  ';'  expected	19	None	replace
98	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  ';'  expected	19	None	replace
99	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  true);  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  true);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  ';'  expected	19	None	replace
100	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  double);  [CE]  '.class'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  double);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE,  double);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  '.class'  expected	19	None	replace
101	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  ';'  expected	56	None	replace
102	[BUG]  [BUGGY]  java.lang.AssertionError:  dimension  =  v.getDimension();  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  java.lang.AssertionError:  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	java.lang.AssertionError:  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	56	None	replace
103	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	56	None	replace
104	[BUG]  [BUGGY]  if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
105	[BUG]  [BUGGY]  if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
106	[BUG]  [BUGGY]  java.lang.AssertionError:  v.getDimension()!=  null;  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  java.lang.AssertionError:  v.getDimension()!=  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	java.lang.AssertionError:  v.getDimension()!=  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
107	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  [CE]  not  a  statement  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
108	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySparseIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySparseIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.getEntrySparseIterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySparseIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	31	None	replace
109	[BUG]  [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension()    +    1);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
110	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.entryIterator();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  this.entries.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  this.entries.entryIterator();	  Iterator    iter    =    v.entryIterator();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
111	[BUG]  [BUGGY]  Iterator  iter  =  entries.entryIterator();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  entries.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  entries.entryIterator();	  Iterator    iter    =    v.entryIterator();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
112	[BUG]  [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	null  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	60	None	replace
113	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(int,boolean)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(int,boolean)	17	None	replace
114	[BUG]  [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	openMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  false);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    true);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
115	[BUG]  [BUGGY]  openMapRealVector  =  new  OpenMapRealVector(v.getDimension(),  false);  [CE]  cannot  find  symbol  openMapRealVector  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  openMapRealVector  =  new  OpenMapRealVector(v.getDimension(),  false);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	openMapRealVector  =  new  OpenMapRealVector(v.getDimension(),  false);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    true);    	non-compiled	[CE]  cannot  find  symbol  openMapRealVector	17	None	replace
116	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getName());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
117	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  not  a  statement	72	None	replace
118	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  not  a  statement	72	None	replace
119	[BUG]  [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(n,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  n  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(n,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	n  =  v.getDimension();  checkVectorDimensions(n,  DEFAULT_ZERO_TOLERANCE);	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
120	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension());  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  checkVectorDimensions(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	checkVectorDimensions(v.getDimension());	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	36	None	replace
121	[BUG]  [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(n,  this);  [CE]  cannot  find  symbol  n  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(n,  this);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	n  =  v.getDimension();  checkVectorDimensions(n,  this);	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
122	[BUG]  [BUGGY]  Iterator  iter  =  v.entries.iterator();  [CE]  cannot  find  symbol  entries  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  v.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  v.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  cannot  find  symbol  entries	40	None	replace
123	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  this.entries.keySet().iterator();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
124	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  v.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  v.values().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  v.values().iterator();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
125	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,double)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    this);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,double)	21	None	replace
126	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  false);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,boolean)  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  false);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  false);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    this);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,boolean)	21	None	replace
127	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [CE]  cannot  find  symbol  expectedSize  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    expectedSize);    	non-compiled	[CE]  cannot  find  symbol  expectedSize	50	None	replace
128	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [CE]  incompatible  types  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    expectedSize);    	non-compiled	[CE]  incompatible  types	50	None	replace
129	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  resize);  [CE]  cannot  find  symbol  resize  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  resize);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  resize);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    expectedSize);    	non-compiled	[CE]  cannot  find  symbol  resize	50	None	replace
130	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.entries();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.entries();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.entries();	  Entry    <    RealVector,    RealVector>    entry    =    v.entry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	61	None	replace
131	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  false);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,boolean)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  false);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  false);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,boolean)	20	None	replace
132	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  true);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  true);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    true);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
133	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  true);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  true);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    true);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
134	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension());    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	84	None	replace
135	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension());  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension());	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension());    	non-compiled	[CE]  ';'  expected	84	None	replace
136	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  v.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  v.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  v.entries.iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
137	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  current.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  current.entries.iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
138	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	80	None	replace
139	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  }  [CE]  cannot  find  symbol  V  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  V	80	None	replace
140	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  this.current.entrySet().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
141	[BUG]  [BUGGY]  java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
142	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
143	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
144	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
145	[BUG]  [BUGGY]  double  dimension  =  v.getDimension()  +  1;  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension()  +  1;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension()  +  1;	  int    dimension    =    v.getDimension()    +    1;    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	9	None	replace
146	[BUG]  [BUGGY]  if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,double)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  }	  if(v    ==    null)    {    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    }    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,double)	64	None	replace
147	[BUG]  [BUGGY]  int  dimension  =  v.getSize();  checkVectorDimensions(dimension);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getSize();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getSize();  checkVectorDimensions(dimension);	  Integer    dimension    =    v.getSize();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
148	[BUG]  [BUGGY]  Integer  dimension  =  v.getSize()  +  1;  checkVectorDimensions(dimension);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getSize()  +  1;  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getSize()  +  1;  checkVectorDimensions(dimension);	  Integer    dimension    =    v.getSize();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
149	[BUG]  [BUGGY]  Integer  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  Integer    dimension    =    v.getSize();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
150	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  current.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  current.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  current.entries.iterator();	  Iterator    <    Entry>    entries    =    v.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
151	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  v.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  v.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  v.entrySet().iterator();	  Iterator    <    Entry>    entries    =    v.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
152	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	5	None	replace
153	[BUG]  [BUGGY]  Dimension  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Dimension  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Dimension  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
154	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  current.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  current.iterator();	  Iterator    <    Entry>    iter    =    v.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	37	None	replace
155	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
156	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
157	[BUG]  [BUGGY]  int  dimension  =  v.getDimension()  *  2  -  1;  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension()  *  2  -  1;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension()  *  2  -  1;	  int    dimension    =    v.getDimension()    *    2;    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	11	None	replace
158	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
159	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
160	[BUG]  [BUGGY]  java.lang.Integer  dimension  =  v.getDimension();  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  java.lang.Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	java.lang.Integer  dimension  =  v.getDimension();	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
161	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    java.lang.Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	68	None	replace
162	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	8	None	replace
163	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.getEntry(0);  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.getEntry(0);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  current.getEntry(0);	  Entry    <    RealVector,    RealVector>    entry    =    current.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	62	None	replace
164	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  V  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  V.getDimension());  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  V	80	None	replace
165	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Dimension  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Dimension  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Dimension  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
166	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	25	None	replace
167	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	25	None	replace
168	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
169	[BUG]  [BUGGY]  Double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  incompatible  types  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Double  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  incompatible  types	54	None	replace
170	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  openMapRealVector.getEntrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  openMapRealVector.getEntrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  openMapRealVector.getEntrySet().iterator();	  Iterator    <    RealVector>    entries    =    this.openMapRealVector.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	67	None	replace
171	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  v.getDimension());  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getName(),  v.getDimension());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getName());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
172	[BUG]  [BUGGY]  float  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [CE]  possible  loss  of  precision  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  float  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	float  dimension  =  v.getDimension()  *  DEFAULT_ZERO_TOLERANCE;	  int    dimension    =    v.getDimension()    *    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
173	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getEntry());  [CE]  method  getEntry  in  class  RealVector  cannot  be  applied  to  given  types;  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getEntry());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v.getEntry());	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  method  getEntry  in  class  RealVector  cannot  be  applied  to  given  types;	33	None	replace
174	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    value    =    v.getDimension();    checkVectorDimensions(value);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	78	None	replace
175	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  [CE]  cannot  find  symbol  value  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    value    =    v.getDimension();    checkVectorDimensions(value);    	non-compiled	[CE]  cannot  find  symbol  value	78	None	replace
176	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  else  {  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  else  {  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDimensions(value);  }  else  {	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    value    =    v.getDimension();    checkVectorDimensions(value);    	non-compiled	[CE]  ';'  expected	78	None	replace
177	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.epsilon.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  this.epsilon.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  this.epsilon.entries.iterator();	  Iterator    <    Entry>    entries    =    v.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
178	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  0,  DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,int,double)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  0,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  0,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,int,double)	32	None	replace
179	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  cannot  find  symbol  value  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE,  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
180	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	27	None	replace
181	[BUG]  [BUGGY]  if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	27	None	replace
182	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Dimension  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
183	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  else  {  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  else  {  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  else  {	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  ';'  expected	27	None	replace
184	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	26	None	replace
185	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  ';'  expected	26	None	replace
186	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  not  a  statement	26	None	replace
187	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZRO_TOLERANCE);  [CE]  cannot  find  symbol  DEFAULT_ZRO_TOLERANCE  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZRO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZRO_TOLERANCE);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    realAccess);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ZRO_TOLERANCE	89	None	replace
188	[BUG]  [BUGGY]  Iterator  <  RealVector>  iter  =  current.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  iter  =  current.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  iter  =  current.entrySet().iterator();	  Iterator    <    RealVector>    iter    =    v.entrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	53	None	replace
189	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	7	None	replace
190	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	7	None	replace
191	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
192	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	5	None	replace
193	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
194	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  v.getDimension());  Integer  dimension  =  v.getDimension();  checkVectorDimensions	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  not  a  statement	5	None	replace
195	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  expectedSize);  [CE]  cannot  find  symbol  expectedSize  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  expectedSize);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension,  expectedSize);	  Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  expectedSize	79	None	replace
196	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	28	None	replace
197	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(variable);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(variable);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(variable);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  cannot  find  symbol  	28	None	replace
198	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  checkVectorDimensions(variable);  }  [CE]  no  suitable  method  found  for  checkVectorDimensions(int,int)  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  checkVectorDimensions(variable);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  v.getDimension());  checkVectorDimensions(variable);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(int,int)	28	None	replace
199	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  null;  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()  ==  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
200	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  if(v.getDimension()  ==  null)  {  AssertionError:  v.getDimension()  ==  null;  }  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  if(v.getDimension()  ==  null)  {  AssertionError:  v.getDimension()  ==  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  if(v.getDimension()  ==  null)  {  AssertionError:  v.getDimension()  ==  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
201	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  value);  [CE]  cannot  find  symbol  value  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension(),  value);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol  value	16	None	replace
202	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.getIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  current.getIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  current.getIterator();	  Iterator    <    Entry>    iter    =    current.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
203	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntrySparseIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.getEntrySparseIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.getEntrySparseIterator();	  Iterator    <    RealVector>    entries    =    v.getEntrySparseIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	31	None	replace
204	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension());    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	84	None	replace
205	[BUG]  [BUGGY]  n  =  v.getDimension();  checkMultiply(v);  [CE]  cannot  find  symbol  n  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  n  =  v.getDimension();  checkMultiply(v);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	n  =  v.getDimension();  checkMultiply(v);	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
206	[BUG]  [BUGGY]  n  =  v.getDimension();  [CE]  cannot  find  symbol  n  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  n  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	n  =  v.getDimension();	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
207	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getValue());  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getValue());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getValue());	  Entry    <    RealVector,    RealVector>    entry    =    v.getValue();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	1	None	replace
208	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE    	non-compiled	[CE]  not  a  statement	72	None	replace
209	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	60	None	replace
210	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	60	None	replace
211	[BUG]  [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()  ==  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  java.lang.AssertionError:  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  not  a  statement	56	None	replace
212	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	56	None	replace
213	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  entries.entry();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  entries.entry();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  entries.entry();	  Entry    <    RealVector,    RealVector>    entry    =    v.entry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	61	None	replace
214	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
215	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
216	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDestination());  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDestination());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDestination());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getEntry());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
217	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  null;  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  java.lang.AssertionError:  v.getDimension()!=  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
218	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  }	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
219	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	77	None	replace
220	[BUG]  [BUGGY]  if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v  ==  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	77	None	replace
221	[BUG]  [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	77	None	replace
222	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [CE]  cannot  find  symbol  expectedSize  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  expectedSize);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    expectedSize);    	non-compiled	[CE]  cannot  find  symbol  expectedSize	50	None	replace
223	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)	4	None	replace
224	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  dimension  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  dimension	24	None	replace
225	[BUG]  [BUGGY]  if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  dimension  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v  ==  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  dimension	24	None	replace
226	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  getEntry(v.getEntry());  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  getEntry(v.getEntry());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  getEntry(v.getEntry());	  Entry    <    RealVector,    RealVector>    entry    =    this.v.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	replace
227	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.v.entry();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  this.v.entry();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  this.v.entry();	  Entry    <    RealVector,    RealVector>    entry    =    this.v.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	replace
228	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	28	None	replace
229	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(variable);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(variable);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	28	None	replace
230	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  [CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)	6	None	replace
231	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();  [CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(Integer,Integer)	6	None	replace
232	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	25	None	replace
233	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();  }  [CE]  no  suitable  method  found  for  checkVectorDimensions(int,int)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  int  dimension  =  v.getDimension();  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(int,int)	25	None	replace
234	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  [CE]  incompatible  types  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  incompatible  types	57	None	replace
235	[BUG]  [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  no  suitable  method  found  for  checkVectorDimensions(int,double,double)  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	  int    dimension    =    v.getDimension();    checkVectorDimensions(dimension,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  no  suitable  method  found  for  checkVectorDimensions(int,double,double)	49	None	replace
236	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    null;    	non-compiled	[CE]  not  a  statement	58	None	replace
237	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	80	None	replace
238	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  V.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  V  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  V.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  V.getDimension();  int  dimension  =  V.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    V.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol  V	80	None	replace
239	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  current.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  iter  =  current.values().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  iter  =  current.values().iterator();	  Iterator    <    Entry>    iter    =    current.entrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
240	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkIntegerDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	7	None	replace
241	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIn  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIn  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  checkIn	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkIntegerDimensions(dimension);    	non-compiled	[CE]  not  a  statement	7	None	replace
242	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.v.getEntryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.v.getEntryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.v.getEntryIterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
243	[BUG]  [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(v);  [CE]  cannot  find  symbol  n  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  n  =  v.getDimension();  checkVectorDimensions(v);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	n  =  v.getDimension();  checkVectorDimensions(v);	  n    =    v.getDimension();    checkVectorDimensions(n);    	non-compiled	[CE]  cannot  find  symbol  n	36	None	replace
244	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  else  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	26	None	replace
245	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getDimension());  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getDimension());  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  v.getEntry(v.getDimension());	  Entry    <    RealVector,    RealVector>    entry    =    v.getEntry(0);    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	3	None	replace
246	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkV  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkV  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkV	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    value    =    v.getDimension();    checkVectorDimensions(value);    	non-compiled	[CE]  not  a  statement	78	None	replace
247	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDi  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDi  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  value  =  v.getDimension();  checkVectorDi	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    value    =    v.getDimension();    checkVectorDimensions(value);    	non-compiled	[CE]  not  a  statement	78	None	replace
248	[BUG]  [BUGGY]  int  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  int  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	int  dimension  =  v.getSize();  checkVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	  Integer    dimension    =    v.getSize();    checkVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
249	[BUG]  [BUGGY]  Iterator  <  RealVector>  iter  =  this.current.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  iter  =  this.current.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  iter  =  this.current.entries.iterator();	  Iterator    <    RealVector>    iter    =    current.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	66	None	replace
250	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [CE]  incompatible  types  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    int    dimension    =    v.getDimension());    	non-compiled	[CE]  incompatible  types	84	None	replace
251	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  epsilon);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,double)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  epsilon);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this,  epsilon);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v,    this);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(RealVector,OpenMapRealVector,double)	21	None	replace
252	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  v.getKey());  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  v.getKey());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  v.getKey());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getKey());    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
253	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  current);  [CE]  cannot  find  symbol  current  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  current);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  current);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    current);    	non-compiled	[CE]  cannot  find  symbol  current	34	None	replace
254	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_TOLERANCE,  v);  [CE]  cannot  find  symbol  DEFAULT_TOLERANCE  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_TOLERANCE,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_TOLERANCE,  v);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TOLERANCE	32	None	replace
255	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_PREFIX,  v);  [CE]  cannot  find  symbol  DEFAULT_PREFIX  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_PREFIX,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_PREFIX,  v);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    v,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIX	32	None	replace
256	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
257	[BUG]  [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [CE]  cannot  find  symbol  current  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  iter  =  this.current.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  iter  =  this.current.entries.iterator();	  Iterator    iter    =    current.entries.iterator();    	non-compiled	[CE]  cannot  find  symbol  current	40	None	replace
258	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  null;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
259	[BUG]  [BUGGY]  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Integer  dimension  =  v.getDimension();  CheckVectorDimensions(dimension,  DEFAULT_ZERO_TOLERANCE);	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
260	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  [CE]  incompatible  types  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    dimension    =    v.getDimension();    	non-compiled	[CE]  incompatible  types	56	None	replace
261	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()  ==  v.getDimension();	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()    ==    v.getDimension();    	non-compiled	[CE]  not  a  statement	70	None	replace
262	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.v.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  this.v.entries.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  this.v.entries.iterator();	  Iterator    <    Entry>    entries    =    v.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
263	[BUG]  [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.v.getEntry();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Entry  <  RealVector,  RealVector>  entry  =  current.v.getEntry();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Entry  <  RealVector,  RealVector>  entry  =  current.v.getEntry();	  Entry    <    RealVector,    RealVector>    entry    =    this.v.getEntry();    	non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	replace
264	[BUG]  [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  Entry>  entries  =  this.entries.entrySet().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  Entry>  entries  =  this.entries.entrySet().iterator();	  Iterator    <    Entry>    entries    =    this.entries.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
265	[BUG]  [BUGGY]  double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	double  dimension  =  v.getDimension();  AssertionError:  v.getDimension()!=  DEFAULT_ZERO_TOLERANCE;	          int    dimension    =    v.getDimension();    java.lang.AssertionError:    v.getDimension()!=    DEFAULT_ZERO_TOLERANCE;    	non-compiled	[CE]  not  a  statement	71	None	replace
266	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getEntry());  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getEntry());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue(),  v.getEntry());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getValue());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
267	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  v);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,double,RealVector,RealVector)  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE,  v,  v);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this,    DEFAULT_ZERO_TOLERANCE,    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,double,RealVector,RealVector)	33	None	replace
268	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.entryIterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.entryIterator();	  Iterator    <    RealVector>    entries    =    current.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	69	None	replace
269	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  current.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  current.iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  current.iterator();	  Iterator    <    RealVector>    entries    =    current.getEntryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	69	None	replace
270	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	24	None	replace
271	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	24	None	replace
272	[BUG]  [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySize().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  Iterator  <  RealVector>  entries  =  this.v.getEntrySize().iterator();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	Iterator  <  RealVector>  entries  =  this.v.getEntrySize().iterator();	  Iterator    <    RealVector>    entries    =    this.v.getEntrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
273	[BUG]  [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v.getDimension()!=  DEFAULT_ZERO_TOLERANCE)  {  Integer  dimension  =  v.getDimension();  Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  }	          Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    	non-compiled	[CE]  variable  dimension  is  already  defined  in  method  ebeMultiply(RealVector)	5	None	replace
274	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEpsilon());  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEpsilon());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getEpsilon());	  OpenMapRealVector    res    =    new    OpenMapRealVector(v.getEntry());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
275	[BUG]  [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	if(v!=  null)  {  int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  dimension  =  v.getDimension();  CheckVectorDimensions(dimension);  }	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    int    dimension    =    v.getDimension();    CheckVectorDimensions(dimension);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
276	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  [CE]  incompatible  types  [FE]        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  Integer  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  incompatible  types	60	None	replace
277	[BUG]  [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  [CE]  incompatible  types  [FE]          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());      [BUGGY]  boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();  [BUGGY]      OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	boolean  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  dimension);  Integer  dimension  =  v.getDimension();	          int    dimension    =    v.getDimension();    checkVectorDimensions(dimension);    Integer    dimension    =    v.getDimension();    	non-compiled	[CE]  incompatible  types	60	None	replace
