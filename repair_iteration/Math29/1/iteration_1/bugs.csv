bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  entry  #0  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	add	    int  dimension  =  v.getDimension();		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
2	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  [FE]  java.lang.AssertionError:  entry  #0  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    int  dimension  =  v.getDimension();		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
3	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  entry  #0  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	add	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
4	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [FE]  java.lang.AssertionError:  entry  #0  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
5	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  [CE]  cannot  find  symbol  value  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  value);		non-compiled	[CE]  cannot  find  symbol  value	2	None	add
6	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  entry  #0  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	add	    Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
7	[BUG]  [BUGGY]    Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [FE]  java.lang.AssertionError:  entry  #0  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Integer  dimension  =  v.getDimension();  checkVectorDimensions(dimension);		compilable	  [FE]  java.lang.AssertionError:  entry  #0  	2	3	add
8	[BUG]  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  size);  [CE]  cannot  find  symbol  size  [FE]            java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  size);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    int  dimension  =  v.getDimension();  checkVectorDimensions(dimension,  size);		non-compiled	[CE]  cannot  find  symbol  size	2	None	add
9	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [CE]  variable  res  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  variable  res  is  already  defined  in  method  ebeMultiply(RealVector)	1	None	replace
10	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,RealVector)  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  no  suitable  constructor  found  for  OpenMapRealVector(OpenMapRealVector,RealVector)	1	None	replace
11	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [CE]  reference  to  OpenMapRealVector  is  ambiguous,  both  constructor  OpenMapRealVector(Double[])  in  OpenMapRealVector  and  constructor  OpenMapRealVector(OpenMapRealVector)  in  OpenMapRealVector  match  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(null);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  reference  to  OpenMapRealVector  is  ambiguous,  both  constructor  OpenMapRealVector(Double[])  in  OpenMapRealVector  and  constructor  OpenMapRealVector(OpenMapRealVector)  in  OpenMapRealVector  match	1	None	replace
12	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector();  [CE]  variable  res  is  already  defined  in  method  ebeMultiply(RealVector)  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector();	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  variable  res  is  already  defined  in  method  ebeMultiply(RealVector)	1	None	replace
13	[BUG]  [BUGGY]    Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  RealVector>  entries  =  v.getEntrySet().iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
14	[BUG]  [BUGGY]    Iterator  <  RealVector>  iter  =  entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  iter  =  entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  RealVector>  iter  =  entries.iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
15	[BUG]  [BUGGY]    Iterator  <  RealVector>  entries  =  v.getEntryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  RealVector>  entries  =  v.getEntryIterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  RealVector>  entries  =  v.getEntryIterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
16	[BUG]  [BUGGY]    Entry  <  RealVector,  RealVector>  entry  =  v.getEntry();  [CE]  type  RealVector.Entry  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Entry  <  RealVector,  RealVector>  entry  =  v.getEntry();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Entry  <  RealVector,  RealVector>  entry  =  v.getEntry();		non-compiled	[CE]  type  RealVector.Entry  does  not  take  parameters	2	None	add
17	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());  [CE]  cannot  find  symbol  size  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getDimension());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  cannot  find  symbol  size	1	None	replace
18	[BUG]  [BUGGY]    Iterator  <  Entry>  iter  =  entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Entry>  iter  =  entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  Entry>  iter  =  entries.iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
19	[BUG]  [BUGGY]    Iterator  iter  =  entries.iterator();  [CE]  cannot  find  symbol  size  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  iter  =  entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  iter  =  entries.iterator();		non-compiled	[CE]  cannot  find  symbol  size	2	None	add
20	[BUG]  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Entry>  entries  =  this.entries.iterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  Entry>  entries  =  this.entries.iterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
21	[BUG]  [BUGGY]    Iterator  <  Entry>  iter  =  v.getEntryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    Iterator  <  Entry>  iter  =  v.getEntryIterator();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    Iterator  <  Entry>  iter  =  v.getEntryIterator();		non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	add
