projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.remove(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),this);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),true);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),this);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value/2.0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=entries.keySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value).doubleValue());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),entry);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():null;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value).doubleValue(),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)this.entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)this.entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry(index,value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entries.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.put(index,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>entry=entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,value/1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,value+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index,value+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index,value-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index+1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value/1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value*1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),DEFAULT_ZERO_TOLERANCE+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=entry.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),this.entry);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value)+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)this.entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)this.entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)this.entryMap.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),false);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.put(index,newOpenIntToDoubleHashMap(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(index/2.0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value/2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value*2.0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,value-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value/2.0f);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index-1+value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newOpenIntToDoubleHashMap(value),this.current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),DEFAULT_ZERO_TOLERANCE-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=entries.entrySet();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index-1+value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value),this.value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setKey(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index-1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.put(index,newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry=(Entry)entries.get(index+1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Iterator<Entry>iter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE).iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,DEFAULT_ZERO_TOLERANCE+value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=entries.get(index-1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index,value+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entrycurrent=(Entry)entries.get(index-1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entries.put(index,newDouble(value-1),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592Entry<K,V>current=(Entry<K,V>)entries.get(index++);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java592entry.setValue(value,newDouble(index),DEFAULT_ZERO_TOLERANCE);
