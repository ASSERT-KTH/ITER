projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(index)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(index)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(key)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entry.setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591iter.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)this.entryMap.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)this.entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(key)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(value)&&isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(value)||isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():null;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591this.entry.setValue(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entry.setValue(value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,value-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(value),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(value),this);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(value),true);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entries.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(key)||entries.containsKey(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(key)||isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(key)||entries.containsValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(value)||entries.containsKey(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(value)||isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(index<0||!entries.containsKey(index)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(index)||isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>entries=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(value)&&isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(value),current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(index)&&isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Ilerator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(entries.containsKey(key)&&isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entrySet.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entryList.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entry.setValue(newDouble(value));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=openMaps.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE).iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(value)&&!isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591}elseif(!entries.containsKey(index)&&!isDefaultValue(value)){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iteratoriter=openMaps.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591Entrycurrent=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,newEntry(DEFAULT_ZERO_TOLERANCE));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591entries.put(index,DEFAULT_ZERO_TOLERANCE+value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java591iter.setValue(value);
