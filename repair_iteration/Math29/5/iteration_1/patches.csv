bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  /  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
2	[BUG]  [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.key(),  iter.value()  *  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
3	[BUG]  [BUGGY]  res.setEntry(value.key(),  iter.value()  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(value.key(),  iter.value()  *  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(value.key(),  iter.value()  *  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
4	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  entry.getValue());	      res.setEntry(entry.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
5	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  +  1);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  +  1);	      res.setEntry(iter.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
6	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE);	      res.setEntry(iter.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
7	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
8	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
9	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  iter.getValue()  *  v.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
10	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  iter.getEntry(v.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
11	[BUG]  [BUGGY]  res.setEntry(iter.key(),  v.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  v.value()  *  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  v.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
12	[BUG]  [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.key(),  iter.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
13	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  iter.getValue()  *  iter.getEntry(iter.getKey()));	      res.setEntry(iter.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
14	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  VAR.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  VAR.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  VAR.getEntry(iter.getKey()));	      res.setEntry(iter.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
15	[BUG]  [BUGGY]  res.put(v.getKey(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.put(v.getKey(),  v.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.put(v.getKey(),  v.getValue());	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
16	[BUG]  [BUGGY]  res.add(iter.next());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.add(iter.next());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.add(iter.next());	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
17	[BUG]  [BUGGY]  res.addAll(entries.iterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.addAll(entries.iterator());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.addAll(entries.iterator());	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
18	[BUG]  [BUGGY]  res.add(new  OpenMapRealVectorIterator(value,  iter.next()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.add(new  OpenMapRealVectorIterator(value,  iter.next()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.add(new  OpenMapRealVectorIterator(value,  iter.next()));	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
19	[BUG]  [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getKey()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
20	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getValue()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getValue()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  v.getEntry(iter.getValue()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
21	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  +  1);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.getKey(),  entry.getValue()  +  1);	      res.setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
22	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  iter.value());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  iter.value());	      res.setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
23	[BUG]  [BUGGY]  Iterator  iter  =  res.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  res.iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	Iterator  iter  =  res.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
24	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	Iterator  iter  =  this.entries.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
25	[BUG]  [BUGGY]  Iterator  iter  =  v.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  v.iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	Iterator  iter  =  v.iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
26	[BUG]  [BUGGY]  Iterator  iter  =  v.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  v.entrySet().iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	Iterator  iter  =  v.entrySet().iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
27	[BUG]  [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getValue()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getValue()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getValue(),  iter.getValue()  *  iter.getEntry(iter.getValue()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getValue()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
28	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    entry.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
29	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  entry.getValue()  *  v.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    entry.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
30	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue()  *  iter.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  entry.getValue()  *  iter.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  entry.getValue()  *  iter.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    entry.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
31	[BUG]  [BUGGY]  res.setEntry(v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getValue());	      res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
32	[BUG]  [BUGGY]  res.setEntry(iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue());	      res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
33	[BUG]  [BUGGY]  res.setEntry(entry.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.getKey());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.getKey());	      res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
34	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  +  1);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue(),  iter.getValue()  +  1);	      res.setEntry(iter.getValue(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
35	[BUG]  [BUGGY]  res.setEntry(v.getValue(),  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getValue(),  iter.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getValue(),  iter.getValue());	      res.setEntry(iter.getValue(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
36	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  /  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  iter.value()  /  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  iter.value()  /  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    /    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
37	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  *  entry.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  iter.value()  *  entry.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  iter.value()  *  entry.getEntry(iter.key()));	  res.setEntry(entry.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
38	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(iter.key()));	  res.setEntry(entry.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
39	[BUG]  [BUGGY]  res.setEntry(entry.key(),  iter.value()  /  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.key(),  iter.value()  /  v.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.key(),  iter.value()  /  v.getEntry(iter.key()));	  res.setEntry(entry.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
40	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getKey()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
41	[BUG]  [BUGGY]  res.setEntry(v.key(),  v.value()  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  v.value()  *  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  v.value()  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
42	[BUG]  [BUGGY]  res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  value  *  iter.getEntry(iter.key()));	  res.setEntry(v.key(),    iter.value()    *    iter.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	1	None	replace
43	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  *  v.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  *  v.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  DEFAULT_ZERO_TOLERANCE  *  v.getEntry(iter.getKey()));	      res.setEntry(iter.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
44	[BUG]  [BUGGY]  res.setEntry(iter.key(),  v.value()  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  v.value()  *  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  v.value()  *  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
45	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  value  *  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  value  *  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
46	[BUG]  [BUGGY]  res.setEntry(v.key(),  v.value()  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  v.value()  *  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  v.value()  *  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
47	[BUG]  [BUGGY]  res.add(new  OpenMapRealVectorIterator(v));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.add(new  OpenMapRealVectorIterator(v));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.add(new  OpenMapRealVectorIterator(v));	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
48	[BUG]  [BUGGY]  res.put(v.getKey(),  v.getDimension());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.put(v.getKey(),  v.getDimension());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.put(v.getKey(),  v.getDimension());	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
49	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  entry.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  entry.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  entry.getValue());	      res.setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
50	[BUG]  [BUGGY]  Iterator  iter  =  res.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  Iterator  iter  =  res.entrySet().iterator();  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	Iterator  iter  =  res.entrySet().iterator();	      Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
51	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  /  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  iter.value()  /  v.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  iter.value()  /  v.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    /    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
52	[BUG]  [BUGGY]  res.setEntry(iter.key(),  value  /  v.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  value  /  v.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  value  /  v.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    /    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
53	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  iter.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  iter.getValue());	      res.setEntry(entry.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
54	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getValue()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getValue()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue(),  iter.getValue()  *  V.getEntry(iter.getValue()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getValue()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
55	[BUG]  [BUGGY]  res.setEntry(iter.key(),  v.value()  /  iter.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  v.value()  /  iter.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  v.value()  /  iter.getEntry(iter.key()));	  res.setEntry(iter.key(),    iter.value()    /    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
56	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue(),  iter.getKey());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue(),  iter.getKey());	      res.setEntry(iter.getValue(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
57	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  -  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  iter.value()  -  iter.getValue());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  -  iter.getValue());	  res.setEntry(iter.key(),    iter.value()    *    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
58	[BUG]  [BUGGY]  res.setEntry(v.key(),  iter.value()  *  entries.getEntry(iter.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.key(),  iter.value()  *  entries.getEntry(iter.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.key(),  iter.value()  *  entries.getEntry(iter.key()));	  res.setEntry(entry.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
59	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(v.key()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(v.key()));  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  entry.getEntry(v.key()));	  res.setEntry(entry.key(),    iter.value()    *    v.getEntry(iter.key()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
60	[BUG]  [BUGGY]  res.putAll(entries.iterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.putAll(entries.iterator());  [BUGGY]    }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.putAll(entries.iterator());	      	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	4	None	replace
61	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  *  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  *  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(entry.getKey(),  entry.getValue()  *  DEFAULT_ZERO_TOLERANCE);	      res.setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
62	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getKey(),  iter.getValue()  *  entry.getEntry(iter.getKey()));	      res.setEntry(entry.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
63	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  V.getEntry(iter.getKey()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  V.getEntry(iter.getKey()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  V.getEntry(iter.getKey()));	      res.setEntry(iter.getKey(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
64	[BUG]  [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  v.getEntry(iter.getValue()));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(v.getValue(),  iter.getValue()  *  v.getEntry(iter.getValue()));  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(v.getValue(),  iter.getValue()  *  v.getEntry(iter.getValue()));	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getValue()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
65	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.value());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.value());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.value());	      res.setEntry(iter.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
66	[BUG]  [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getValue());  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getKey(),  iter.getValue()  *  iter.getValue());	      res.setEntry(iter.getKey(),    iter.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
67	[BUG]  [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  v.getEntry(iter.getKey()),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();    [BUGGY]  res.setEntry(iter.getValue(),  iter.getValue()  *  v.getEntry(iter.getKey()),  v);  [BUGGY]    res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.getValue(),  iter.getValue()  *  v.getEntry(iter.getKey()),  v);	      res.setEntry(iter.getValue(),    iter.getValue()    *    v.getEntry(iter.getKey()));    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
