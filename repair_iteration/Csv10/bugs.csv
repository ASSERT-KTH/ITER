bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] out.append(value, offset, offset + len); [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { [BUGGY] out.append(value, offset, offset + len); [BUGGY] } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	
2	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { [BUGGY] [BUGGY] out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	add	
3	[BUG] [BUGGY] } else if (format.isEscaping()) { [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); [BUGGY] } else if (format.isEscaping()) { [BUGGY] printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.35355339059327373	122	122	1	replace	
4	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] private void print(final Object object, final CharSequence value, final int offset, final int len) throws IOException { if (!newRecord) { out.append(format.getDelimiter()); } if (format.isQuoting()) {  printAndQuote(object, value, offset, len); [BUGGY] [BUGGY] } else if (format.isEscaping()) { printAndEscape(value, offset, len); } else { out.append(value, offset, offset + len); } newRecord = false; } [CLASS] CSVPrinter [METHOD] print [RETURN_TYPE] void  Object object CharSequence value final int offset final int len [VARIABLES] CharSequence value CSVFormat format Object object boolean newRecord int len offset Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.35355339059327373	122	122	1	add	
5	[BUG] [BUGGY] for (final Object value : values) { [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { [BUGGY] for (final Object value : values) { [BUGGY] print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	367	367	1	replace	
6	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { [BUGGY] [BUGGY] for (final Object value : values) { print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	367	367	1	add	
7	[BUG] [BUGGY] print(value); [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { [BUGGY] print(value); [BUGGY] } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	368	368	1	replace	
8	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { [BUGGY] [BUGGY] print(value); } println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	368	368	1	add	
9	[BUG] [BUGGY] println(); [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } [BUGGY] println(); [BUGGY] } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	370	370	1	replace	
10	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } [BUGGY] [BUGGY] println(); } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	370	370	1	add	
11	[BUG] [BUGGY] } [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } println(); [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	371	371	1	replace	
12	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void printRecord(final Object... values) throws IOException { for (final Object value : values) { print(value); } println(); [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] printRecord [RETURN_TYPE] void  values [VARIABLES] CSVFormat format Object value boolean newRecord quote Object[] values Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.22941573387056174	371	371	1	add	
13	[BUG] [BUGGY] final String recordSeparator = format.getRecordSeparator(); [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { [BUGGY] final String recordSeparator = format.getRecordSeparator(); [BUGGY] if (recordSeparator != null) { out.append(recordSeparator); } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	
14	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { [BUGGY] [BUGGY] final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { out.append(recordSeparator); } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	add	
15	[BUG] [BUGGY] if (recordSeparator != null) { [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); [BUGGY] if (recordSeparator != null) { [BUGGY] out.append(recordSeparator); } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	
16	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); [BUGGY] [BUGGY] if (recordSeparator != null) { out.append(recordSeparator); } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	add	
17	[BUG] [BUGGY] out.append(recordSeparator); [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { [BUGGY] out.append(recordSeparator); [BUGGY] } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	
18	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { [BUGGY] [BUGGY] out.append(recordSeparator); } newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	add	
19	[BUG] [BUGGY] newRecord = true; [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { out.append(recordSeparator); } [BUGGY] newRecord = true; [BUGGY] } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	
20	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { out.append(recordSeparator); } [BUGGY] [BUGGY] newRecord = true; } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	add	
21	[BUG] [BUGGY] } [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { out.append(recordSeparator); } newRecord = true; [BUGGY] } [BUGGY]  [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	
22	[BUG] [BUGGY] [FE] org.junit.ComparisonFailure: expected:<[C1 [CONTEXT] public void println() throws IOException { final String recordSeparator = format.getRecordSeparator(); if (recordSeparator != null) { out.append(recordSeparator); } newRecord = true; [BUGGY] [BUGGY] } [CLASS] CSVPrinter [METHOD] println [RETURN_TYPE] void  [VARIABLES] CSVFormat format boolean newRecord quote String recordSeparator Appendable out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	add	
