bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.length()  ==  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  println(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  quote);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	println(recordSeparator,  quote);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  println(recordSeparator);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  println();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println();  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	println();	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase());  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator.toLowerCase());  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	println(recordSeparator.toLowerCase());	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  <  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  <  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  <  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    <    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
16	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  <  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  <  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()  <  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    <    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
17	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  <  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    <    0)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
18	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
19	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
26	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append(',');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append(',');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
28	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()!=  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()!=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.trim().length()!=  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >=  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(!newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
34	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
35	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  <  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
36	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
37	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  ==  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
38	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
39	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "   ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "   ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "   ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
40	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
41	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
42	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "] ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "] ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "] ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
43	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "> ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "> ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "> ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator,  quote);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator,  quote);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
45	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
46	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "n ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "n ");  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + "n ");	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
47	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "] ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "] ");  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + "] ");	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
48	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
49	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "_ "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "_ "  +  recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + "_ "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
50	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator  ==  null)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator  ==  null)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator  ==  null)  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
51	[BUG]  [BUGGY]  if(recordSeparator  >=  null)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null)  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
52	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator!=  null)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator!=  null)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator!=  null)  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
53	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.equals( " "))  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.equals( " "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.equals( " "))  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
54	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
55	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
56	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
57	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ",n ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ",n ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ",n ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
59	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  >=  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
60	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
61	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
63	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  >=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()  >=  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
64	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
65	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
67	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  recordSeparator.trim();	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
68	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
69	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
70	[BUG]  [BUGGY]  final  int  recordSeparatorLength  =  recordSeparator.length();  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  int  recordSeparatorLength  =  recordSeparator.length();  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  int  recordSeparatorLength  =  recordSeparator.length();	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
71	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
72	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
73	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
74	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
75	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length())!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
76	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)  ==  '/')  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)  ==  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)  ==  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
77	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
78	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
80	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
81	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/.js "))  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/.js "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/.js "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
84	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.endsWith( ".js "))  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.endsWith( ".js "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.endsWith( ".js "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
85	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ". "))  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ". "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( ". "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
86	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.startsWith( ".js "))  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.startsWith( ".js "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.startsWith( ".js "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
87	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.endsWith( ".js "))  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.endsWith( ".js "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.endsWith( ".js "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
88	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()!=  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()!=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()!=  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()!=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()!=  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
90	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()!=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()!=  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
91	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
92	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
93	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
94	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
95	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "   ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "   ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
96	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  newRecord!=  null)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  newRecord!=  null)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  newRecord!=  null)  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
97	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
98	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
101	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  Format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  Format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  Format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
103	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
104	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
105	[BUG]  [BUGGY]  println(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  newRecord);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	println(recordSeparator,  newRecord);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
106	[BUG]  [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  println(recordSeparator);  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
108	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( "  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( "  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( "  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
109	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "- "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( "- "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
110	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.startsWith( ". "))  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.startsWith( ". "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.startsWith( ". "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
111	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
112	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
113	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
114	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length())!=  '/')  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.charAt(recordSeparator.length())!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.charAt(recordSeparator.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
115	[BUG]  [BUGGY]  if(!newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(!newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
116	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
117	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()!=  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()!=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()!=  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
118	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
119	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
120	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator,  newRecord);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator,  newRecord);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
121	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
122	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('#');  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('#');  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('#');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
123	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  &&  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
124	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
125	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "[null] ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
127	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
129	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
130	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
131	[BUG]  [BUGGY]  print(recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  print(recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	print(recordSeparator);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
132	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null  ||  recordSeparator.length()  ==  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
133	[BUG]  [BUGGY]  if(newRecord!=  null  &&  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null  &&  recordSeparator.trim().length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null  &&  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
134	[BUG]  [BUGGY]  if(newRecord!=  null  &&  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null  &&  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null  &&  recordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
135	[BUG]  [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  &&  recordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
136	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  RecordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  RecordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  RecordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
137	[BUG]  [BUGGY]  if(newRecord  ==  null  &&  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null  &&  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null  &&  recordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
138	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
139	[BUG]  [BUGGY]  FormatUtils.println(this.recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(this.recordSeparator);  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(this.recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
140	[BUG]  [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator.size()  ]))  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator.size()  ]))  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator.size()  ]))  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
142	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.iterator())  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.iterator())  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.iterator())  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
143	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator]))  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator]))  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators.toArray(new  String[recordSeparator]))  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(String    recordSeparator    :    recordSeparators)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
144	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(recordSeparator    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
145	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
146	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  return;  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  if(recordSeparator!=  null)  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
147	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  newRecord!=  recordSeparator)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  newRecord!=  recordSeparator)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  newRecord!=  recordSeparator)  {	  if(newRecord!=    null)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null  ||  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
149	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
150	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
151	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null  ||  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
152	[BUG]  [BUGGY]  if(newRecord!=  null  ||  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null  ||  recordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null  ||  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
153	[BUG]  [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
154	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator.length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord  ==  null  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator    ==    null    ||    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
155	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >=  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >=  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
156	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/ "))  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( "/ "))  {	  if(recordSeparator!=    null    &&    recordSeparator.endsWith(   ".js   "))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
157	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  <  =  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
158	[BUG]  [BUGGY]  if(newRecord!=  null  &&  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null  &&  recordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null  &&  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
159	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  RecordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  RecordSeparator.trim().length()  >  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  RecordSeparator.trim().length()  >  0)  {	  if(recordSeparator    ==    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
160	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
161	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
162	[BUG]  [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  ==  0)  {  [BUGGY]      out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  &&  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
