bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  >=  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.trim().length()  >=  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
8	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >=  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >=  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  <  =  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  println(recordSeparator);  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	println(recordSeparator);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator  ==  null)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(String  recordSeparator  :  recordSeparators)  {  out.append( ", ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  >  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  &&  recordSeparator.length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  &&  recordSeparator.length()  ==  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( "n ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  if(recordSeparator!=  null)  {  out.append( ", ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.charAt(recordSeparator.length()  -  1)!=  '/')  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "n ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( "n ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println( ", ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  FormatUtils.println(recordSeparator);  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	FormatUtils.println(recordSeparator);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0  ||  recordSeparator.length()  >  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  if(newRecord!=  null)  {  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(newRecord!=  null)  {	  if(recordSeparator    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {	  if(recordSeparator    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  >=  null  &&  recordSeparator.length()  ==  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator  >=  null  &&  recordSeparator.length()  ==  0)  {	  if(recordSeparator!=    null    ||    recordSeparator.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  <  =  0)  {  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  <  =  0)  {  [BUGGY]    out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	335	335	1	replace	if(recordSeparator!=  null  &&  recordSeparator.trim().length()  <  =  0)  {	  if(recordSeparator!=    null    &&    recordSeparator.trim().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
