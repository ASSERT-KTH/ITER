bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  println(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  println(out,  recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	println(out,  recordSeparator);	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
2	[BUG]  [BUGGY]  println(out,  quote);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  println(out,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	println(out,  quote);	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
3	[BUG]  [BUGGY]  if(newRecord)  {  println(out);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(out);  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  if(newRecord)  {  println(out);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(out);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(out);  }  else  {  throw  new  IllegalStateException( " ");  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
5	[BUG]  [BUGGY]  if(newRecord)  {  println(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(out);  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(out);  }  else  {  out.append( "n ");  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
6	[BUG]  [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  newRecord  =  false;  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
7	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  println();  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
8	[BUG]  [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  newRecord  =  false;  }  else  {  println();  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
9	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  newRecord  =  false;  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
10	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  newRecord  =  false;  }  else  {  println();  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  println();  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
12	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  true;  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  true;	  if(quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
13	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  newRecord  =  true;  }	  if(recordSeparator    ==    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
14	[BUG]  [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
15	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
16	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
17	[BUG]  [BUGGY]  if(recordSeparator!=  newRecord)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  newRecord)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  newRecord)  {  newRecord  =  false;  }  else  {  println();  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
18	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  println();  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
19	[BUG]  [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }	  if(recordSeparator    ==    null)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
20	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append('n');  }  else  {  println();  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
22	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append('n');  }  else  {  println();  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
23	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  true;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
26	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
27	[BUG]  [BUGGY]  if(!newRecord)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
28	[BUG]  [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
29	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator.equals( " ")))  {  newRecord  =  false;  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(quote)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord  ==  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord  ==  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  if(newRecord  ==  null)  {  newRecord  =  false;  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  quote.equals( " ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  quote.equals( " ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  quote.equals( " ")))  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(recordSeparator);  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  println(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  println(recordSeparator,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	println(recordSeparator,  quote);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(recordSeparator);  }  else  {  out.append('n');  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println(recordSeparator);  }  else  {  out.append( ", ");  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  out.append(recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append(recordSeparator);	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
41	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
42	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  String  recordSeparator  =  recordSeparator.trim();	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
43	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
44	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
45	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
46	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord!=  false)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord!=  false)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  if(newRecord!=  false)  {  out.append( ", ");  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
47	[BUG]  [BUGGY]  if(newRecord!=  null  ||  quote  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null  ||  quote  ==  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null  ||  quote  ==  null)  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
48	[BUG]  [BUGGY]  if(newRecord!=  null)  {  Printer  out  =  new  Printer(recordSeparator);  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  Printer  out  =  new  Printer(recordSeparator);  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  Printer  out  =  new  Printer(recordSeparator);  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
49	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null  ||  quote!=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null  ||  quote!=  null)  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
50	[BUG]  [BUGGY]  if(newRecord  ==  true)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  true)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  true)  {  newRecord  =  true;  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
51	[BUG]  [BUGGY]  NewRecord  <  String>  newRecord  =  true;  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  NewRecord  <  String>  newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	NewRecord  <  String>  newRecord  =  true;	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
52	[BUG]  [BUGGY]  NewRecord  <?>  newRecord  =  true;  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  NewRecord  <?>  newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	NewRecord  <?>  newRecord  =  true;	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
53	[BUG]  [BUGGY]  ||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord  ==  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
54	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
55	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
56	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
58	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.length()  >  0))  {  return;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  newRecord.length()  >  0))  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  newRecord.length()  >  0))  {  return;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
59	[BUG]  [BUGGY]  if(newRecord)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( "] ");  }	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
60	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( "] ");  }	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
61	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
62	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
63	[BUG]  [BUGGY]  out.append( "] ");  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "] ");	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
64	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  if(recordSeparator  ==  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
66	[BUG]  [BUGGY]  out.append( "null ");  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "null ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "null ");	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  String  recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ", ",  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( ", ",  recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( ", ",  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
70	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ",n ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( ",n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( ",n ");  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
71	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  if(newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }	  if(newRecord!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
78	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ",  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ",  recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "null ",  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
79	[BUG]  [BUGGY]  Appendable  out.append( "null ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  Appendable  out.append( "null ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	Appendable  out.append( "null ");	  if(newRecord!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
80	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append('n');	  if(newRecord!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
81	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }	  if(newRecord!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
82	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  out.append('n');  }	  if(newRecord!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
83	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }	  if(newRecord!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
84	[BUG]  [BUGGY]  if(newRecord)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  if(newRecord)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( "null ");  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( "null ");  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
88	[BUG]  [BUGGY]  if(newRecord)  {  out.append( "   ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( "   ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( "   ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
89	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  true;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  true;  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  newRecord  =  true;  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    newRecord    =    true;    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
90	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
91	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
93	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
94	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
95	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
96	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
97	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  true;  }  else  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  newRecord  =  true;  }  else  {  out.append( "no ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  newRecord  =  true;  }  else  {  out.append( "no ");  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   "no   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
98	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  if(newRecord  ==  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
99	[BUG]  [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
100	[BUG]  [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
101	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
102	[BUG]  [BUGGY]  Printer  out  =  new  Printer(recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  Printer  out  =  new  Printer(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	Printer  out  =  new  Printer(recordSeparator);	  if(newRecord    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
103	[BUG]  [BUGGY]  if(newRecord!=  null  ||  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null  ||  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null  ||  quote)  {  println();  }	  if(newRecord    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
104	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
105	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    newRecord    =    false;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
106	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  newRecord  =  false;  }  else  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    newRecord    =    false;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
107	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    newRecord    =    false;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
108	[BUG]  [BUGGY]  if(newRecord)println();  if(recordSeparator!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)println();  if(recordSeparator!=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)println();  if(recordSeparator!=  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
109	[BUG]  [BUGGY]  if(newRecord)println();  if(recordSeparator  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)println();  if(recordSeparator  ==  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)println();  if(recordSeparator  ==  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  if(newRecord)println();  else  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)println();  else  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)println();  else  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  print(recordSeparator);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  print(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	print(recordSeparator);	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
112	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
113	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "   ")))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
114	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "__ ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "__ ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "__ ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
115	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "n ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "n ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "n ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
116	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "- ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "- ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "- ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
117	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  quote.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
118	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "/ ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "/ ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "/ ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
119	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  newRecord  =  true;  }  else  {  out.append('n');  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
120	[BUG]  [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
121	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
122	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
123	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
124	[BUG]  [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
125	[BUG]  [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(quote)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(quote)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  recordSeparator.equals(quote)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  ||(quote  ==  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote  ==  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote  ==  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
127	[BUG]  [BUGGY]  &&(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  &&(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	&&(recordSeparator!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
128	[BUG]  [BUGGY]  (recordSeparator!=  null)&&  newRecord.equals(recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (recordSeparator!=  null)&&  newRecord.equals(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(recordSeparator!=  null)&&  newRecord.equals(recordSeparator);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
129	[BUG]  [BUGGY]  (newRecord!=  null)&&  recordSeparator.equals(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord!=  null)&&  recordSeparator.equals(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord!=  null)&&  recordSeparator.equals(recordSeparator);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
130	[BUG]  [BUGGY]  (newRecord!=  null)&&  recordSeparator.equals(newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord!=  null)&&  recordSeparator.equals(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord!=  null)&&  recordSeparator.equals(newRecord);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
131	[BUG]  [BUGGY]  (newRecord  ==  null)&&  recordSeparator.equals(recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  null)&&  recordSeparator.equals(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  null)&&  recordSeparator.equals(recordSeparator);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
132	[BUG]  [BUGGY]  (newRecord  ==  null)&&  recordSeparator.equals(newRecord);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  null)&&  recordSeparator.equals(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  null)&&  recordSeparator.equals(newRecord);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
133	[BUG]  [BUGGY]  out.append( ",n ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( ",n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( ",n ");	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
134	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
135	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  println();  }	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
136	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
137	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
138	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "n ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
140	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( ". ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( ". ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( ". ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
141	[BUG]  [BUGGY]  ||(recordSeparator  ==  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator  ==  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator  ==  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
142	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "* ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "* ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "* ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
143	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
144	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( "   ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
145	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "# ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( "# ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
146	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( ", ");  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
147	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( ", ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
148	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( ", ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
149	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }	  if(newRecord    ==    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
150	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  out.append( "] ");  }	  if(newRecord    ==    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
151	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "[] ");  }	  if(newRecord    ==    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
152	[BUG]  [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append(recordSeparator);  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
153	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
154	[BUG]  [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
155	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "n ");	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
156	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "# ");  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
157	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "   ");  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
158	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[null] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "[null] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "[null] ");  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
159	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
160	[BUG]  [BUGGY]  if(newRecord)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
161	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "- ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "- ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "- ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
162	[BUG]  [BUGGY]  &&(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  &&(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	&&(recordSeparator!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
163	[BUG]  [BUGGY]  out.append( "  }   ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "  }   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "  }   ");	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
164	[BUG]  [BUGGY]  out.append( "n ",  recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "n ",  recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "n ",  recordSeparator);	  out.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
165	[BUG]  [BUGGY]  if(!quote)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!quote)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!quote)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
166	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator!=  null))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator!=  null))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator!=  null))  {  newRecord  =  true;  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
167	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  quote))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  quote))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  quote))  {  newRecord  =  true;  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
168	[BUG]  [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  recordSeparator)  {  newRecord  =  false;  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
169	[BUG]  [BUGGY]  if(newRecord  >=  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  recordSeparator)  {  newRecord  =  false;  }  else  {  println();  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
170	[BUG]  [BUGGY]  if(!quote)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!quote)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!quote)  {  if(recordSeparator  ==  null)  {  newRecord  =  false;  }	  if(recordSeparator    ==    null)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
171	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
172	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
173	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
174	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
175	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
176	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append( "n ");  }	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
177	[BUG]  [BUGGY]  append(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  append(out,  recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	append(out,  recordSeparator);	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
178	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append( ", ");  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
179	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  false)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  false)  {  out.append( ", ");  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
180	[BUG]  [BUGGY]  ||  recordSeparator!=  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||  recordSeparator!=  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||  recordSeparator!=  null)  {  if(newRecord!=  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
181	[BUG]  [BUGGY]  (newRecord  ==  false))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  false))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  false))  {  newRecord  =  true;  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
182	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append( "] ");  }	  if(newRecord)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
183	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "  <  null> ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "  <  null> ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "  <  null> ");  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
184	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( ", ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
185	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "] ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( "] ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
186	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "' ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( "' ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
187	[BUG]  [BUGGY]  if(newRecord  >  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >  0)  {  println();  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
188	[BUG]  [BUGGY]  if(newRecord  >  0)  {  println();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >  0)  {  println();  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >  0)  {  println();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
189	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "no ");  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   "no   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
190	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  out.append( "no ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  out.append( "no ");  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   "no   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
191	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "  }   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "  }   ");  }	  if(newRecord    ==    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
192	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  null)  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
193	[BUG]  [BUGGY]  (newRecord  ==  null))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  null))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  null))  {  newRecord  =  false;  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
194	[BUG]  [BUGGY]  if(out!=  null)  {  println(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(out!=  null)  {  println(out);  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(out!=  null)  {  println(out);  }  else  {  out.append( "n ");  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
195	[BUG]  [BUGGY]  if(out!=  null)  println(out);  if(newRecord)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(out!=  null)  println(out);  if(newRecord)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(out!=  null)  println(out);  if(newRecord)  {  out.append( "n ");  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
196	[BUG]  [BUGGY]  if(out!=  null)  {  println(out);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(out!=  null)  {  println(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(out!=  null)  {  println(out);  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
197	[BUG]  [BUGGY]  if(out!=  null)  {  println(out);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(out!=  null)  {  println(out);  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(out!=  null)  {  println(out);  }  else  {  out.append( ", ");  }	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
198	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append( "null ");  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
199	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
200	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ".null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( ".null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( ".null ");  }	  if(newRecord!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
201	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  newRecord  =  true;  }  else  {  out.append( "n ");  }	  if(newRecord!=    recordSeparator)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
202	[BUG]  [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  recordSeparator.equals( "   ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
203	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "* ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "* ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "* ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
204	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append( ", ");  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
205	[BUG]  [BUGGY]  ||  recordSeparator!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||  recordSeparator!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||  recordSeparator!=  null)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
206	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
207	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.append( "n ");  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
208	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  if(recordSeparator!=  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
209	[BUG]  [BUGGY]  if(out!=  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(out!=  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(out!=  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(recordSeparator!=    null)    {    if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
210	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(quote)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
211	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  newRecord  =  false;  }  else  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
212	[BUG]  [BUGGY]  if(!newRecord)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  out.append('n');  }  else  {  println();  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
213	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
214	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
215	[BUG]  [BUGGY]  if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
216	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
217	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  false)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
218	[BUG]  [BUGGY]  &&(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  &&(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	&&(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
219	[BUG]  [BUGGY]  &&(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  &&(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	&&(quote!=  null  &&  quote.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
220	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null  ||  quote)  {  println();  }	  if(newRecord    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
221	[BUG]  [BUGGY]  if(newRecord!=  true)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  true)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  true)  {  newRecord  =  true;  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
222	[BUG]  [BUGGY]  ||  quote)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||  quote)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||  quote)  {  if(newRecord!=  null)  {  newRecord  =  true;  }	  if(quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
223	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
224	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
225	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append( "  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append( "  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
226	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null)  {  out.append( "  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null)  {  out.append( "  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
227	[BUG]  [BUGGY]  &&(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  &&(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	&&(newRecord!=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
228	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordRecord.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordRecord.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordRecord.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
229	[BUG]  [BUGGY]  _println();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  _println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	_println();	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
230	[BUG]  [BUGGY]  print(out);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  print(out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	print(out);	  println();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
231	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "/ ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "/ ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "/ ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
232	[BUG]  [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "0 ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(recordSeparator!=  null  &&  recordSeparator.equals( "0 ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(recordSeparator!=  null  &&  recordSeparator.equals( "0 ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    recordSeparator.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
233	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  newRecord.equals( " ")))  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
234	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals(recordSeparator)))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  newRecord.equals(recordSeparator)))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  newRecord.equals(recordSeparator)))  {  newRecord  =  false;  }	  if(newRecord!=    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
235	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
236	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
237	[BUG]  [BUGGY]  if(newRecord)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
238	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
239	[BUG]  [BUGGY]  (newRecord  ==  null))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  null))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  null))  {  newRecord  =  true;  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
240	[BUG]  [BUGGY]  this.newRecord  =  true;  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  this.newRecord  =  true;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	this.newRecord  =  true;	  if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
241	[BUG]  [BUGGY]  (newRecord!=  recordSeparator)&&  newRecord.equals(recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord!=  recordSeparator)&&  newRecord.equals(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord!=  recordSeparator)&&  newRecord.equals(recordSeparator);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
242	[BUG]  [BUGGY]  (newRecord  ==  null)&&  newRecord.equals(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  (newRecord  ==  null)&&  newRecord.equals(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	(newRecord  ==  null)&&  newRecord.equals(recordSeparator);	  (newRecord!=    null)&&    newRecord.equals(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
243	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  newRecord  =  true;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  quote)  {  newRecord  =  true;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  quote)  {  newRecord  =  true;  }  else  {  println();  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
244	[BUG]  [BUGGY]  out.append( "no ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "no ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "no ");	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append(   "no   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
245	[BUG]  [BUGGY]  out.append( "[] ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "[] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "[] ");	  if(newRecord    ==    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
246	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  newRecord  =  true;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  quote)  {  newRecord  =  true;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  quote)  {  newRecord  =  true;  }  else  {  println();  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
247	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  println(recordSeparator);  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
248	[BUG]  [BUGGY]  if(println())  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(println())  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(println())  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
249	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println( " ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  println( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  println( " ");  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
250	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append( "n ");  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
251	[BUG]  [BUGGY]  TextUtilities.println(out, "  <  null> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  TextUtilities.println(out, "  <  null> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	TextUtilities.println(out, "  <  null> ");	  if(newRecord    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
252	[BUG]  [BUGGY]  appendable.append(recordSeparator);  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  appendable.append(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	appendable.append(recordSeparator);	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
253	[BUG]  [BUGGY]  out.append(recordSeparator).append( "n ");  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append(recordSeparator).append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append(recordSeparator).append( "n ");	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
254	[BUG]  [BUGGY]  out.append( "n ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  out.append( "n ").append(recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	out.append( "n ").append(recordSeparator);	  if(newRecord)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
255	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  if(newRecord  ==  recordSeparator)  {  newRecord  =  true;  }	  if(recordSeparator!=    null)    {    if(newRecord    ==    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
256	[BUG]  [BUGGY]  println(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  println(recordSeparator,  out);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	println(recordSeparator,  out);	  println(out);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
257	[BUG]  [BUGGY]  if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(!newRecord)  {  if(newRecord!=  null)  {  newRecord  =  false;  }	  if(!quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
258	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator!=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null  ||  recordSeparator!=  null)  {  println();  }	  if(newRecord    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
259	[BUG]  [BUGGY]  if(newRecord)  {  newRecord  =  true;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  newRecord  =  true;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  newRecord  =  true;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
260	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(recordSeparator!=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(recordSeparator!=  null)  {  println();  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
261	[BUG]  [BUGGY]  ||(quote  ==  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote  ==  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote  ==  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
262	[BUG]  [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(newRecord)))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(newRecord)))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  recordSeparator.equals(newRecord)))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
263	[BUG]  [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  recordSeparator.equals(recordSeparator)))  {  newRecord  =  false;  }	  ||(newRecord!=    null    &&    quote.equals(recordSeparator)))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
264	[BUG]  [BUGGY]  ||(quote!=  null  &&  quote.equals( "# ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(quote!=  null  &&  quote.equals( "# ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(quote!=  null  &&  quote.equals( "# ")))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    quote.equals(   "   ")))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
265	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  return;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  false)  {  out.append(recordSeparator);  return;  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
266	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  quote)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  quote)  {  newRecord  =  true;  }	  if(newRecord!=    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
267	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  recordSeparator!=  null)  {  newRecord  =  false;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  null  ||  recordSeparator!=  null)  {  newRecord  =  false;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  null  ||  recordSeparator!=  null)  {  newRecord  =  false;  }	  if(newRecord    ==    null)    {    newRecord    =    false;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
268	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  quote)  {  println();  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
269	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.append( "n ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
270	[BUG]  [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "[ ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  println();  }  else  {  out.append( "[ ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  println();  }  else  {  out.append( "[ ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
271	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    println();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
272	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  if(newRecord!=  null)  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  if(newRecord!=  null)  {  newRecord  =  true;  }	  if(quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
273	[BUG]  [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.endsWith( "/ ")))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord!=  null  &&  recordSeparator.endsWith( "/ ")))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord!=  null  &&  recordSeparator.endsWith( "/ ")))  {  newRecord  =  true;  }	  if(quote)    {    if(newRecord!=    null)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
274	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  recordSeparator)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    newRecord    =    true;    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
275	[BUG]  [BUGGY]  if(newRecord)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  out.append( ", ");  }	  if(newRecord)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
276	[BUG]  [BUGGY]  TextUtilities.println(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  TextUtilities.println(out,  recordSeparator);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	TextUtilities.println(out,  recordSeparator);	  if(newRecord)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
277	[BUG]  [BUGGY]  println(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  println(recordSeparator,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	println(recordSeparator,  newRecord);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
278	[BUG]  [BUGGY]  ||(newRecord  >=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  ||(newRecord  >=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	||(newRecord  >=  null  &&  newRecord.length()  >  0))  {  newRecord  =  true;  }	  ||(newRecord!=    null    &&    newRecord.length()    >    0))    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
279	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }	  if(newRecord    ==    null)    {    newRecord    =    true;    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
280	[BUG]  [BUGGY]  if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
281	[BUG]  [BUGGY]  if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  >=  recordSeparator)  {  out.append(recordSeparator);  }	  if(newRecord)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
282	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  return;  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator);  return;  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
283	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator).append( ", ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator).append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator).append( ", ");  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
284	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord  ==  false)  {  println(recordSeparator);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord  ==  false)  {  println(recordSeparator);  }	  if(newRecord    ==    false)    {    newRecord    =    true;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
285	[BUG]  [BUGGY]  if(newRecord)  {  newRecord  =  false;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }      [BUGGY]  if(newRecord)  {  newRecord  =  false;  }  else  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	338	338	1	replace	if(newRecord)  {  newRecord  =  false;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    newRecord    =    false;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
