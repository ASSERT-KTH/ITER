bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  org.junit.ComparisonFailure:  expected:<[a  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	add	if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	compilable	  [FE]  org.junit.ComparisonFailure:  expected:<[a  	10	5	replace
2	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [FE]  org.junit.ComparisonFailure:  expected:<[a  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	compilable	  [FE]  org.junit.ComparisonFailure:  expected:<[a  	10	5	replace
3	[BUG]  [BUGGY]  etter.append(value,  offset,  offset  +  len);  [CE]  cannot  find  symbol  etter  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  etter.append(value,  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	etter.append(value,  offset,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	non-compiled	[CE]  cannot  find  symbol  etter	10	None	replace
4	[BUG]  [BUGGY]  out.append(object,  offset,  value,  offset  +  len);  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  value,  offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  out.append(object,  offset,  value  +  len);  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  value  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  value  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
6	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len,  value);  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  offset  +  len,  value);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  offset  +  len,  value);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
7	[BUG]  [BUGGY]  out.append(object,  offset,  value.offset  +  len);  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  value.offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  value.offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
8	[BUG]  [BUGGY]  out.append(object,  offset,  len,  offset  +  len);  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  len,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  len,  offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
10	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
11	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
12	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
13	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
14	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ". ");  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
15	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ",   ");  }  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ",   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalStateException( ",   ");  }	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
16	[BUG]  [BUGGY]  out.append(format.getComparisonFailure());  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getComparisonFailure());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getComparisonFailure());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
17	[BUG]  [BUGGY]  out.append(format.getRecord());  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getRecord());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getRecord());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
18	[BUG]  [BUGGY]  out.append(format.getRawOffset());  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getRawOffset());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getRawOffset());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
19	[BUG]  [BUGGY]  out.append(format.getQuote());  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getQuote());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getQuote());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
20	[BUG]  [BUGGY]  out.append(format.getRecordValue());  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getRecordValue());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getRecordValue());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
21	[BUG]  [BUGGY]  out.append(format.getName());  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getName());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getName());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
22	[BUG]  [BUGGY]  out.append(Object.valueOf(value,  offset,  offset  +  len));  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(value,  offset,  offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(value,  offset,  offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
23	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len),  value);  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len),  value);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  offset  +  len),  value);	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
24	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  value.offset  +  len));  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  value.offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  value.offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
25	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  len  +  1));  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  len  +  1));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  len  +  1));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
26	[BUG]  [BUGGY]  out.append(ObjectUtil.valueOf(object,  offset,  offset  +  len));  [CE]  cannot  find  symbol  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectUtil.valueOf(object,  offset,  offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectUtil.valueOf(object,  offset,  offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
27	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  value  +  len));  [CE]  cannot  find  symbol  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  value  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  value  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
28	[BUG]  [BUGGY]  out.append(object,  value,  offset  +  len,  offset);  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset  +  len,  offset);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset  +  len,  offset);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
29	[BUG]  [BUGGY]  out.append(object,  value,  offset,  len);  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset,  len);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
30	[BUG]  [BUGGY]  out.append(object,  value,  offset  +  len,  format);  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset  +  len,  format);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset  +  len,  format);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
31	[BUG]  [BUGGY]  out.append(value,  offset  +  len);  [CE]  cannot  find  symbol  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset  +  len);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
32	[BUG]  [BUGGY]  out.append(object,  value,  offset,  offset  +  len);  [CE]  cannot  find  symbol  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset,  offset  +  len);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
33	[BUG]  [BUGGY]  out.append(object,  value,  offset  +  1,  len);  [CE]  cannot  find  symbol  [FE]                      org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset  +  1,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset  +  1,  len);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
34	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  out.append(value,  offset,  offset  +  len  -  1);  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  out.append(value,  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    out.append(value,  offset,  offset  +  len  -  1);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
35	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
36	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
37	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
38	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(len  >  0)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
39	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value  ==  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]              org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value  ==  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(value  ==  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
40	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]                org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
41	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]                  org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
42	[BUG]  [BUGGY]  AllRecords.add(value,  out.toString());  [CE]  cannot  find  symbol  AllRecords  [FE]    IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(value,  out.toString());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(value,  out.toString());	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  AllRecords	8	None	replace
43	[BUG]  [BUGGY]  AllRecords.add(value,  offset,  len);  [CE]  cannot  find  symbol  AllRecords  [FE]      IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  AllRecords	8	None	replace
44	[BUG]  [BUGGY]  AllRecords.add(value,  out.toString(),  offset  +  len);  [CE]  cannot  find  symbol  AllRecords  [FE]        IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(value,  out.toString(),  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(value,  out.toString(),  offset  +  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  AllRecords	8	None	replace
45	[BUG]  [BUGGY]  AllRecords.add(value,  newRecord);  [CE]  cannot  find  symbol  AllRecords  [FE]          IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(value,  newRecord);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(value,  newRecord);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  AllRecords	8	None	replace
46	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [CE]  boolean  cannot  be  dereferenced  [FE]            IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  Appendable  out  =(Appendable)this.newRecord.clone();  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	Appendable  out  =(Appendable)this.newRecord.clone();	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  boolean  cannot  be  dereferenced	8	None	replace
47	[BUG]  [BUGGY]  AllRecords.add(value,  offset  +  len);  [CE]  cannot  find  symbol  AllRecords  [FE]              IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  AllRecords	8	None	replace
48	[BUG]  [BUGGY]  out.append(format.getDelimiter());  out.append(format.getDelimiter());  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  out.append(format.getDelimiter());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    out.append(format.getDelimiter());	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
49	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
50	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(newRecord)  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
51	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(!newRecord)  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(!newRecord)  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(!newRecord)  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
52	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
53	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }  [CE]  clone()  has  protected  access  in  Object  [FE]              org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	19	None	add
54	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
55	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]                  org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
56	[BUG]  [BUGGY]  out.append(data,  offset,  value  +  len);  [CE]  cannot  find  symbol  data  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(data,  offset,  value  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(data,  offset,  value  +  len);	  out.append(baseUri,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol  data	18	None	replace
57	[BUG]  [BUGGY]  out.append(Object.value,  offset,  value  +  len);  [CE]  cannot  find  symbol  value  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.value,  offset,  value  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.value,  offset,  value  +  len);	  out.append(baseUri,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol  value	18	None	replace
58	[BUG]  [BUGGY]  out.append(data,  value,  offset  +  len);  [CE]  clone()  has  protected  access  in  Object  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(data,  value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(data,  value,  offset  +  len);	  out.append(baseUri,    value,    offset    +    len);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	18	None	replace
59	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  out.append(value,  offset,  offset  +  1);  [CE]  clone()  has  protected  access  in  Object  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  out.append(value,  offset,  offset  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    out.append(value,  offset,  offset  +  1);	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	2	None	add
60	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  clone()  has  protected  access  in  Object  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	2	None	add
61	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
62	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
63	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
64	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value  ==  null)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]              org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value  ==  null)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(value  ==  null)  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
65	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]                org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
66	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(value,  offset  +  1);  }  [CE]  illegal  start  of  type  [FE]                  org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(value,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(value,  offset  +  1);  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
67	[BUG]  [BUGGY]  final  org.junit.ComparisonFailure:  expected  [CE]  illegal  start  of  type  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  final  org.junit.ComparisonFailure:  expected  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	final  org.junit.ComparisonFailure:  expected	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len);  [CE]  illegal  start  of  type  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  printAndEscape(object,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	printAndEscape(object,  offset,  len);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }  [CE]  illegal  start  of  type  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [CE]  illegal  start  of  type  [FE]          org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(value,  offset,  len);  }	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }  [CE]  illegal  start  of  type  [FE]            org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  out.append(format.getDelimiter());  }	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  illegal  start  of  type  [FE]              org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append('n');  }  else  {  printAndEscape(object,  offset,  len);  }	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
73	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  illegal  start  of  type  [FE]                org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  else  {  printAndEscape(object,  offset,  len);  }	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len  -  1);  [CE]  illegal  start  of  type  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  offset  +  len  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
75	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  illegal  start  of  expression  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1,  value.length  -  1);  [CE]  illegal  start  of  expression  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1,  value.length  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  offset  +  len  -  1,  value.length  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  len  -  1);  }  [CE]  illegal  start  of  expression  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  printAndEscape(object,  offset,  len  -  1);  }	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  illegal  start  of  expression  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
79	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  /  1);  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  /  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  offset  +  len  /  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
80	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len);  [CE]  ')'  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  offset  +  len);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  ')'  expected	13	None	replace
81	[BUG]  [BUGGY]  out.append(Object.valueOf(object),  offset,  offset  +  len  -  1);  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object),  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object),  offset,  offset  +  len  -  1);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
82	[BUG]  [BUGGY]  out.append(Object.valueOf(object),  offset,  offset  +  len,  value);  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object),  offset,  offset  +  len,  value);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object),  offset,  offset  +  len,  value);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
83	[BUG]  [BUGGY]  out.append(Object.valueOf(object),  offset,  len  +  1);  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object),  offset,  len  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object),  offset,  len  +  1);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
84	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  len  +  1);  [CE]  ')'  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  len  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  len  +  1);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  ')'  expected	13	None	replace
85	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
86	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
87	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  If(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [CE]  ';'  expected  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  If(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    If(newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
88	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  while(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  while(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    while(newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
89	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  offset,  off  +  len);  }  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  offset,  off  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    if(newRecord)  {  out.append(value,  offset,  off  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
90	[BUG]  [BUGGY]  AllRecords.add(newRecord);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  AllRecords.add(newRecord);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	AllRecords.add(newRecord);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
91	[BUG]  [BUGGY]  Appendable  out  =(Appendable)format.getObject();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  Appendable  out  =(Appendable)format.getObject();  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	Appendable  out  =(Appendable)format.getObject();	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
92	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  1);  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  offset  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  offset  +  1);	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
93	[BUG]  [BUGGY]  out.append(value,  offset,  len  +  1);  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  len  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  len  +  1);	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
94	[BUG]  [BUGGY]  out.append(object,  offset,  len  +  1);  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  len  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  len  +  1);	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
95	[BUG]  [BUGGY]  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
96	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(!newRecord)  {  out.append(value,  offset,  offset  +  1);  }	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
97	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
98	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len  +  1);  }  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len  +  1);  }	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
99	[BUG]  [BUGGY]      if(newRecord)  {  out.append(value);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  out.append(value);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  out.append(value);  }  else  {  printAndEscape(object,  offset,  len);  }	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
100	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1,  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1,  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  1,  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
101	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.length);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.length);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.length);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
102	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len,  format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(newRecord)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
105	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isEscaping())  {  out.append(value,  offset,  offset  +  1);  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
106	[BUG]  [BUGGY]  out.append(ObjectUtilities.valueOf(object,  offset,  offset  +  len));  [CE]  cannot  find  symbol  length  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectUtilities.valueOf(object,  offset,  offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectUtilities.valueOf(object,  offset,  offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
107	[BUG]  [BUGGY]  out.append(ObjectFormat.valueOf(object,  offset,  offset  +  len));  [CE]  cannot  find  symbol  length  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectFormat.valueOf(object,  offset,  offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectFormat.valueOf(object,  offset,  offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
108	[BUG]  [BUGGY]  out.append(Object.value,  value,  offset  +  len);  [CE]  cannot  find  symbol  length  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.value,  value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.value,  value,  offset  +  len);	  out.append(baseUri,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
109	[BUG]  [BUGGY]  out.append(format,  value,  offset  +  len);  [CE]  cannot  find  symbol  length  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format,  value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format,  value,  offset  +  len);	  out.append(baseUri,    value,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
110	[BUG]  [BUGGY]  out.append(Object.valueOf(value,  offset,  len  +  1));  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(value,  offset,  len  +  1));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(value,  offset,  len  +  1));	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
111	[BUG]  [BUGGY]  out.append(Object.valueOf(value,  offset,  len)+  1);  [CE]  cannot  find  symbol  length  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(value,  offset,  len)+  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(value,  offset,  len)+  1);	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
112	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  [Delete]  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	[Delete]	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
113	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRecord(value,  offset,  len);  [CE]  cannot  find  symbol  length  [FE]      IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingRecord(value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingRecord(value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  length  [FE]        IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  length  [FE]          IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingException( " ");	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRecord(out,  value,  offset  +  len);  [CE]  cannot  find  symbol  length  [FE]            IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingRecord(out,  value,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingRecord(out,  value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler.handleEscaped(value,  offset,  len);  [CE]  cannot  find  symbol  length  [FE]              IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleEscaped(value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleEscaped(value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
118	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  2);  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  2);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  offset  +  len  -  2);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
119	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  *  2  -  1);  [CE]  cannot  find  symbol  length  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  *  2  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  offset  +  len  *  2  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
120	[BUG]  [BUGGY]  out.append(value,  offset,  offset  -  len  -  1);  [CE]  cannot  find  symbol  length  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  -  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  offset  -  len  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
121	[BUG]  [BUGGY]  out.append(data,  offset,  offset  +  len  -  1);  [CE]  cannot  find  symbol  length  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(data,  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(data,  offset,  offset  +  len  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
122	[BUG]  [BUGGY]  out.append(ObjectUtilities.valueOf(object),  offset,  offset  +  len);  [CE]  cannot  find  symbol  length  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectUtilities.valueOf(object),  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectUtilities.valueOf(object),  offset,  offset  +  len);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
123	[BUG]  [BUGGY]  out.append(Object.valueOf(value),  offset,  offset  +  len);  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(value),  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(value),  offset,  offset  +  len);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
124	[BUG]  [BUGGY]  out.append(Object.valueOf(object),  offset,  value  +  len);  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object),  offset,  value  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object),  offset,  value  +  len);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
125	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
126	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
127	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
128	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
129	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(!newRecord)  {  out.append(value,  offset,  offset  +  len  -  1);  }  else  {  out.append(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
130	[BUG]  [BUGGY]  out.append(data,  offset,  offset  +  len);  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(data,  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(data,  offset,  offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
131	[BUG]  [BUGGY]      if(newRecord)  {  out.append('n');  }  else  {  out.append(format.getDelimiter());  }  [CE]  no  suitable  method  found  for  append(Object,int,int)  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  out.append('n');  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  out.append('n');  }  else  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(Object,int,int)	11	None	add
132	[BUG]  [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append('n');  }  [CE]  no  suitable  method  found  for  append(Object,int,int)  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append('n');  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(Object,int,int)	11	None	add
133	[BUG]  [BUGGY]      if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [CE]  no  suitable  method  found  for  append(Object,int,int)  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(Object,int,int)	11	None	add
134	[BUG]  [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append( "n ");  }  [CE]  no  suitable  method  found  for  append(Object,int,int)  [FE]          org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append( "n ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append( "n ");  }	  	non-compiled	[CE]  no  suitable  method  found  for  append(Object,int,int)	11	None	add
135	[BUG]  [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(value);  }  [CE]  cannot  find  symbol  length  [FE]            org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(value);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  printAndEscape(object,  offset,  len);  }  else  {  out.append(value);  }	  	non-compiled	[CE]  cannot  find  symbol  length	11	None	add
136	[BUG]  [BUGGY]      if(newRecord)  {  out.append(value);  }  else  {  out.append('n');  }  [CE]  cannot  find  symbol  length  [FE]              org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(newRecord)  {  out.append(value);  }  else  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(newRecord)  {  out.append(value);  }  else  {  out.append('n');  }	  	non-compiled	[CE]  cannot  find  symbol  length	11	None	add
137	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
138	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  len  +  1);  }  [CE]  cannot  find  symbol  length  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  len  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  len  +  1);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
139	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  off,  offset  +  len);  }  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(value,  off,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    if(newRecord)  {  out.append(value,  off,  offset  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol  length	9	None	add
140	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(value,  offset,  len);  }	  	non-compiled	[CE]  cannot  find  symbol  length	19	None	add
141	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparison())  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  length  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparison())  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparison())  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol  length	19	None	add
142	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  length  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(!newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
143	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  value.offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  length  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  value.offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  value.offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
144	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  value.length  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  cannot  find  symbol  length  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  value.length  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  value.length  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
145	[BUG]  [BUGGY]  out.append(format.getEscaping());  [CE]  cannot  find  symbol  length  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getEscaping());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getEscaping());	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol  length	20	None	replace
146	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value);  [CE]  cannot  find  symbol  length  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter(),  value);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter(),  value);	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol  length	20	None	replace
147	[BUG]  [BUGGY]  out.append(format.getDelimiter()  +  1);  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter()  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter()  +  1);	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
148	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ",   ");  }  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( ",   ");  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
149	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
150	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(newRecord)  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
151	[BUG]  [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter());  if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter());    if(format.isComparisonFailure())  {  out.append(format.getDelimiter());  }  else  {  printAndEscape(object,  offset,  offset,  len);  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
152	[BUG]  [BUGGY]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [CE]  'else'  without  'if'  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
153	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  offset  +  len);  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter(),  value,  offset,  offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
154	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len,  value.intValue());  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  offset,  offset  +  len,  value.intValue());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  offset,  offset  +  len,  value.intValue());	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
155	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(value!=  null)  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
156	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
157	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [CE]  cannot  find  symbol  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isComparisonFailure())  {  out.append(value,  offset,  offset  +  1);  }  else  {  out.append(format.getDelimiter());  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
158	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  1);  if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    1);    if(format.isComparison())  {  out.append(value,  offset,  offset  +  1);  }  else  {  printAndEscape(object,  offset,  offset  +  1);  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
159	[BUG]  [BUGGY]  out.append(baseUri,  value,  offset  +  1);  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(baseUri,  value,  offset  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(baseUri,  value,  offset  +  1);	  out.append(value,    offset,    offset    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
160	[BUG]  [BUGGY]  out.append(value);  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value);	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
161	[BUG]  [BUGGY]  out.append(value,  offset,  len);  [CE]  cannot  find  symbol  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,  offset,  len);	  out.append(format.getDelimiter());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
162	[BUG]  [BUGGY]  out.append('n');  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append('n');  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append('n');	  out.append(format.getDelimiter());    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	20	None	replace
163	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(!newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(!newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
164	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  if(newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    if(newRecord)  {  out.append(object,  offset,  offset  +  len  -  1);  }	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
165	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  out.append(object,  offset,  offset  +  len  -  1);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]        org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(value,  offset,  offset  +  len  -  1);  out.append(object,  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(value,    offset,    offset    +    len    -    1);    out.append(object,  offset,  offset  +  len  -  1);	  	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	16	None	add
166	[BUG]  [BUGGY]  out.append(ObjectUtils.valueOf(object),  offset,  offset  +  len);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectUtils.valueOf(object),  offset,  offset  +  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectUtils.valueOf(object),  offset,  offset  +  len);	  out.append(Object.valueOf(object),    offset,    offset    +    len);    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	13	None	replace
167	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  offset,  offset  +  len  -  1);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(format.getDelimiter(),  offset,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(format.getDelimiter(),  offset,  offset  +  len  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	17	None	replace
168	[BUG]  [BUGGY]  out.append(baseUri,  value,  offset  +  len  -  1);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]      org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(baseUri,  value,  offset  +  len  -  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(baseUri,  value,  offset  +  len  -  1);	  out.append(value,    offset,    offset    +    len    -    1);    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	17	None	replace
169	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(object,  value,  offset,  len);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingValue(object,  value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingValue(object,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	8	None	replace
170	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRecord(object,  value,  offset,  len);  [CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingRecord(object,  value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingRecord(object,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  method  printAndEscape  in  class  CSVPrinter  cannot  be  applied  to  given  types;	8	None	replace
171	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(value,  offset,  len);  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingValue(value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingValue(value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
172	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingRecord(object,  offset,  len);  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingRecord(object,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.handleMissingRecord(object,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
173	[BUG]  [BUGGY]  out.append(ObjectUtils.valueOf(object,  offset,  offset  +  len));  [CE]  cannot  find  symbol  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(ObjectUtils.valueOf(object,  offset,  offset  +  len));  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(ObjectUtils.valueOf(object,  offset,  offset  +  len));	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
174	[BUG]  [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len),  value.toString());  [CE]  cannot  find  symbol  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(Object.valueOf(object,  offset,  offset  +  len),  value.toString());  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(Object.valueOf(object,  offset,  offset  +  len),  value.toString());	  out.append(Object.valueOf(object,    offset,    offset    +    len));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
175	[BUG]  [BUGGY]  aughtExceptionHandler.processFailure(object,  value,  offset,  len);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  aughtExceptionHandler.processFailure(object,  value,  offset,  len);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	aughtExceptionHandler.processFailure(object,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
176	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(Object,  offset,  offset  +  len);  }  [CE]  cannot  find  symbol  [FE]    org.junit.ComparisonFailure:  expected:<a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  if(newRecord)  {  out.append(Object,  offset,  offset  +  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    if(newRecord)  {  out.append(Object,  offset,  offset  +  len);  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
177	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputs();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [CE]  illegal  start  of  expression  [FE]    org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputs();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputs();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
178	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [CE]  illegal  start  of  expression  [FE]      org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
179	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  format.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [CE]  illegal  start  of  expression  [FE]        org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  format.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  format.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
180	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.append('n');  }  [CE]  illegal  start  of  expression  [FE]          org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.append('n');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
181	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( "C1 ");  }  [CE]  illegal  start  of  expression  [FE]            org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( "C1 ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( "C1 ");  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
182	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('/');  }  [CE]  illegal  start  of  expression  [FE]              org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('/');  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append('/');  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
183	[BUG]  [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                org.junit.ComparisonFailure:  expected:<[a    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]      if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( ", ");  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	        if(format.isComparisonFailure())  {  ComparisonFailure[]  out  =  value.getOutputFields();  for(int  i  =  0,  len  =  out.length();  i  <  len;  ++i)  {  out.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
184	[BUG]  [BUGGY]  out.append(object,  value,  offset,  len  +  1);  [CE]  bad  operand  type  char  for  unary  operator  '!'  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  out.append(object,  value,  offset,  len  +  1);  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	out.append(object,  value,  offset,  len  +  1);	  out.append(object,    value,    offset    +    len);    	non-compiled	[CE]  bad  operand  type  char  for  unary  operator  '!'	15	None	replace
185	[BUG]  [BUGGY]  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  bad  operand  type  char  for  unary  operator  '!'  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(format.isEscaping())  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(format.isEscaping())  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  bad  operand  type  char  for  unary  operator  '!'	4	None	replace
186	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.toString());  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  bad  operand  type  char  for  unary  operator  '!'  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {  out.append(format.getDelimiter());  }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.toString());  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  newRecord  =  false;  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.5	125	125	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len,  value.toString());  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  bad  operand  type  char  for  unary  operator  '!'	4	None	replace
