bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  println(recordSeparator,  out).append('n');  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  out).append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  out).append('n');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
2	[BUG]  [BUGGY]  println(recordSeparator).append('N');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append('N');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append('N');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
3	[BUG]  [BUGGY]  println(out,  recordSeparator).append('n');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(out,  recordSeparator).append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(out,  recordSeparator).append('n');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
4	[BUG]  [BUGGY]  println(recordSeparator,  false).append('n');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  false).append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  false).append('n');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
5	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.println(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
6	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
9	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append('/');  }  else  {  println();  }	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
10	[BUG]  [BUGGY]  out.println(recordSeparator).append('/');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append('/');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append('/');	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
11	[BUG]  [BUGGY]  append(recordSeparator).append('/');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append('/');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append('/');	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
12	[BUG]  [BUGGY]  out.append('/').append(recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('/').append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('/').append(recordSeparator);	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
13	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ", " ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ", " ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "null ", " ");  }  else  {  recordSeparator  =  recordSeparator;  }	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
14	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
15	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
16	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
17	[BUG]  [BUGGY]  out.append(recordSeparator).append( ">n ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( ">n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( ">n ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
18	[BUG]  [BUGGY]  out.append(recordSeparator).append( "/> ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "/> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "/> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
19	[BUG]  [BUGGY]  out.println(recordSeparator).append( "> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
20	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
22	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toString();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toString();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toString();	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
23	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toLowerCase()  +  1;  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toLowerCase()  +  1;	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
24	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toUpperCase();  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toUpperCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toUpperCase();	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
25	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.US);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toLowerCase(Locale.US);	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
26	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.getDefault());  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.toLowerCase(Locale.getDefault());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.toLowerCase(Locale.getDefault());	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
27	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + "= ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + "= ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + "= ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
28	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + ", ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + ", ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + ", ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
29	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + "   ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + "   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + "   ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
30	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + "/ ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + "/ ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + "/ ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
31	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + "] ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + "] ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
32	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + ": ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + ": ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + ": ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
33	[BUG]  [BUGGY]  out.println( "C1= "  +  recordSeparator  + " " ");  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1= "  +  recordSeparator  + " " ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1= "  +  recordSeparator  + " " ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
34	[BUG]  [BUGGY]  println( "n ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "n ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
35	[BUG]  [BUGGY]  print('n');  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print('n');	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
36	[BUG]  [BUGGY]  println( "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "  <  identifier> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "  <  identifier> ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
37	[BUG]  [BUGGY]  println( ", ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( ", ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( ", ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
38	[BUG]  [BUGGY]  println( "> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "> ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
39	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toString();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toString();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.toString();	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  println(recordSeparator.toUpperCase());  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toUpperCase());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toUpperCase());	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
44	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase()  +  1);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase()  +  1);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase()  +  1);	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
45	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator.toLowerCase());  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator.toLowerCase());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase(),  recordSeparator.toLowerCase());	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
46	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase(),  true);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase(),  true);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase(),  true);	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
47	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase(),  false);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase(),  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase(),  false);	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
48	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "# ");  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
49	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "# ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "# ");  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
50	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
51	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
52	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
53	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "# ");  }  else  {  println();  }	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
54	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
55	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.println(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
56	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
57	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
58	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  println();  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
59	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
60	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
61	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator;  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
62	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.trim();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.trim();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  newRecord ");  }  else  {  recordSeparator  =  recordSeparator.trim();  }	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
63	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
64	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append('#');  }  else  {  println();  }	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
65	[BUG]  [BUGGY]  out.println(recordSeparator).append('#');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append('#');	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
66	[BUG]  [BUGGY]  append(recordSeparator).append('#');  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append('#');	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
67	[BUG]  [BUGGY]  out.print(recordSeparator).append('#');  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator).append('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator).append('#');	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
68	[BUG]  [BUGGY]  out.append('#').append(recordSeparator);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('#').append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('#').append(recordSeparator);	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
69	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
71	[BUG]  [BUGGY]  out.println(recordSeparator).append( "] ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "] ");	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  out.append(recordSeparator).append( "[] ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "[] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "[] ");	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.trim();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  this.recordSeparator.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
74	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim()  + "n ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim()  + "n ";  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.trim()  + "n ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
75	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
76	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  2);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  2);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  2);	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
77	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  }   ");  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
78	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  }   ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  }   ");  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
79	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  println();  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
80	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
81	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
82	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  }   ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
83	[BUG]  [BUGGY]  println(newRecord,  recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(newRecord,  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(newRecord,  recordSeparator);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
84	[BUG]  [BUGGY]  println(recordSeparator,  newRecord,  quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  newRecord,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  newRecord,  quote);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
85	[BUG]  [BUGGY]  println(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(out,  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(out,  recordSeparator);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
86	[BUG]  [BUGGY]  print(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  newRecord);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  newRecord);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
87	[BUG]  [BUGGY]  println(originalRecord,  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(originalRecord,  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(originalRecord,  recordSeparator);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
88	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
89	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
91	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
93	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ": ");  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
94	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ": ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ": ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( ": ");  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
95	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
96	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  println();  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
97	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator;  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
98	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
99	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }	  out.print(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
100	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.print(recordSeparator).append('n');  }  else  {  println();  }	  out.print(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
101	[BUG]  [BUGGY]  out.print(recordSeparator).append('/');  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator).append('/');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator).append('/');	  out.print(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  this.recordSeparator.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
103	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.toLowerCase();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  format.toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  format.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
104	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
105	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toUpperCase();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toUpperCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.toUpperCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
106	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
107	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
108	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
109	[BUG]  [BUGGY]  println(recordSeparator  + "] ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator  + "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator  + "] ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
110	[BUG]  [BUGGY]  out.println(recordSeparator  + ": ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ": ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ": ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
111	[BUG]  [BUGGY]  out.println( "] ");  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "] ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
112	[BUG]  [BUGGY]  out.print(recordSeparator  + "] ");  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator  + "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator  + "] ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
113	[BUG]  [BUGGY]  out.println(recordSeparator  + ".] ");  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ".] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ".] ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
114	[BUG]  [BUGGY]  out.println(recordSeparator  + ",  newRecord= ");  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ",  newRecord= ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ",  newRecord= ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
115	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( ", ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append( ", ");  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
116	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "n ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append( "n ");  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
117	[BUG]  [BUGGY]  if(newRecord  ==  recordSeparator)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  recordSeparator)  {  out.append(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  recordSeparator)  {  out.append(recordSeparator);  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
118	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append('n');  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
119	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append( "] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append( "] ");  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
120	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.println();  }	  out.println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
121	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
122	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println();  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
123	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
124	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
125	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
126	[BUG]  [BUGGY]  print(recordSeparator,  recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  recordSeparator);	  println(recordSeparator,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
127	[BUG]  [BUGGY]  println(recordSeparator,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  recordSeparator,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  recordSeparator,  quote);	  println(recordSeparator,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
128	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('#');  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
129	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('#');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('#');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append('#');  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
130	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println();  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
131	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
132	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('#');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('#');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append('#');  }  else  {  println();  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
133	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('#');  }  else  {  println(recordSeparator);  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
134	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(',');  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
135	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(',');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append(',');  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
136	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(',');  }  else  {  println();  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
137	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
138	[BUG]  [BUGGY]  char[]  newRecord  =  recordSeparator.toCharArray();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  char[]  newRecord  =  recordSeparator.toCharArray();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	char[]  newRecord  =  recordSeparator.toCharArray();	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
139	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(',');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(',');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append(',');  }  else  {  println();  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
140	[BUG]  [BUGGY]  out.append( "null ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "null ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "null ");	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
141	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
142	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append('n');  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
143	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
144	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
145	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append(']');  }  else  {  println();  }	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
146	[BUG]  [BUGGY]  out.println(recordSeparator).append(']');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append(']');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
147	[BUG]  [BUGGY]  append(recordSeparator).append(']');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append(']');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
148	[BUG]  [BUGGY]  out.append(recordSeparator).append('[');  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('[');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('[');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
149	[BUG]  [BUGGY]  print(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  quote);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
150	[BUG]  [BUGGY]  print(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  out);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  out);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
151	[BUG]  [BUGGY]  printLn(recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printLn(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printLn(recordSeparator);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
152	[BUG]  [BUGGY]  print(recordSeparator,  false);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  false);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
153	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
154	[BUG]  [BUGGY]  ||  recordSeparator!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  ||  recordSeparator!=  null)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	||  recordSeparator!=  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
155	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
156	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
157	[BUG]  [BUGGY]  Println(recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  Println(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	Println(recordSeparator);	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
158	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
159	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  println();  }	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
160	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
161	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println(recordSeparator).append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
162	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =n ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  =n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  =n ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	82	None	replace
163	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =  ' ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  =  ' ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  =  ' ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	82	None	replace
164	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
165	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
166	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
167	[BUG]  [BUGGY]  final  String  newRecord  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  newRecord  =  recordSeparator.toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  newRecord  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
168	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
169	[BUG]  [BUGGY]  if(recordSeparator.length()!=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()!=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()!=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
170	[BUG]  [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  >  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
171	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
172	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  if(recordSeparator.length()  ==  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
173	[BUG]  [BUGGY]  println(recordSeparator,  false,  quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  false,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  false,  quote);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
174	[BUG]  [BUGGY]  println(newRecord,  false);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(newRecord,  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(newRecord,  false);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
175	[BUG]  [BUGGY]  println(recordSeparator,  false,  true);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  false,  true);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  false,  true);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
176	[BUG]  [BUGGY]  println(originalRecordSeparator,  false);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(originalRecordSeparator,  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(originalRecordSeparator,  false);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
177	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "] ");  }	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
178	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
179	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
180	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
181	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "] ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
182	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator).append('n');  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
183	[BUG]  [BUGGY]  Appendable  out.append(recordSeparator).append('n');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  Appendable  out.append(recordSeparator).append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	Appendable  out.append(recordSeparator).append('n');	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
184	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  - ");  }	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
185	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
186	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  - ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  - ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  - ");  }	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
187	[BUG]  [BUGGY]  out.append( "  - ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - ").append(recordSeparator);	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
188	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  - ");  }  else  {  println();  }	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
189	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
190	[BUG]  [BUGGY]  if(recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  ==  0)  {  println(recordSeparator);  }	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
191	[BUG]  [BUGGY]  if(recordSeparator.length()!=  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()!=  0)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()!=  0)  {  println(recordSeparator);  }	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
192	[BUG]  [BUGGY]  if(recordSeparator.length()  >=  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  >=  0)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  >=  0)  {  println(recordSeparator);  }	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
193	[BUG]  [BUGGY]  if(recordSeparator.length()  <  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  <  0)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  <  0)  {  println(recordSeparator);  }	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
194	[BUG]  [BUGGY]  append(recordSeparator).append('N');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append('N');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append('N');	  append(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
195	[BUG]  [BUGGY]  append(recordSeparator).append('.');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append('.');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append('.');	  append(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
196	[BUG]  [BUGGY]  append(recordSeparator).append('_');  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append('_');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append('_');	  append(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
197	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  => ");  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
198	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
199	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  => ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  => ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  => ");  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
200	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  println();  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
201	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
202	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
203	[BUG]  [BUGGY]  out.append(recordSeparator).append( ",n ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( ",n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( ",n ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
204	[BUG]  [BUGGY]  out.append(recordSeparator).append( ",' ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( ",' ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( ",' ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
205	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
206	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.println(recordSeparator);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
207	[BUG]  [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
208	[BUG]  [BUGGY]  recordSeparator  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  recordSeparator  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	recordSeparator  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
209	[BUG]  [BUGGY]  final  RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  RecordSeparator  recordSeparator  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
210	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
211	[BUG]  [BUGGY]  newRecord  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  newRecord  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	newRecord  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
212	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
213	[BUG]  [BUGGY]  println(recordSeparator.toString()  + "n ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString()  + "n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString()  + "n ");	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
214	[BUG]  [BUGGY]  println(recordSeparator.toString()  + ": ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString()  + ": ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString()  + ": ");	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
215	[BUG]  [BUGGY]  println(recordSeparator.toString()  + "] ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString()  + "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString()  + "] ");	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
216	[BUG]  [BUGGY]  println(recordSeparator.toString(),  quote);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString(),  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString(),  quote);	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
217	[BUG]  [BUGGY]  println(recordSeparator.toString(),  false);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString(),  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString(),  false);	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  out.println( "Record: ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "Record: ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "Record: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
219	[BUG]  [BUGGY]  out.println( "NewRecord: ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "NewRecord: ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "NewRecord: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
220	[BUG]  [BUGGY]  out.println( "New  record: ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "New  record: ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "New  record: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
221	[BUG]  [BUGGY]  out.println( "C1:  n ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1:  n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1:  n ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
222	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
223	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >=  0)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
224	[BUG]  [BUGGY]  String  newRecord  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  String  newRecord  =  recordSeparator.toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	String  newRecord  =  recordSeparator.toLowerCase();	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
225	[BUG]  [BUGGY]  println(recordSeparator,  null);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  null);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  null);	  println(recordSeparator,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
226	[BUG]  [BUGGY]  println(recordSeparator.toString(),  true);  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString(),  true);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString(),  true);	  println(recordSeparator,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
227	[BUG]  [BUGGY]  println(newRecord,  true);  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(newRecord,  true);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(newRecord,  true);	  println(recordSeparator,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
228	[BUG]  [BUGGY]  Appendable  out.append( "null ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  Appendable  out.append( "null ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	Appendable  out.append( "null ");	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
229	[BUG]  [BUGGY]  final  Object  newRecord  =  recordSeparator.toString();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  Object  newRecord  =  recordSeparator.toString();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  Object  newRecord  =  recordSeparator.toString();	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
230	[BUG]  [BUGGY]  println(newRecord,  quote);  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(newRecord,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(newRecord,  quote);	  println(recordSeparator,    quote);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
231	[BUG]  [BUGGY]  println(recordSeparator,  quote,  newRecord);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  quote,  newRecord);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  quote,  newRecord);	  println(recordSeparator,    quote);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
232	[BUG]  [BUGGY]  println(recordSeparator,  this.newRecord);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  this.newRecord);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  this.newRecord);	  println(recordSeparator,    quote);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
233	[BUG]  [BUGGY]  out.append( ",null ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ",null ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ",null ");	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
234	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
235	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ",null ");  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
236	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
237	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
238	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
239	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ",null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  out.append(   ",n   ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
240	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
241	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append(':');  }  else  {  println();  }	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
242	[BUG]  [BUGGY]  out.println(recordSeparator).append(':');  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append(':');	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
243	[BUG]  [BUGGY]  append(recordSeparator).append(':');  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  append(recordSeparator).append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	append(recordSeparator).append(':');	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
244	[BUG]  [BUGGY]  out.print(recordSeparator).append(':');  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator).append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator).append(':');	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
245	[BUG]  [BUGGY]  out.append( "  =n ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  =n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  =n ");	  out.append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	86	None	replace
246	[BUG]  [BUGGY]  out.append( "  =  ' ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  =  ' ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  =  ' ");	  out.append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	86	None	replace
247	[BUG]  [BUGGY]  out.println(recordSeparator  + ": "  +  quote);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ": "  +  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ": "  +  quote);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
248	[BUG]  [BUGGY]  out.println(recordSeparator  + ",: "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ",: "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ",: "  +  recordSeparator);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
249	[BUG]  [BUGGY]  println(recordSeparator  + ": "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator  + ": "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator  + ": "  +  recordSeparator);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
250	[BUG]  [BUGGY]  out.println(recordSeparator  + ": "  +  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ": "  +  recordSeparator,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ": "  +  recordSeparator,  quote);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
251	[BUG]  [BUGGY]  _println(recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  _println(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	_println(recordSeparator);	  println();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
252	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length());  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length());	  final    String    recordSeparator    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
253	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(1,  recordSeparator.length());  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(1,  recordSeparator.length());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(1,  recordSeparator.length());	  final    String    recordSeparator    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
254	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  +  1);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  +  1);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  +  1);	  final    String    recordSeparator    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
255	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()));  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()));  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()));	  final    String    recordSeparator    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
256	[BUG]  [BUGGY]  out.append( ",null ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ",null ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ",null ",  recordSeparator);	  out.append(   ",n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
257	[BUG]  [BUGGY]  out.append( ", ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ", ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ", ",  recordSeparator);	  out.append(   ",n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
258	[BUG]  [BUGGY]  out.append( ",null, ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ",null, ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ",null, ",  recordSeparator);	  out.append(   ",n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
259	[BUG]  [BUGGY]  out.append( ",null ", "recordSeparator ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ",null ", "recordSeparator ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ",null ", "recordSeparator ");	  out.append(   ",n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
260	[BUG]  [BUGGY]  out.append( "  => ").append(recordSeparator).append( "  => ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  => ").append(recordSeparator).append( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  => ").append(recordSeparator).append( "  => ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
261	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =>n ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  =>n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  =>n ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
262	[BUG]  [BUGGY]  out.println(recordSeparator).append( "  => ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "  => ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
263	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  -> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  -> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  -> ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
264	[BUG]  [BUGGY]  out.append( "  => ").append( "  => ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  => ").append( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  => ").append( "  => ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
265	[BUG]  [BUGGY]  out.append(recordSeparator).append( "/. ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "/. ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "/. ");	  out.append(recordSeparator).append(   "/   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
266	[BUG]  [BUGGY]  out.println(recordSeparator).append( "/ ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "/ ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "/ ");	  out.append(recordSeparator).append(   "/   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
267	[BUG]  [BUGGY]  out.append( "/ ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "/ ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "/ ").append(recordSeparator);	  out.append(recordSeparator).append(   "/   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
268	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
269	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
270	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
271	[BUG]  [BUGGY]  out.println(recordSeparator).append( ": ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( ": ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( ": ");	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
272	[BUG]  [BUGGY]  out.append(recordSeparator).append( ":n ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( ":n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( ":n ");	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
273	[BUG]  [BUGGY]  out.append( ": ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ": ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ": ").append(recordSeparator);	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
274	[BUG]  [BUGGY]  println(newRecord,  out);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(newRecord,  out);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(newRecord,  out);	  println(recordSeparator,    out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
275	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( "] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
276	[BUG]  [BUGGY]  String  newRecord  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  String  newRecord  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	String  newRecord  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
277	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "[] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
278	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
279	[BUG]  [BUGGY]  out.append(recordSeparator).append( "#n ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "#n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "#n ");	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
280	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
281	[BUG]  [BUGGY]  out.println(recordSeparator).append( "# ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "# ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "# ");	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
282	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
283	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
284	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
285	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
286	[BUG]  [BUGGY]  out.println(recordSeparator  + "= "  +  quote);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "= "  +  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "= "  +  quote);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
287	[BUG]  [BUGGY]  out.println(recordSeparator  + "=' "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "=' "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "=' "  +  recordSeparator);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
288	[BUG]  [BUGGY]  println(recordSeparator  + "= "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator  + "= "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator  + "= "  +  recordSeparator);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
289	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
290	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
291	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  - "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  - "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  - "  +  recordSeparator);	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
292	[BUG]  [BUGGY]  out.println(recordSeparator).append( "  - ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append( "  - ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append( "  - ");	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
293	[BUG]  [BUGGY]  out.append(recordSeparator).append('  ');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('  ');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('  ');	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
294	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
295	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "n ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append( "n ");  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
296	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(newRecord);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(newRecord);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append(newRecord);  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
297	[BUG]  [BUGGY]  out.print( "n ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print( "n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print( "n ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
298	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
299	[BUG]  [BUGGY]  out.append('[').append(recordSeparator).append(']');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('[').append(recordSeparator).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('[').append(recordSeparator).append(']');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
300	[BUG]  [BUGGY]  out.append(recordSeparator).append(']'  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append(']'  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append(']'  +  recordSeparator);	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
301	[BUG]  [BUGGY]  out.print(recordSeparator).append(']');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator).append(']');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
302	[BUG]  [BUGGY]  out.println(recordSeparator  + "= " "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "= " "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "= " "  +  recordSeparator);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
303	[BUG]  [BUGGY]  out.println(recordSeparator  + "== "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "== "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "== "  +  recordSeparator);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
304	[BUG]  [BUGGY]  out.println(recordSeparator  + "=? "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "=? "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "=? "  +  recordSeparator);	  out.println(recordSeparator    +   "=   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
305	[BUG]  [BUGGY]  printSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator.trim();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator.trim();	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
306	[BUG]  [BUGGY]  out.println(recordSeparator).append('[');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append('[');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append('[');	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
307	[BUG]  [BUGGY]  print(recordSeparator,  true);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator,  true);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator,  true);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
308	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
309	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[null] ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[null] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "[null] ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
310	[BUG]  [BUGGY]  out.append( "  - "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - "  +  recordSeparator);	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
311	[BUG]  [BUGGY]  out.append( "  - ").append(quoteSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - ").append(quoteSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - ").append(quoteSeparator);	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
312	[BUG]  [BUGGY]  out.append( "  - ").append('n');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - ").append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - ").append('n');	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
313	[BUG]  [BUGGY]  out.append( ":n ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ":n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ":n ");	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
314	[BUG]  [BUGGY]  out.append( ": "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ": "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ": "  +  recordSeparator);	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
315	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "[] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "[] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
316	[BUG]  [BUGGY]  out.append(recordSeparator).append('#'  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('#'  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('#'  +  recordSeparator);	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
317	[BUG]  [BUGGY]  out.append(recordSeparator).append('#').append(quote);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('#').append(quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('#').append(quote);	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
318	[BUG]  [BUGGY]  out.append(recordSeparator).append('>');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('>');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('>');	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
319	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  : "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  : "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  : "  +  recordSeparator);	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
320	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  }   ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  }   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  }   ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
321	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  <  / ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  <  / ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  <  / ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
322	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
323	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
324	[BUG]  [BUGGY]  TextUtilities.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  TextUtilities.println(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	TextUtilities.println(recordSeparator);	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
325	[BUG]  [BUGGY]  final  if(recordSeparator!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  if(recordSeparator!=  null)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  if(recordSeparator!=  null)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
326	[BUG]  [BUGGY]  final  if(recordSeparator  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  if(recordSeparator  ==  null)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  if(recordSeparator  ==  null)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
327	[BUG]  [BUGGY]  out.print(recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator);	  out.println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
328	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "null ",  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
329	[BUG]  [BUGGY]  final  String  recordSeparator  =  fileSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  fileSeparator.toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  fileSeparator.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
330	[BUG]  [BUGGY]  println(recordSeparator.toString(),  out);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString(),  out);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString(),  out);	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
331	[BUG]  [BUGGY]  out.append( "  println ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  println ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  println ");	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
332	[BUG]  [BUGGY]  out.append( "  newRecord ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  newRecord ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  newRecord ",  recordSeparator);	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
333	[BUG]  [BUGGY]  out.append( "  newRecord: ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  newRecord: ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  newRecord: ");	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
334	[BUG]  [BUGGY]  out.append( "  newRecord ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  newRecord ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  newRecord ").append(recordSeparator);	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
335	[BUG]  [BUGGY]  out.append( "  newRecord= ");  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  newRecord= ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  newRecord= ");	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
336	[BUG]  [BUGGY]  out.append( "  newRecord ").append(recordSeparator).append( "] ");  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  newRecord ").append(recordSeparator).append( "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  newRecord ").append(recordSeparator).append( "] ");	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
337	[BUG]  [BUGGY]  out.append( "n ", "n ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "n ", "n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "n ", "n ");	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
338	[BUG]  [BUGGY]  out.append( "n "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "n "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "n "  +  recordSeparator);	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
339	[BUG]  [BUGGY]  out.append( "n ", "recordSeparator ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "n ", "recordSeparator ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "n ", "recordSeparator ");	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
340	[BUG]  [BUGGY]  print(recordSeparator.toString());  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  print(recordSeparator.toString());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	print(recordSeparator.toString());	  println();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
341	[BUG]  [BUGGY]  println(recordSeparator.getName());  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.getName());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.getName());	  println();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
342	[BUG]  [BUGGY]  out.append('  ').append(recordSeparator).append( "  - ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('  ').append(recordSeparator).append( "  - ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('  ').append(recordSeparator).append( "  - ");	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
343	[BUG]  [BUGGY]  out.append( "  - ").append( "  - ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - ").append( "  - ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - ").append( "  - ");	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
344	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  - ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  - ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  - ",  recordSeparator);	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
345	[BUG]  [BUGGY]  out.append(recordSeparator).append('/'  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append('/'  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append('/'  +  recordSeparator);	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
346	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.trim().toLowerCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
347	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim().toUpperCase();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim().toUpperCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim().toUpperCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
348	[BUG]  [BUGGY]  println(recordSeparator,  out,  quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  out,  quote);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  out,  quote);	  println(recordSeparator,    out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
349	[BUG]  [BUGGY]  logger.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  logger.println(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	logger.println(recordSeparator);	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
350	[BUG]  [BUGGY]  LOGGER.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  LOGGER.println(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	LOGGER.println(recordSeparator);	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
351	[BUG]  [BUGGY]  ln(recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  ln(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	ln(recordSeparator);	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
352	[BUG]  [BUGGY]  parse(recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  parse(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	parse(recordSeparator);	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
353	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println( "n ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println( "n ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println( "n ");  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
354	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(1);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(1);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.substring(1);	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
355	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
356	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
357	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
358	[BUG]  [BUGGY]  out.append(recordSeparator).append( "/C1 ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "/C1 ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "/C1 ");	  out.append(recordSeparator).append(   "/   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
359	[BUG]  [BUGGY]  out.append( "#n ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "#n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "#n ");	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
360	[BUG]  [BUGGY]  out.append( "# ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "# ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "# ").append(recordSeparator);	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
361	[BUG]  [BUGGY]  out.append( "# ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "# ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "# ",  recordSeparator);	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
362	[BUG]  [BUGGY]  out.append( "#n ".equals(recordSeparator));  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "#n ".equals(recordSeparator));  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "#n ".equals(recordSeparator));	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
363	[BUG]  [BUGGY]  out.append( "   ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "   ");	  out.append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
364	[BUG]  [BUGGY]  out.append(recordSeparator).append( "   ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "   ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
365	[BUG]  [BUGGY]  out.append(',').append(recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(',').append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(',').append(recordSeparator);	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
366	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
367	[BUG]  [BUGGY]  out.append( "  }   ",  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }   ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }   ",  recordSeparator);	  out.append(   ",n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
368	[BUG]  [BUGGY]  println(recordSeparator,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  recordSeparator,  newRecord);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  recordSeparator,  newRecord);	  println(recordSeparator,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
369	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
370	[BUG]  [BUGGY]  out.println(recordSeparator  + "= ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "= ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "= ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
371	[BUG]  [BUGGY]  out.println(recordSeparator  + "]n ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + "]n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + "]n ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
372	[BUG]  [BUGGY]  if(recordSeparator.length()  ==  0)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  ==  0)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  ==  0)  {  out.append('#');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
373	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator.toUpperCase());  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator.toUpperCase());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase(),  recordSeparator.toUpperCase());	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
374	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.println(recordSeparator);  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
375	[BUG]  [BUGGY]  out.append( "[] ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "[] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "[] ");	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
376	[BUG]  [BUGGY]  out.append( "] ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "] ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "] ").append(recordSeparator);	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
377	[BUG]  [BUGGY]  out.append( "] ").append(quoteSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "] ").append(quoteSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "] ").append(quoteSeparator);	  out.append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
378	[BUG]  [BUGGY]  out.append( "  => ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  => ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  => ").append(recordSeparator);	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
379	[BUG]  [BUGGY]  out.append( "  -> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  -> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  -> ");	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
380	[BUG]  [BUGGY]  out.append( "  =>n ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  =>n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  =>n ");	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
381	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append('n');  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
382	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('N');  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append('N');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append('N');  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
383	[BUG]  [BUGGY]  println(recordSeparator, " ");  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator, " ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator, " ");	  println(recordSeparator,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
384	[BUG]  [BUGGY]  out.println(recordSeparator  + ":n "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ":n "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ":n "  +  recordSeparator);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
385	[BUG]  [BUGGY]  out.println( "C1=' "  +  recordSeparator  + "' ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "C1=' "  +  recordSeparator  + "' ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "C1=' "  +  recordSeparator  + "' ");	  out.println(   "C1=   "   "    +    recordSeparator    +   "   "   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
386	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  ||  recordSeparator.trim().length()  ==  0)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
387	[BUG]  [BUGGY]  println(recordSeparator,  false,  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  false,  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  false,  recordSeparator);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
388	[BUG]  [BUGGY]  println(recordSeparator).append('#');  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append('#');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
389	[BUG]  [BUGGY]  println(recordSeparator).append('/');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append('/');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append('/');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
390	[BUG]  [BUGGY]  println(recordSeparator).append('[');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append('[');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append('[');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
391	[BUG]  [BUGGY]  println(recordSeparator).append(']');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append(']');	  println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
392	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('N');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append('N');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append('N');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
393	[BUG]  [BUGGY]  println( "] ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "] ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
394	[BUG]  [BUGGY]  println( "C1 ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "C1 ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "C1 ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
395	[BUG]  [BUGGY]  out.append( "  }   ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }   ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }   ").append(recordSeparator);	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
396	[BUG]  [BUGGY]  out.append( "  }  n ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }  n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }  n ");	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
397	[BUG]  [BUGGY]  out.append('  }  ');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('  }  ');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('  }  ');	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
398	[BUG]  [BUGGY]  out.append( "  }   ").append(quoteSeparator);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }   ").append(quoteSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }   ").append(quoteSeparator);	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
399	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.println( ">> ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.println( ">> ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.println( ">> ");  }	  if(recordSeparator    ==    null)    {    out.println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
400	[BUG]  [BUGGY]  out.append(recordSeparator).append(':'  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append(':'  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append(':'  +  recordSeparator);	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
401	[BUG]  [BUGGY]  println(recordSeparator,  format);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  format);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  format);	  println(recordSeparator,    out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
402	[BUG]  [BUGGY]  println(recordSeparator,  recordSeparator.toString());  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  recordSeparator.toString());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  recordSeparator.toString());	  println(recordSeparator,    out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
403	[BUG]  [BUGGY]  println(recordSeparator,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  out,  newRecord);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  out,  newRecord);	  println(recordSeparator,    out);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
404	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  false)  {  out.append(recordSeparator);  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
405	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }	  if(recordSeparator    ==    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
406	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append('n');  }	  if(recordSeparator    ==    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
407	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.println(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
408	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.println(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
409	[BUG]  [BUGGY]  println(recordSeparator,  false,  format);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  false,  format);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  false,  format);	  println(recordSeparator,    false);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
410	[BUG]  [BUGGY]  printLn(recordSeparator,  false);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printLn(recordSeparator,  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printLn(recordSeparator,  false);	  println(recordSeparator,    true);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
411	[BUG]  [BUGGY]  out.println( "  => ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "  => ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
412	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }	  if(recordSeparator    ==    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
413	[BUG]  [BUGGY]  out.append('  ').append(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('  ').append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('  ').append(recordSeparator);	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
414	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
415	[BUG]  [BUGGY]  println( "  => ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "  => ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
416	[BUG]  [BUGGY]  println( "  <  / ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "  <  / ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "  <  / ");	  println('n');    	non-compiled	[CE]  <identifier>  expected	80	None	replace
417	[BUG]  [BUGGY]  out.print(recordSeparator  + ": "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print(recordSeparator  + ": "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print(recordSeparator  + ": "  +  recordSeparator);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
418	[BUG]  [BUGGY]  out.println(recordSeparator  + ".   "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ".   "  +  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ".   "  +  recordSeparator);	  out.println(recordSeparator    +   ":   "    +    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
419	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
420	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  ==  0)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.trim().length()  ==  0)  {  out.println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.trim().length()  ==  0)  {  out.println();  }	  if(recordSeparator!=    null)    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
421	[BUG]  [BUGGY]  out.append( ", ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ", ").append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ", ").append(recordSeparator);	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
422	[BUG]  [BUGGY]  out.append( ", ").append(recordSeparator).append( ", ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ", ").append(recordSeparator).append( ", ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ", ").append(recordSeparator).append( ", ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
423	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[null] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[null] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( "[null] ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
424	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator);  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toLowerCase(),  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toLowerCase(),  recordSeparator);	  println(recordSeparator.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
425	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
426	[BUG]  [BUGGY]  ||  recordSeparator  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  ||  recordSeparator  ==  null)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	||  recordSeparator  ==  null)  {  out.append( "null ");  }	  if(recordSeparator    ==    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
427	[BUG]  [BUGGY]  out.append(':');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(':');	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
428	[BUG]  [BUGGY]  println( ": ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( ": ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( ": ");	  out.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
429	[BUG]  [BUGGY]  if(recordSeparator.length()  >=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  >=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  >=  0)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
430	[BUG]  [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  >  0)  {  out.append('n');  }	  if(recordSeparator.length()    ==    0)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
431	[BUG]  [BUGGY]  out.append( ", ").append(recordSeparator).append( "] ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ", ").append(recordSeparator).append( "] ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ", ").append(recordSeparator).append( "] ");	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
432	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
433	[BUG]  [BUGGY]  ||  recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  ||  recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	||  recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
434	[BUG]  [BUGGY]  println('#');  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println('#');	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
435	[BUG]  [BUGGY]  out.append('#',  recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append('#',  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append('#',  recordSeparator);	  out.append('#');    	non-compiled	[CE]  <identifier>  expected	81	None	replace
436	[BUG]  [BUGGY]  out.append( "  <   ").append(recordSeparator).append( "> ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  <   ").append(recordSeparator).append( "> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  <   ").append(recordSeparator).append( "> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
437	[BUG]  [BUGGY]  out.append( "  <  / ").append(recordSeparator).append( "> ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  <  / ").append(recordSeparator).append( "> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  <  / ").append(recordSeparator).append( "> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
438	[BUG]  [BUGGY]  out.append( "  }   ").append(recordSeparator).append( "> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }   ").append(recordSeparator).append( "> ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }   ").append(recordSeparator).append( "> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
439	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  <   ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(recordSeparator).append( "  <   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(recordSeparator).append( "  <   ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
440	[BUG]  [BUGGY]  out.println( "  - ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println( "  - ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println( "  - ");	  out.append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
441	[BUG]  [BUGGY]  println(recordSeparator).append(':');  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator).append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator).append(':');	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
442	[BUG]  [BUGGY]  out.append(format.getRecordSeparator()).append(':');  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(format.getRecordSeparator()).append(':');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(format.getRecordSeparator()).append(':');	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
443	[BUG]  [BUGGY]  out.append(':').append(recordSeparator);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(':').append(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(':').append(recordSeparator);	  out.append(recordSeparator).append(':');    	non-compiled	[CE]  <identifier>  expected	69	None	replace
444	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
445	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.equals( " "))  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.equals( " "))  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.equals( " "))  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
446	[BUG]  [BUGGY]  reportln(recordSeparator);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  reportln(recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	reportln(recordSeparator);	  if(recordSeparator.length()    >    0)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
447	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
448	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
449	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  println(recordSeparator);  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
450	[BUG]  [BUGGY]  out.append( "  =   " ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  =   " ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  =   " ");	  out.append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	86	None	replace
451	[BUG]  [BUGGY]  out.println(recordSeparator).append('N');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator).append('N');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator).append('N');	  out.println(recordSeparator).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
452	[BUG]  [BUGGY]  println( "  newRecord ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println( "  newRecord ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println( "  newRecord ");	  out.append(   "    newRecord   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
453	[BUG]  [BUGGY]  println(recordSeparator.toString(),  recordSeparator);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toString(),  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toString(),  recordSeparator);	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
454	[BUG]  [BUGGY]  println(recordSeparator.toPlainString());  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator.toPlainString());  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator.toPlainString());	  println(recordSeparator.toString());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
455	[BUG]  [BUGGY]  out.append(format.getRecordSeparator()).append('/');  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(format.getRecordSeparator()).append('/');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(format.getRecordSeparator()).append('/');	  out.append(recordSeparator).append('/');    	non-compiled	[CE]  <identifier>  expected	66	None	replace
456	[BUG]  [BUGGY]  out.println(recordSeparator  + ". ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.println(recordSeparator  + ". ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.println(recordSeparator  + ". ");	  out.println(recordSeparator    +   "]   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
457	[BUG]  [BUGGY]  out.append( "/ ".append(recordSeparator).append( "/. ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "/ ".append(recordSeparator).append( "/. ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "/ ".append(recordSeparator).append( "/. ");	  out.append(recordSeparator).append(   "/   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
458	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim()  + "] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim()  + "] ";  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	final  String  recordSeparator  =  recordSeparator.trim()  + "] ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
459	[BUG]  [BUGGY]  out.append(format.getRecordSeparator()).append(']');  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(format.getRecordSeparator()).append(']');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(format.getRecordSeparator()).append(']');	  out.append(recordSeparator).append(']');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
460	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.trim().length()  ==  0)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
461	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {  println();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  <  0)  {  println();  }	  if(recordSeparator    ==    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
462	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator    ==    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toString();    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
463	[BUG]  [BUGGY]  println(recordSeparator,  recordSeparator,  false);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  println(recordSeparator,  recordSeparator,  false);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	println(recordSeparator,  recordSeparator,  false);	  println(recordSeparator,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
464	[BUG]  [BUGGY]  out.append( "  = ").append(recordSeparator).append( "  =  ' ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  = ").append(recordSeparator).append( "  =  ' ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  = ").append(recordSeparator).append( "  =  ' ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	82	None	replace
465	[BUG]  [BUGGY]  out.append( "  = ").append(recordSeparator).append( "  =   ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  = ").append(recordSeparator).append( "  =   ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  = ").append(recordSeparator).append( "  =   ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	82	None	replace
466	[BUG]  [BUGGY]  this.recordSeparator  =  recordSeparator.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  this.recordSeparator  =  recordSeparator.trim().toLowerCase();  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	this.recordSeparator  =  recordSeparator.trim().toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim().toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
467	[BUG]  [BUGGY]  out.append(format.getRecordSeparator()).append('#');  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append(format.getRecordSeparator()).append('#');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append(format.getRecordSeparator()).append('#');	  out.append(recordSeparator).append('#');    	non-compiled	[CE]  <identifier>  expected	68	None	replace
468	[BUG]  [BUGGY]  out.append( "  }   ").append(recordSeparator).append( ");n ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  }   ").append(recordSeparator).append( ");n ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  }   ").append(recordSeparator).append( ");n ");	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
469	[BUG]  [BUGGY]  out.append( ",  newRecord ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( ",  newRecord ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( ",  newRecord ");	  out.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
470	[BUG]  [BUGGY]  out.print( "  => ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.print( "  => ");  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.print( "  => ");	  out.append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	85	None	replace
471	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(format.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(format.getRecordSeparator());  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(newRecord!=  recordSeparator)  {  out.append(format.getRecordSeparator());  }	  if(newRecord!=    recordSeparator)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
472	[BUG]  [BUGGY]  appendable.append(recordSeparator).append('n');  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  appendable.append(recordSeparator).append('n');  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	appendable.append(recordSeparator).append('n');	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
473	[BUG]  [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator.length()  >  0)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator.length()  >  0)  {  out.append(',');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(',');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
474	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
475	[BUG]  [BUGGY]  printSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  printSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	printSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";	  printSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
476	[BUG]  [BUGGY]  out.append( "  = ",  recordSeparator);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  = ",  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  = ",  recordSeparator);	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
477	[BUG]  [BUGGY]  out.append( "  => ", "  recordSeparator);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  => ", "  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  => ", "  recordSeparator);	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
478	[BUG]  [BUGGY]  out.append( "  - ", "  recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {      [BUGGY]  out.append( "  - ", "  recordSeparator);  [BUGGY]      }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	336	336	1	replace	out.append( "  - ", "  recordSeparator);	  out.append(   "n   ",    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
