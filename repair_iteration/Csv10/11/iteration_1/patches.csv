bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( ", ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( ", ");  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( ", ");  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  if(newRecord!=  null)  println();  if(recordSeparator  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  println();  if(recordSeparator  ==  null)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  println();  if(recordSeparator  ==  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( "n ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  println();  }  else  {  out.append( "n ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.append( "n ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  out.append( "n ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  if(newRecord!=  null)  println();  else  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  println();  else  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  println();  else  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  out.append( "null ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  out.append( "null ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	out.append( "null ");	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "   ");  }	  if(newRecord!=    null)    {    out.append(   "   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "   ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "   ");  }	  if(newRecord!=    null)    {    out.append(   "   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "   ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "   ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "   ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append('n');  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append('n');  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  >=  null)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  >=  null)  {  out.append('n');  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "] ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  out.append( "] ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  out.append( "] ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	out.append( "] ");	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  out.append( "n ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	out.append( "n ");	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "# ");  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(quote)  {  if(newRecord!=  null)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  out.append( "[] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  out.append('n');  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	out.append('n');	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( ", ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  println();  }  else  {  out.append( ", ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.append( "] ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  {  println();  }  else  {  out.append( "] ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  if(quote)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(quote)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(quote)  {  out.append('n');  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  out.append( "n ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  out.append( "n ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(quote)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)  {  out.append('n');  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null  ||  quote)  {  out.append('n');  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null  ||  quote)  {  out.append('n');  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append('n');    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  false)  {  out.append(recordSeparator);  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  false)  {  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  false)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]        org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.append( ", ");  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  out.append( ", ");  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
50	[BUG]  [BUGGY]  if(newRecord!=  null)  println();  if(newRecord  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]          org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  if(newRecord!=  null)  println();  if(newRecord  ==  null)  {  println();  }  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	if(newRecord!=  null)  println();  if(newRecord  ==  null)  {  println();  }	  println();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();  if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;    [BUGGY]  out.append( ", ");  [BUGGY]      [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	339	339	1	replace	out.append( ", ");	  if(newRecord!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
