bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
2	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
3	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
4	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
5	[BUG]  [BUGGY]  if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
6	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
7	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
8	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
9	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(record);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
10	[BUG]  [BUGGY]  out.append( "] ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  out.append( "] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	out.append( "] ");	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
12	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
13	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "[] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
14	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( ", ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   ",   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
15	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "n ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "n ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "] ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "] ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "> ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "> ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().getRecordSeparator()  + "n ";	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().getRecordSeparator(quote);	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "   ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "   ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "   ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
21	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
22	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
23	[BUG]  [BUGGY]  if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
24	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
25	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
26	[BUG]  [BUGGY]  CharSeparator  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  CharSeparator  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	CharSeparator  recordSeparator  =  this.format.getRecordSeparator();	  char    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
27	[BUG]  [BUGGY]  Character  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Character  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Character  recordSeparator  =  this.format.getRecordSeparator();	  char    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
28	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
29	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
30	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
31	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
32	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
33	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  / "] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
34	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
35	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
36	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( ", ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
37	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
38	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
39	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
40	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
41	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  / "null ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  / "null ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  / "null ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "null   ";    	non-compiled	[CE]  <identifier>  expected	106	None	replace
42	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/null ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/null ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/null ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "null   ";    	non-compiled	[CE]  <identifier>  expected	106	None	replace
43	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "null   ";    	non-compiled	[CE]  <identifier>  expected	106	None	replace
44	[BUG]  [BUGGY]  out.append( "null ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  out.append( "null ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	out.append( "null ");	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
45	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
46	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
47	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  out.append( "n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	out.append( "n ");	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
48	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "# ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "# ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
49	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
50	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
51	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
52	[BUG]  [BUGGY]  if(newRecord!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
56	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
58	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
59	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRawSeparator();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRawSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRawSeparator();	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
60	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "____________________________________________________________  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "____________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "____________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
61	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_____________________________________________________________  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_____________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "_____________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
62	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "___________________________________________________________  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "___________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "___________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
63	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "______________________________________________________________  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "______________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "______________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
64	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_______________________________________________________________  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_______________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "_______________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
65	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_________________________________________________________________  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "_________________________________________________________________  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "_________________________________________________________________	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
66	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  /  1;  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  /  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  /  1;	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
67	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
68	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
69	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
70	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + ": ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
71	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "/ ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
72	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ". ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ". ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + ". ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
73	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ", ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + ", ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + ", ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
74	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "= ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "= ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
75	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "_ ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "_ ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
76	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
77	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
78	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
79	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
80	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
81	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
82	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
83	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
84	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
87	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + ". ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
89	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRawSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRawSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRawSeparator();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
91	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "   ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "   ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "   ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
92	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  - ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  - ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  - ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
93	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "-- ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "-- ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "-- ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( ": ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( ": ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( ": ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
95	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1 ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1 ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "C1 ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
96	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1: ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1: ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "C1: ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
97	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "= ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "=   ";    	non-compiled	[CE]  <identifier>  expected	58	None	replace
98	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "= ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  / "= ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "=   ";    	non-compiled	[CE]  <identifier>  expected	58	None	replace
99	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "= ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "= ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "=   ";    	non-compiled	[CE]  <identifier>  expected	58	None	replace
100	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getColumnSeparator();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getColumnSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getColumnSeparator();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
101	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRawSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRawSeparator()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRawSeparator()  + "n ";	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
102	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.toString();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.toString();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.toString();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRawCompiler();  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRawCompiler();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRawCompiler();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getQualifiedName();  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getQualifiedName();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getQualifiedName();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
105	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
106	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
107	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
108	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(format  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  if(format  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  if(format  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator!=  null)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  if(quote  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
113	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
115	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
116	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
117	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
118	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
119	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "   ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "   ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
120	[BUG]  [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
121	[BUG]  [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(recordSeparator,  0,  out,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(recordSeparator,  0,  out,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(recordSeparator,  0,  out,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(recordSeparator,  0,  println,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(recordSeparator,  0,  println,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(recordSeparator,  0,  println,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length  -  1);  [CE]  <identifier>  expected  [FE]                                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length  -  1);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length  -  1);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(data,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(data,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(data,  0,  recordSeparator,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(text,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(text,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(text,  0,  recordSeparator,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
128	[BUG]  [BUGGY]  Printer  out  =  getFormat().println( "n ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getFormat().println( "n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getFormat().println( "n ");	  Printer    out    =    getFormat();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
129	[BUG]  [BUGGY]  Printer  out  =  getFormat().println();  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getFormat().println();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getFormat().println();	  Printer    out    =    getFormat();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
130	[BUG]  [BUGGY]  Printer  out  =  getFormat().println( "] ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getFormat().println( "] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getFormat().println( "] ");	  Printer    out    =    getFormat();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
131	[BUG]  [BUGGY]  final  char[]  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  char[]  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  char[]  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
132	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
134	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.* ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.* ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/.* ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
135	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.   ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.   ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.   ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
136	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.n ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/.n ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
137	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "/.html ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
138	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + ": ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
139	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  quote;  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  quote;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  quote;	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
140	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + ": ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator()  + ": ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
141	[BUG]  [BUGGY]  Printer  out  =  getPrinter().println();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getPrinter().println();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getPrinter().println();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
142	[BUG]  [BUGGY]  Printer  out  =  getPrinter().println( "n ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getPrinter().println( "n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getPrinter().println( "n ");	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
143	[BUG]  [BUGGY]  Printer  out  =  getPrinter().println( "] ");  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getPrinter().println( "] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getPrinter().println( "] ");	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
144	[BUG]  [BUGGY]  Printer  out  =  getOutputFile();  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getOutputFile();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getOutputFile();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
145	[BUG]  [BUGGY]  Printer  out  =  getPrinter().println( "C1 ");  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getPrinter().println( "C1 ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getPrinter().println( "C1 ");	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
146	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
147	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
148	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
149	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
150	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
151	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/ ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	48	None	replace
152	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + ", ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	48	None	replace
153	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "_ ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	48	None	replace
154	[BUG]  [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
155	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
156	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
157	[BUG]  [BUGGY]  final  static  String  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  static  String  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  static  String  recordSeparator  =  this.format.getRecordSeparator();	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
158	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRawSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRawSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRawSeparator();	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
159	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "n ";	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
160	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "] ";	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
161	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(),  quote);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(),  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator(),  quote);	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
162	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /identifier> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  /identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
163	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().print( "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().print( "  <  identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().print( "  <  identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
164	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "  <  identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "  <  identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
165	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  Identifier> ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  Identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  Identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
166	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  i> ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  i> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  i> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
167	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  >  identifier> ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  >  identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  >  identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
168	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(newRecord);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
169	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(record);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(record);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
170	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
171	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.record);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.record);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
172	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(null);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(null);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(null);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
173	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
174	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
175	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
176	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
177	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
178	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator());  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator());  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
179	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator().length);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator().length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRawSeparator().length);  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
180	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getLength());  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getLength());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getLength());  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
181	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
182	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  /  1;  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  /  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  /  1;	  String    recordSeparator    =    this.format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
183	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  -  1;  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  -  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  -  1;	  String    recordSeparator    =    this.format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
184	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().toString();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().toString();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().toString();	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
185	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println();	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
186	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().toString()  + "n ";  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().toString()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().toString()  + "n ";	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
187	[BUG]  [BUGGY]  if(newRecord!=  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
188	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
189	[BUG]  [BUGGY]  if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
190	[BUG]  [BUGGY]  if(quote)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(format!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
191	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
192	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
193	[BUG]  [BUGGY]  if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  newRecord,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
194	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
195	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  recordSeparator  =  newRecord.toString();  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
196	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  >=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  >=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
197	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote,  format);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote,  format);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote,  format);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
198	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
199	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format,  quote);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
200	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record,  quote);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
201	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(text,  quote);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(text,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(text,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
202	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator()  + "/ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
203	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "/ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
204	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRawSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
205	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRowSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRowSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRowSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
206	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRotationSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRotationSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRotationSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
207	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
208	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
209	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.name);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.name);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.name);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
210	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.record);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.record);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
211	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
212	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(newRecord);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(newRecord);	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
213	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(record);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(record);	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
214	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
215	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.newRecord);	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
216	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  int  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
217	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator()  +  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator()  +  1;	  String    recordSeparator    =    format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
218	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "_ ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "_ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
219	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "_ ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  / "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  / "_ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
220	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "._ ";  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "._ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "._ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
221	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);	  String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
222	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);	  String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
223	[BUG]  [BUGGY]  char  recordSeparator  =  FormatUtils.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  char  recordSeparator  =  FormatUtils.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	char  recordSeparator  =  FormatUtils.getRecordSeparator();	  String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
224	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSuffix();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSuffix();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSuffix();	  String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
225	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  newRecord);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
226	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.name);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.name);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.name);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
227	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  true);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  true);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  true);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
228	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().print( "> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().print( "> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().print( "> ");	  final    String    recordSeparator    =    getFormat().println(   ">   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
229	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  /> ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  /> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  /> ");	  final    String    recordSeparator    =    getFormat().println(   ">   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
230	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  / ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  / ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  / ");	  final    String    recordSeparator    =    getFormat().println(   ">   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
231	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ",n ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ",n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + ",n ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ",   ";    	non-compiled	[CE]  <identifier>  expected	32	None	replace
232	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  quote);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
233	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println(this);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println(this);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println(this);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
234	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(this);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(this);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().getRecordSeparator(this);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
235	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(null);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(null);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(null);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
236	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format(this);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format(this);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format(this);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
237	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().recordSeparator(this);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().recordSeparator(this);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().recordSeparator(this);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
238	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  out.append( ", ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	out.append( ", ");	  if(newRecord    ==    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
239	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
240	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  quote);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
241	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().recordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().recordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().recordSeparator();	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
242	[BUG]  [BUGGY]  if(newRecord!=  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
243	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
244	[BUG]  [BUGGY]  if(quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
245	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator!=  null)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator!=  null)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
246	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "   ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
247	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "[] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "[] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
248	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append( "[] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append( "[] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
249	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( ": ");  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( ": ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( ": ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
250	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
251	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
252	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
253	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
254	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
255	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
256	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().print( "] ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().print( "] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().print( "] ");	  final    String    recordSeparator    =    getFormat().println(   "]   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
257	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "[C1] ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "[C1] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "[C1] ");	  final    String    recordSeparator    =    getFormat().println(   "]   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
258	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
259	[BUG]  [BUGGY]  if(record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
260	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getRecordSeparator());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
261	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
262	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
263	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
264	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
265	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
266	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "] ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
267	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  quote);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
268	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
269	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(out);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
270	[BUG]  [BUGGY]  String  recordSeparator  =  quote.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  quote.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  quote.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
271	[BUG]  [BUGGY]  String  recordSeparator  =  this.newRecord.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.newRecord.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.newRecord.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
272	[BUG]  [BUGGY]  String  recordSeparator  =  this.form.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.form.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.form.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
273	[BUG]  [BUGGY]  String  recordSeparator  =  file.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  file.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  file.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
274	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator()  + "n ";	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
275	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator().toString();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator().toString();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator().toString();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
276	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator().trim();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator().trim();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator().trim();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
277	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator(true);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator(true);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator(true);	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
278	[BUG]  [BUGGY]  String  recordSeparator  =  getNewRecordSeparator();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getNewRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getNewRecordSeparator();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
279	[BUG]  [BUGGY]  String  recordSeparator  =  getRawSeparator();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRawSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRawSeparator();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
280	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
281	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(false);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
282	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(true,  quote);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(true,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(true,  quote);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
283	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  quote);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  quote);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
284	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(false);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator(false);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().getRecordSeparator(false);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
285	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  true);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  true);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  true);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
286	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  false);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  false);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(false,  false);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
287	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
288	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
289	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
290	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.text);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.text);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.text);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
291	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord,  quote);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
292	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.newRecord);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this.newRecord);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
293	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord),  quote);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord),  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord),  quote);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
294	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().getRecordSeparator()  + "] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
295	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator()  + "] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
296	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  / "] ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  / "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  / "] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
297	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "   ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "   ");  }	  if(newRecord!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
298	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
299	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRawSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRawSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRawSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
300	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
301	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
302	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
303	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
304	[BUG]  [BUGGY]  String  recordSeparator  =  Format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  Format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  Format.getRecordSeparator();	  char    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
305	[BUG]  [BUGGY]  Character  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Character  recordSeparator  =  format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Character  recordSeparator  =  format.getRecordSeparator();	  char    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
306	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
307	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    false)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
308	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  / "] ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	76	None	replace
309	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  * "] ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	76	None	replace
310	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ",] ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + ",] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + ",] ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	76	None	replace
311	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  newRecord);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
312	[BUG]  [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
313	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
314	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
315	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(quote);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.recordSeparator(quote);	  String    recordSeparator    =    this.format.recordSeparator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
316	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.println();  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.println();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.println();	  String    recordSeparator    =    this.format.recordSeparator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
317	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
318	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
319	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  for(final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  for(final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
320	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
321	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
322	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( ">n ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( ">n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( ">n ");	  final    String    recordSeparator    =    getFormat().println(   ">   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
323	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/> ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/> ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/> ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
324	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/C1 ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/C1 ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/C1 ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
325	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "./ ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "./ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "./ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
326	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ".html;  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ".html;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ".html;	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
327	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  this.quote);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  this.quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
328	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  quote);  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
329	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  format);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  format);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote,  format);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format,    quote);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
330	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
331	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  0,  recordSeparator);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
332	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
333	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
334	[BUG]  [BUGGY]  Printer  out  =  getOutputFormat();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getOutputFormat();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getOutputFormat();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
335	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
336	[BUG]  [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
337	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
338	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRoleSeparator();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRoleSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRoleSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
339	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
340	[BUG]  [BUGGY]  CharSeparator  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  CharSeparator  recordSeparator  =  format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	CharSeparator  recordSeparator  =  format.getRecordSeparator();	  char    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
341	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.getRecordSeparator(this);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.getRecordSeparator(this);	  String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
342	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
343	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRoleSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRoleSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRoleSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
344	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getQuoteSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getQuoteSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getQuoteSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
345	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
346	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
347	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
348	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
349	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  newRecord;  }  else  {  println();  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
350	[BUG]  [BUGGY]  if(quote  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
351	[BUG]  [BUGGY]  if(quote  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  out.append( "null ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  out.append( "null ");  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
352	[BUG]  [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
353	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
354	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
355	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  /  1;  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  /  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  /  1;	  String    recordSeparator    =    format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
356	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(compiler);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(compiler);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(compiler);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
357	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().separator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().separator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().separator();	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
358	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <!identifier> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <!identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <!identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
359	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/. ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "/. ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "/. ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
360	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1 ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1 ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1 ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
361	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "records ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "records ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "records ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
362	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1  0   ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1  0   ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1  0   ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
363	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "serialize   ");  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "serialize   ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "serialize   ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
364	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1_0   ");  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1_0   ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1_0   ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
365	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.*n ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.*n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/.*n ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
366	[BUG]  [BUGGY]  if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
367	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
368	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
369	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
370	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
371	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  System.arraycopy(record,  0,  out,  recordSeparator,  recordSeparator,  false);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  System.arraycopy(record,  0,  out,  recordSeparator,  recordSeparator,  false);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  System.arraycopy(record,  0,  out,  recordSeparator,  recordSeparator,  false);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
372	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(record);  out.append( ", ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
373	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
374	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
375	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator()  +  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator()  +  1;	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
376	[BUG]  [BUGGY]  String  recordSeparator  =  getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getRecordSeparator()  + "] ";	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
377	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
378	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
379	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
380	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false, " ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(false, " ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(false, " ");	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
381	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  * "] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  * "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  * "] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(record,  0,  out,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(record,  0,  out,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(record,  0,  out,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
383	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  1);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
384	[BUG]  [BUGGY]  boolean  newRecord  =  this.format.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  boolean  newRecord  =  this.format.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	boolean  newRecord  =  this.format.getRecordSeparator(this.quote);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
385	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(this.quote,  0);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
386	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
387	[BUG]  [BUGGY]  if(newRecord)  {  out.append(format.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(format.getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(format.getRecordSeparator());  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
388	[BUG]  [BUGGY]  if(quote  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
389	[BUG]  [BUGGY]  if(!quote)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  out.append( "] ");  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
390	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getLongSeparator();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getLongSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getLongSeparator();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
391	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRawSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRawSeparator()  +  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRawSeparator()  +  1;	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
392	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "_ "  +  quote;  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "_ "  +  quote;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "_ "  +  quote;	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
393	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
394	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
395	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
396	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
397	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
398	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    false)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
399	[BUG]  [BUGGY]  if(newRecord!=  false)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    false)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
400	[BUG]  [BUGGY]  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
401	[BUG]  [BUGGY]  if(newRecord)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
402	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
403	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  newRecord);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
404	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  this.newRecord);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  this.newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name,  this.newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
405	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.recordSeparator(this.quote);	  String    recordSeparator    =    this.format.recordSeparator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
406	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.separator();  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.separator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.separator();	  String    recordSeparator    =    this.format.recordSeparator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
407	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(newRecord);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.recordSeparator(newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.recordSeparator(newRecord);	  String    recordSeparator    =    this.format.recordSeparator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
408	[BUG]  [BUGGY]  if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!newRecord)  {  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
409	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
410	[BUG]  [BUGGY]  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
411	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  this.quote;  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  this.quote;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + ": "  +  this.quote;	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
412	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  /   ": ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  /   ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  /   ": ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
413	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord    >=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
414	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }	  if(newRecord    >=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
415	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
416	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
417	[BUG]  [BUGGY]  if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( "n ");  }	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
418	[BUG]  [BUGGY]  boolean  newRecord  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  boolean  newRecord  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	boolean  newRecord  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
419	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator()  +  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator()  +  1;	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
420	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
421	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "== ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "== ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "== ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "=   ";    	non-compiled	[CE]  <identifier>  expected	58	None	replace
422	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "[] ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "[] ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "[] ");	  final    String    recordSeparator    =    getFormat().println(   "]   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
423	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  newRecord);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  newRecord);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
424	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  out);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  out);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(this,  out);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
425	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this).toString();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator(this).toString();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator(this).toString();	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
426	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  newRecord);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
427	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quoted);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quoted);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  quoted);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
428	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  false);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  false);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out,  false);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
429	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(println);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(println);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(println);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
430	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
431	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
432	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "null ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
433	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1n ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1n ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "C1n ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
434	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
435	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  fileSeparator  =  FormatUtils.getRecordSeparator(format);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  fileSeparator  =  FormatUtils.getRecordSeparator(format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  fileSeparator  =  FormatUtils.getRecordSeparator(format);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
436	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
437	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( "n ");  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
438	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  out.append( ", ");  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
439	[BUG]  [BUGGY]  if(quote  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  out.append( "] ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  out.append( "] ");  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(   "]   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
440	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.info);  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(this.info);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(this.info);	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
441	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(null);  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator(null);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator(null);	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
442	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  * "] ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  * "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  * "] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
443	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/] ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
444	[BUG]  [BUGGY]  File  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  File  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	File  recordSeparator  =  this.format.getRecordSeparator();	  char    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
445	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  newRecord);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record,  newRecord);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
446	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
447	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
448	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
449	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
450	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
451	[BUG]  [BUGGY]  if(quote)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
452	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord)  {  if(format!=  null)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
453	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  >=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  >=  false)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
454	[BUG]  [BUGGY]  if(quote  ==  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote  ==  null)  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote  ==  null)  {  out.append( ", ");  }	  if(newRecord    ==    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
455	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
456	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(out);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator(out);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator(out);	  String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
457	[BUG]  [BUGGY]  String  recordSeparator  =  this.record.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.record.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.record.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
458	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    out.append(format.getRecordSeparator());    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
459	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
460	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
461	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( ", ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
462	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
463	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
464	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "# ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "# ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "# ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "null   ";    	non-compiled	[CE]  <identifier>  expected	106	None	replace
465	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
466	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord  ==  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
467	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.info);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.info);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.info);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
468	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(quote)  {  if(newRecord!=  null)  {  recordSeparator  =  newRecord;  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
469	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  newRecord;  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    recordSeparator    =    newRecord;    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
470	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getLongSeparator();  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getLongSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getLongSeparator();	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
471	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRawSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRawSeparator()  + "n ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRawSeparator()  + "n ";	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
472	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getQualifiedName();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getQualifiedName();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getQualifiedName();	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
473	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRawSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRawSeparator()  +  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRawSeparator()  +  1;	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
474	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.toString();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.toString();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.toString();	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
475	[BUG]  [BUGGY]  if(newRecord)  {  out.append(FormatUtils.getRecordSeparator(format));  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(FormatUtils.getRecordSeparator(format));  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(FormatUtils.getRecordSeparator(format));  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
476	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
477	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
478	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
479	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
480	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(quote);  }  else  {  println();  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
481	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  println();  }	  final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
482	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  else  {  out.append( ", ");  }	  final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
483	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  *  1;  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  *  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  *  1;	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
484	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  format.getRecordSeparator()  + "/ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	28	None	replace
485	[BUG]  [BUGGY]  Printer  out  =  getOut();  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Printer  out  =  getOut();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Printer  out  =  getOut();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
486	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "no ");  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
487	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
488	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
489	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  recordSeparator);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  recordSeparator);  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
490	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  out,  recordSeparator,  1);  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
491	[BUG]  [BUGGY]  char  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  char  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	char  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
492	[BUG]  [BUGGY]  String  recordSeparator  =  FormatUtils.recordSeparator(newRecord);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  FormatUtils.recordSeparator(newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  FormatUtils.recordSeparator(newRecord);	  String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
493	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  this.format.recordSeparator();  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  this.format.recordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  this.format.recordSeparator();	  static    final    String    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
494	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getText();  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getText();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getText();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
495	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getLabel();  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getLabel();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getLabel();	  String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
496	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(!quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(!quote)  {  if(newRecord)  {  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    if(format!=    null)    {    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
497	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(newRecord);  }  else  {  out.append( ", ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(newRecord);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
498	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(quote);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(quote);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
499	[BUG]  [BUGGY]  if(format!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(format!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(format!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  }	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
500	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  format.getRecordSeparator()  + ": ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	29	None	replace
501	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  out.append( "n ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
502	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1= ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1= ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1= ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
503	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1 ",  newRecord);  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1 ",  newRecord);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1 ",  newRecord);	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
504	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1  -  1 ");  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().format( "C1  -  1 ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().format( "C1  -  1 ");	  final    String    recordSeparator    =    getFormat().format(   "n   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
505	[BUG]  [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.quote!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
506	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
507	[BUG]  [BUGGY]  this.quote  =  FormatUtils.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  this.quote  =  FormatUtils.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	this.quote  =  FormatUtils.getRecordSeparator(this.quote);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
508	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.quote);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
509	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  *  1;  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  *  1;  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  *  1;	  String    recordSeparator    =    this.format.getRecordSeparator()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
510	[BUG]  [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  recordSeparator  =  getFormat().getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  recordSeparator  =  getFormat().getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(getFormat().getRecordSeparator());  recordSeparator  =  getFormat().getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
511	[BUG]  [BUGGY]  if(newRecord)  {  recordSeparator  =  getFormat().getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  recordSeparator  =  getFormat().getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  recordSeparator  =  getFormat().getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
512	[BUG]  [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  return;  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  return;  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(getFormat().getRecordSeparator());  return;  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
513	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
514	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  1,  recordSeparator.length);  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
515	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
516	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
517	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRowSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRowSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRowSeparator();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
518	[BUG]  [BUGGY]  this.recordSeparator  =  FormatUtils.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  this.recordSeparator  =  FormatUtils.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	this.recordSeparator  =  FormatUtils.getRecordSeparator();	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
519	[BUG]  [BUGGY]  Object  recordSeparator  =  FormatUtils.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Object  recordSeparator  =  FormatUtils.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Object  recordSeparator  =  FormatUtils.getRecordSeparator();	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
520	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
521	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
522	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.format);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.format);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
523	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.. ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.. ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "/.. ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
524	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.. ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "/.. ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "/.. ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	59	None	replace
525	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "C1 ");  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "C1 ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "C1 ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
526	[BUG]  [BUGGY]  String  recordSeparator  =  getFormat().println( "  <  /record> ");  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getFormat().println( "  <  /record> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getFormat().println( "  <  /record> ");	  String    recordSeparator    =    getFormat().getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
527	[BUG]  [BUGGY]  if(newRecord!=  true)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  true)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  true)  {  final  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    false)    {    final    String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
528	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "[null] ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "[null] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "[null] ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
529	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "] ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
530	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
531	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
532	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(this);  }	  final    String    recordSeparator    =    getFormat().getRecordSeparator(this);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
533	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  => ");  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  => ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  => ");	  final    String    recordSeparator    =    getFormat().println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
534	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "  [record] ";  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "  [record] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "  [record] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
535	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "[] ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator()  + "[] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  format.getRecordSeparator()  + "[] ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	67	None	replace
536	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "_ ";  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "_ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  format.getRecordSeparator()  + "_ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
537	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "._ ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "._ ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "._ ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
538	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1  <  identifier> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "C1  <  identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "C1  <  identifier> ");	  final    String    recordSeparator    =    getFormat().println(   ">   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
539	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
540	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(FormatUtils.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  out.append(FormatUtils.getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  out.append(FormatUtils.getRecordSeparator());  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
541	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
542	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
543	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
544	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  null);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  null);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  null);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
545	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  false);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  false);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  false);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
546	[BUG]  [BUGGY]  if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
547	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
548	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
549	[BUG]  [BUGGY]  if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(getFormat()!=  null)  {  final  String  recordSeparator  =  getFormat().toString();  }  else  {  println();  }	  final    String    recordSeparator    =    getFormat().toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
550	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(format));  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(format));  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(format));  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
551	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format,  newRecord);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(format);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
552	[BUG]  [BUGGY]  char  recordSeparator  =  getRecordSeparator();  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  char  recordSeparator  =  getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	char  recordSeparator  =  getRecordSeparator();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
553	[BUG]  [BUGGY]  String  recordSeparator  =  getCSVRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  getCSVRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  getCSVRecordSeparator();	  String    recordSeparator    =    getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
554	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
555	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  }	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
556	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  getFormat().getRecordSeparator(true);	  final    String    recordSeparator    =    getFormat().getRecordSeparator(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
557	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
558	[BUG]  [BUGGY]  if(newRecord)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  if(this.format!=  null)  {  recordSeparator  =  this.format.getRecordSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    System.arraycopy(this.format,    0,    recordSeparator,    0,    this.format.getName());    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
559	[BUG]  [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
560	[BUG]  [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
561	[BUG]  [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(out!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  out.append( ", ");  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
562	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
563	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(out);  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(out);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
564	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
565	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  println();  }	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
566	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( "n ");  }	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
567	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().recordSeparator();  }  else  {  out.append( ", ");  }	  final    String    recordSeparator    =    getFormat().recordSeparator();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
568	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "[] ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator()  + "[] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator()  + "[] ";	  final    String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	76	None	replace
569	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
570	[BUG]  [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
571	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().format(recordSeparator);  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
572	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getLabelSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getLabelSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getLabelSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
573	[BUG]  [BUGGY]  int  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  int  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	int  recordSeparator  =  this.format.getRecordSeparator();	  char    recordSeparator    =    this.format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
574	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "  [record] ";  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "  [record] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "  [record] ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	4	None	replace
575	[BUG]  [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  out.append(getFormat().getRecordSeparator());  }  else  {  out.append( ", ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
576	[BUG]  [BUGGY]  out.append(getFormat().getRecordSeparator());  [CE]  <identifier>  expected  [FE]                          org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  out.append(getFormat().getRecordSeparator());  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	out.append(getFormat().getRecordSeparator());	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
577	[BUG]  [BUGGY]  System.arraycopy(record,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(record,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(record,  0,  recordSeparator,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
578	[BUG]  [BUGGY]  System.arraycopy(record,  0,  newRecord,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  System.arraycopy(record,  0,  newRecord,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	System.arraycopy(record,  0,  newRecord,  0,  recordSeparator.length);	  System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
579	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "no ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  out.append( "no ");  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
580	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(record));  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(record));  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator(record));  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
581	[BUG]  [BUGGY]  FormatUtils.println(record);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  FormatUtils.println(record);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	FormatUtils.println(record);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator(record);    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
582	[BUG]  [BUGGY]  String  recordSeparator  =  this.quote.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.quote.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.quote.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
583	[BUG]  [BUGGY]  String  recordSeparator  =  this.text.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.text.getRecordSeparator();  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.text.getRecordSeparator();	  String    recordSeparator    =    newRecord.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
584	[BUG]  [BUGGY]  if(format!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(format!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(format!=  null)  {  String  recordSeparator  =  format.getRecordSeparator();  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
585	[BUG]  [BUGGY]  Arrays.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  Arrays.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	Arrays.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);	  String    recordSeparator    =    format.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
586	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "no ");  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "no ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "no ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
587	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "] ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  getFormat().getRecordSeparator();  }  else  {  out.append( "] ");  }	  if(newRecord)    {    final    String    recordSeparator    =    getFormat().getRecordSeparator();    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
588	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( "n ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
589	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( ", ");  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  out.append( ", ");  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
590	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "= ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "= ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  format.getRecordSeparator()  + "= ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "=   ";    	non-compiled	[CE]  <identifier>  expected	58	None	replace
591	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
592	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  FormatUtils.println(recordSeparator);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	FormatUtils.println(recordSeparator);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
593	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.recordSeparator();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
594	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [CE]  <identifier>  expected  [FE]                              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(FormatUtils.getRecordSeparator());  System.arraycopy(recordSeparator,  0,  recordSeparator,  0,  recordSeparator.length);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    System.arraycopy(recordSeparator,    0,    recordSeparator,    0,    recordSeparator.length);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
595	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  else  {  println();  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
596	[BUG]  [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.quote!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.quote!=  null)  {  final  String  recordSeparator  =  this.format.getRecordSeparator(this.quote);  }	  final    String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
597	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "/. ";  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "/. ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "/. ";	  String    recordSeparator    =    this.format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	2	None	replace
598	[BUG]  [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "null ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  String  recordSeparator  =  this.format.getRecordSeparator()  + "null ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	String  recordSeparator  =  this.format.getRecordSeparator()  + "null ";	  String    recordSeparator    =    format.getRecordSeparator()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	65	None	replace
599	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  this.format.getRecordSeparator();  }  else  {  println();  }	  if(this.format!=    null)    {    final    String    recordSeparator    =    this.format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
600	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /body> ");  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /body> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  /body> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
601	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  getFormat().println( "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  getFormat().println( "  <  identifier> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  getFormat().println( "  <  identifier> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
602	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /form> ");  [CE]  <identifier>  expected  [FE]                        org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  getFormat().println( "  <  /form> ");  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  getFormat().println( "  <  /form> ");	  final    String    recordSeparator    =    getFormat().println(   "    <    identifier>   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
603	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  }  [CE]  <identifier>  expected  [FE]            org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append(format.getRecordSeparator());  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
604	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  out.append( "no ");  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  out.append( "no ");  }  else  {  println();  }	  if(newRecord    ==    null)    {    out.append(   "n   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
605	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getLabelSeparator();  }  else  {  println();  }	  if(newRecord)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
606	[BUG]  [BUGGY]  if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.name!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
607	[BUG]  [BUGGY]  this.name  =  FormatUtils.getRecordSeparator(this.name);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  this.name  =  FormatUtils.getRecordSeparator(this.name);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	this.name  =  FormatUtils.getRecordSeparator(this.name);	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
608	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.name);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.name);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
609	[BUG]  [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "] ";  [CE]  <identifier>  expected  [FE]              org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  static  final  String  recordSeparator  =  format.getRecordSeparator()  + "] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	static  final  String  recordSeparator  =  format.getRecordSeparator()  + "] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
610	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "[] ";  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "[] ";  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "[] ";	  final    String    recordSeparator    =    format.getRecordSeparator()    +   "]   ";    	non-compiled	[CE]  <identifier>  expected	57	None	replace
611	[BUG]  [BUGGY]  if(format  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(format  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(format  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(newRecord    ==    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
612	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [CE]  <identifier>  expected  [FE]                org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  System.arraycopy(this.format,  0,  recordSeparator,  0,  this.format.getName());  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
613	[BUG]  [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.format!=  null)  {  final  String  recordSeparator  =  this.format.getRawSeparator();  }  else  {  println();  }	  final    String    recordSeparator    =    this.format.getRawSeparator();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
614	[BUG]  [BUGGY]  char  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [CE]  <identifier>  expected  [FE]                    org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  char  recordSeparator  =  this.format.getRecordSeparator(this.quote);  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	char  recordSeparator  =  this.format.getRecordSeparator(this.quote);	  String    recordSeparator    =    this.format.getRecordSeparator(this.quote);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
615	[BUG]  [BUGGY]  if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(this.record!=  null)  {  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(this.record);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.getRecordSeparator(this.record);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
616	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  org.junit.ComparisonFailure:  expected:<[C1      [CONTEXT]      public  void  println()  throws  IOException  {      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      if  (recordSeparator  !=  null)  {  out.append(recordSeparator);  }  newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv10/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.20851441405707477	334	334	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  formatUtils.getRecordSeparator();  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    FormatUtils.getRecordSeparator();    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
