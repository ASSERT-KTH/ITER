bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	      if(alternates    ==    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
2	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	      if(alternates    ==    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
3	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	19	None	replace
4	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	19	None	replace
5	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
6	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
7	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
8	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
9	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
10	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
12	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
14	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	18	None	replace
15	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	18	None	replace
16	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
17	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	10	None	replace
18	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
19	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
20	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	      if(alternates    ==    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
21	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
22	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
23	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
24	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	9	None	replace
25	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
26	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
27	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
28	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
29	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
30	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
31	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
32	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
33	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
34	[BUG]  [BUGGY]  if(t!=  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t!=  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
35	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
36	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
37	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  t	8	None	replace
38	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	add	throw  new  IllegalArgumentException( " ");	  return    true;    	compilable	  [FE]  IllegalArgumentException  	8	7	replace
39	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalArgumentException( " ");	  return    true;    	compilable	  [FE]  IllegalArgumentException  	8	7	replace
40	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  true;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  t	8	None	replace
41	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  }	  return    true;    	non-compiled	[CE]  missing  return  statement	8	None	replace
42	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
43	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(interiors);  [CE]  cannot  find  symbol  interiors  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(interiors);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(interiors);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  interiors	2	None	replace
44	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediates);  [CE]  cannot  find  symbol  intermediates  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(intermediates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  intermediates	2	None	replace
45	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Sets	2	None	replace
46	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
47	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
48	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
49	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
50	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Arrays.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
51	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
52	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  JSType  alternates  =  Sets.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Sets	1	None	replace
53	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
54	[BUG]  [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
55	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	      if(alternates    ==    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
56	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
57	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
58	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	18	None	replace
59	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
60	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
61	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
62	[BUG]  [BUGGY]  return  true;  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
63	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
64	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
65	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	      if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
66	[BUG]  [BUGGY]  while(!alternates.isEmpty())  {  return  false;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  while(!alternates.isEmpty())  {  return  false;  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty())  {  return  false;	  return    true;    	non-compiled	[CE]  ';'  expected	8	None	replace
67	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  false;  }	  return    true;    	non-compiled	[CE]  missing  return  statement	8	None	replace
68	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Sets	2	None	replace
69	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternates);	      Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
70	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
71	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
72	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
73	[BUG]  [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
74	[BUG]  [BUGGY]  return  true;  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
75	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
76	[BUG]  [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	return    true;    if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	7	None	add
77	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	      if(alternates    ==    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
78	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	      if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	4	None	replace
79	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
80	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	10	None	replace
81	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
82	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
83	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
84	[BUG]  [BUGGY]  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
85	[BUG]  [BUGGY]  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
86	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }	      for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
87	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  JSType[]  alternates  =  Sets.newHashSet();  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet();	      Set    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Sets	1	None	replace
88	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }	      for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
89	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
90	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
91	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  false;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  t	8	None	replace
92	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  true;  }	  return    true;    	non-compiled	[CE]  cannot  find  symbol  t	8	None	replace
93	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
94	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }    [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]    return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	      if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
