bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
2	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
3	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
4	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(reverse);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(reverse);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(reverse);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
5	[BUG]  [BUGGY]  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
6	[BUG]  [BUGGY]  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
7	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  false;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	71	None	replace
8	[BUG]  [BUGGY]  while(t.hasNext())  {  t  =  t.next();  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.hasNext())  {  t  =  t.next();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.hasNext())  {  t  =  t.next();	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
9	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	71	None	replace
10	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	89	None	replace
11	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
12	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	91	None	replace
13	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }	  if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	91	None	replace
14	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }	  if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	91	None	replace
15	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }	  if(alternates!=    null)return    true;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	58	None	replace
16	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    }    	non-compiled	[CE]  ';'  expected	78	None	replace
17	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	40	None	replace
18	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isNativeType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isNativeType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isNativeType())  {  return  true;  }	  if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	40	None	replace
19	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
20	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
21	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
22	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
23	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
24	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
25	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  false;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
26	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  return    true;    if(alternates    ==    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
27	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  return    true;    if(alternates    ==    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
28	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }	  return    true;    if(alternates    ==    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
29	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }	  return    true;    if(alternates    ==    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
30	[BUG]  [BUGGY]  JSType[]  alternates  =  Collections.newHashSet();  [CE]  cannot  find  symbol  Collections  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Collections.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Collections.newHashSet();	  JSType[]    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Collections	87	None	replace
31	[BUG]  [BUGGY]  JSType[]  alternates  =  Lists.newHashSet();  [CE]  cannot  find  symbol  Lists  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Lists.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Lists.newHashSet();	  JSType[]    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	87	None	replace
32	[BUG]  [BUGGY]  JSType[]  alternates  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Lists.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Lists.newArrayList();	  JSType[]    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	87	None	replace
33	[BUG]  [BUGGY]  JSType[]  alternates  =  new  JSType[size()  ];  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  new  JSType[size()  ];  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  new  JSType[size()  ];	  JSType[]    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
34	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
35	[BUG]  [BUGGY]  if(t  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  <identifier>  expected	38	None	add
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]        IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	38	None	add
39	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]          IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	38	None	add
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.showError( "Unknown  type ");  [CE]  cannot  find  symbol  Throwables  [FE]            IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.showError( "Unknown  type ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.showError( "Unknown  type ");	  	non-compiled	[CE]  cannot  find  symbol  Throwables	38	None	add
41	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators);  [CE]  cannot  find  symbol  alternators  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternators);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  alternators	43	None	replace
42	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(t);  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(t);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(t);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  t	43	None	replace
43	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(reverse);  [CE]  cannot  find  symbol  reverse  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(reverse);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(reverse);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  reverse	43	None	replace
44	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(externs);  [CE]  cannot  find  symbol  externs  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(externs);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(externs);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  externs	43	None	replace
45	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  ';'  expected	77	None	replace
46	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
47	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
48	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
49	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
50	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  ArrayList.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
51	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  ArrayList.newHashSet();  [CE]  cannot  find  symbol  ArrayList  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  ArrayList.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  ArrayList.newHashSet();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  ArrayList	13	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
53	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
54	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
55	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
56	[BUG]  [BUGGY]  while(t.isUnknownType())  {  alternates.add(t);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  alternates.add(t);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  alternates.add(t);	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
57	[BUG]  [BUGGY]  Set  <  JSType>  others  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  others  =  Sets.newHashSet(alternates.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  others  =  Sets.newHashSet(alternates.values());	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
58	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(interfaces);  [CE]  cannot  find  symbol  interfaces  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(interfaces);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(interfaces);	  Set    <    JSType>    alternates    =    Sets.newHashSet(intermediates);    	non-compiled	[CE]  cannot  find  symbol  interfaces	44	None	replace
59	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateSeparators);  [CE]  cannot  find  symbol  intermediateSeparators  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateSeparators);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateSeparators);	  Set    <    JSType>    alternates    =    Sets.newHashSet(intermediates);    	non-compiled	[CE]  cannot  find  symbol  intermediateSeparators	44	None	replace
60	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intervals);  [CE]  cannot  find  symbol  intervals  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intervals);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(intervals);	  Set    <    JSType>    alternates    =    Sets.newHashSet(intermediates);    	non-compiled	[CE]  cannot  find  symbol  intervals	44	None	replace
61	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	37	None	replace
62	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isNativeType())  {  return  false;  }	  if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	37	None	replace
63	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
64	[BUG]  [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
65	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
66	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
67	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	  return    true;    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
68	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  true;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  true;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  true;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
69	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
70	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
71	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    this.alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
72	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    this.alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
73	[BUG]  [BUGGY]  if(!alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
74	[BUG]  [BUGGY]  while(!alternates.isEmpty())  {  return  true;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty())  {  return  true;  }	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  missing  return  statement	66	None	replace
75	[BUG]  [BUGGY]  if(alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.isEmpty())  {  while(!alternates.isEmpty())  {  return  false;  }	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
76	[BUG]  [BUGGY]  while(!alternates.isEmpty())  {  return  true;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty())  {  return  true;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty())  {  return  true;	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
77	[BUG]  [BUGGY]  while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;  }	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  cannot  find  symbol  t	66	None	replace
78	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
79	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
80	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  ';'  expected	81	None	replace
81	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  ';'  expected	81	None	replace
82	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }	  if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	92	None	replace
83	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	92	None	replace
84	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
85	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	59	None	replace
86	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
87	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
88	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
89	[BUG]  [BUGGY]  while(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(alternates!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(alternates!=  null)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
90	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
91	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
92	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates.values());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
94	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t.values());  [CE]  cannot  find  symbol  t  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t.values());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates.values());    	non-compiled	[CE]  cannot  find  symbol  t	6	None	replace
95	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternates.values());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates.values());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
96	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates.values());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates.values());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
97	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	2	None	replace
98	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	2	None	replace
99	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
100	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
101	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
102	[BUG]  [BUGGY]  if(t  ==  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t  ==  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t  ==  null)  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
103	[BUG]  [BUGGY]  if(t!=  null)  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
104	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
105	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates,  t);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
106	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  false;  }	  if(alternates    ==    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	90	None	replace
107	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
108	[BUG]  [BUGGY]  JSType[]  alternates  =  Lists.newHashSet(alternates);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Lists.newHashSet(alternates);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Lists	68	None	replace
109	[BUG]  [BUGGY]  JSType[]  alternates  =  Collections.newHashSet(alternates);  [CE]  cannot  find  symbol  Collections  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Collections.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Collections.newHashSet(alternates);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Collections	68	None	replace
110	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates,  true);  [CE]  cannot  find  symbol  Sets  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates,  true);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates,  true);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Sets	68	None	replace
111	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(interiors);  [CE]  cannot  find  symbol  interiors  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(interiors);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet(interiors);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  interiors	68	None	replace
112	[BUG]  [BUGGY]  JSType  alternates  =  Lists.newHashSet(alternates);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Lists.newHashSet(alternates);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Lists	45	None	replace
113	[BUG]  [BUGGY]  JSType  alternates  =  Collections.newHashSet(alternates);  [CE]  cannot  find  symbol  Collections  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Collections.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Collections.newHashSet(alternates);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Collections	45	None	replace
114	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(interiors);  [CE]  cannot  find  symbol  interiors  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Sets.newHashSet(interiors);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet(interiors);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  interiors	45	None	replace
115	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
116	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  Set  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  Set  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  Set  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
117	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
118	[BUG]  [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  return  false;  }  else  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
119	[BUG]  [BUGGY]  JSType  alternates  =  Collections.newHashSet();  [CE]  cannot  find  symbol  Collections  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Collections.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Collections.newHashSet();	  JSType    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Collections	52	None	replace
120	[BUG]  [BUGGY]  JSType  alternates  =  Lists.newHashSet();  [CE]  cannot  find  symbol  Lists  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Lists.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Lists.newHashSet();	  JSType    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	52	None	replace
121	[BUG]  [BUGGY]  JSType  alternates  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Lists.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Lists.newArrayList();	  JSType    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	52	None	replace
122	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
123	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
124	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
125	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  List.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
126	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  [CE]  no  suitable  constructor  found  for  TreeSet(int)  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());	  Set    <    JSType>    alternates    =    new    TreeSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(int)	82	None	replace
127	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)    ==    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	14	None	replace
128	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
129	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
130	[BUG]  [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
131	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)return  true;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  true;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	93	None	replace
132	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	93	None	replace
133	[BUG]  [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	93	None	replace
134	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet();	  List    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
135	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newArrayList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Sets.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Sets.newArrayList();	  List    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
136	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	79	None	replace
137	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()!=  0)return  false;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	79	None	replace
138	[BUG]  [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null  ||  alternates.size()  ==  0)return  false;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	79	None	replace
139	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
140	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  getAlternates();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  getAlternates();	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	32	None	replace
141	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
142	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
143	[BUG]  [BUGGY]  Set  <  JSType>  others  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  others  =  Sets.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  others  =  Sets.newHashSet();	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Sets	19	None	replace
144	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
145	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getName());  [CE]  cannot  find  symbol  t  [FE]      IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getName());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getName());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(t.getName()));  [CE]  cannot  find  symbol  t  [FE]        IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(t.getName()));  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalArgumentException( " ".equals(t.getName()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
147	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getSimpleName());  [CE]  cannot  find  symbol  t  [FE]          IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getSimpleName());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getSimpleName());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
148	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
149	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
150	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
151	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    this.alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	48	None	replace
152	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	64	None	replace
153	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	64	None	replace
154	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	64	None	replace
155	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Lists.newArrayList();	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
156	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet();  [CE]  cannot  find  symbol  Lists  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Lists.newHashSet();	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	51	None	replace
157	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newLinkedList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newLinkedList();	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
158	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Lists.newLinkedList();	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
159	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newArrayList(alternates);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newArrayList(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Arrays.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
160	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Arrays.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
161	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [CE]  cannot  find  symbol  Arrays  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Arrays.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Arrays.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Arrays	50	None	replace
162	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet(alternates);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
163	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }	  if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	37	None	replace
164	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [CE]  cannot  find  symbol  alternations  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  alternations	43	None	replace
165	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires);  [CE]  cannot  find  symbol  requires  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(requires);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  requires	43	None	replace
166	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  ArrayList.newHashSet();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
167	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
168	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
169	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
170	[BUG]  [BUGGY]  if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())  {  return  true;  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
171	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  true);  [CE]  cannot  find  symbol  Sets  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  true);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet(alternates,  true);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  Sets	45	None	replace
172	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
173	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
174	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.keySet())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    this.alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
175	[BUG]  [BUGGY]  if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
176	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	1	None	replace
177	[BUG]  [BUGGY]  if(alternates!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	39	None	replace
178	[BUG]  [BUGGY]  if(alternates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  missing  return  statement	39	None	replace
179	[BUG]  [BUGGY]  JSType  alternates  =  Maps.newHashMap();  [CE]  cannot  find  symbol  Maps  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Maps.newHashMap();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Maps.newHashMap();	  JSType    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  Maps	52	None	replace
180	[BUG]  [BUGGY]  if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
181	[BUG]  [BUGGY]  if(t  ==  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t  ==  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t  ==  null)  {  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
182	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  false;  }	  if(alternates!=    null)return    true;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)    ==    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	3	None	replace
183	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
184	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	23	None	replace
185	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
186	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
187	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
188	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
189	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
190	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Collections.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Collections.newHashSet();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
191	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	32	None	replace
192	[BUG]  [BUGGY]  JSType[]  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	32	None	replace
193	[BUG]  [BUGGY]  boolean  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  boolean  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	boolean  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  incompatible  types	32	None	replace
194	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
195	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
196	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
197	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
198	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	30	None	replace
199	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  ';'  expected	94	None	replace
200	[BUG]  [BUGGY]  JSType[]  alternates  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  new  ArrayList();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  new  ArrayList();	  JSType[]    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
201	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
202	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
203	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
204	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
205	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
206	[BUG]  [BUGGY]  if(t!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  return  false;  }	  return    true;    if(alternates    ==    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	62	None	replace
207	[BUG]  [BUGGY]  if(t  ==  null)  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t  ==  null)  {  return  false;  }	  return    true;    if(alternates    ==    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	62	None	replace
208	[BUG]  [BUGGY]  if(!isUnknownType())  {  return  true;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!isUnknownType())  {  return  true;  }	  return    true;    if(alternates    ==    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	62	None	replace
209	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  false;  }	  if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	91	None	replace
210	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  alternates.containsKey(t.toString()))  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  alternates.containsKey(t.toString()))  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  alternates.containsKey(t.toString()))  {  return  false;  }	  if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	91	None	replace
211	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
212	[BUG]  [BUGGY]  while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	22	None	replace
213	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	64	None	replace
214	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates.values())  {  return  false;  }	  return    true;    if(alternates    ==    null)    {    for(JSType    t    :    alternates.values())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
215	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
216	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
217	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
218	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
219	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  false;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
220	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Collections.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Collections.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Collections.newHashSet(alternates);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
221	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  return  true;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
222	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newLinkedList(alternates);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Arrays.newLinkedList(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Arrays.newLinkedList(alternates);	  ArrayList    <    JSType>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
223	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
224	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
225	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
226	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
227	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
228	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
229	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
230	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
231	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
232	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType()  ||!isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType()  ||!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(!isUnknownType()  ||!isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
233	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  true;  }	  if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	40	None	replace
234	[BUG]  [BUGGY]  While(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  While(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	While(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
235	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
236	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
237	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
238	[BUG]  [BUGGY]  if(alternates.contains(t))  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.contains(t))  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.contains(t))  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
239	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	27	None	replace
240	[BUG]  [BUGGY]  JSType[]  alternates  =  new  ArrayList(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  new  ArrayList(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  new  ArrayList(alternates);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
241	[BUG]  [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
242	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Collections.newHashSet(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Collections.newHashSet(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Collections.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
243	[BUG]  [BUGGY]  parents  ==  null)  {  return  false;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  parents  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	parents  ==  null)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
244	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  others.values())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
245	[BUG]  [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(others!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
246	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.checkArgument(alternates.isEmpty());  [CE]  cannot  find  symbol  Throwables  [FE]    IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.checkArgument(alternates.isEmpty());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.checkArgument(alternates.isEmpty());	  	non-compiled	[CE]  cannot  find  symbol  Throwables	38	None	add
247	[BUG]  [BUGGY]  while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	36	None	replace
248	[BUG]  [BUGGY]  if(alternates!=  null)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
249	[BUG]  [BUGGY]  if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType()  ||  alternates.contains(t))  {  return  true;  }	  if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	92	None	replace
250	[BUG]  [BUGGY]  if(alternates  ==  null)  {  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
251	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
252	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  true;  if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=  null)  {  return  true;  }	  if(alternates    ==    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)!=    null)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	15	None	replace
253	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.values());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.values());  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet(alternates.values());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates.values());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
254	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	89	None	replace
255	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()!=  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()!=  0)return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
256	[BUG]  [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null  ||  alternates.size()  ==  0)return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
257	[BUG]  [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	86	None	replace
258	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  List  <  JSType>  alternates  =  Collections.newHashSet();  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	List  <  JSType>  alternates  =  Collections.newHashSet();	  List    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
259	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(intermediates);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(intermediates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(intermediates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(intermediates);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
260	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
261	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
262	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
263	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
264	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates)  {  if(!t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
265	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    TreeSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
266	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  Set    <    JSType>    alternates    =    new    TreeSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
267	[BUG]  [BUGGY]  while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty()  &&!t.isUnknownType())  {  return  false;	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
268	[BUG]  [BUGGY]  whilst(!alternates.isEmpty())  {  return  true;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  whilst(!alternates.isEmpty())  {  return  true;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	whilst(!alternates.isEmpty())  {  return  true;	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
269	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true    	non-compiled	[CE]  ';'  expected	2	None	replace
270	[BUG]  [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  others.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
271	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType()  ||!t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
272	[BUG]  [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
273	[BUG]  [BUGGY]  for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
274	[BUG]  [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	88	None	replace
275	[BUG]  [BUGGY]  for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  other  :  alternates.values())  {  if(other.isUnknownType())  {  return  true;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	88	None	replace
276	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
277	[BUG]  [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
278	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
279	[BUG]  [BUGGY]  if(alternates.size()  ==  1)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  ==  1)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  ==  1)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
280	[BUG]  [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
281	[BUG]  [BUGGY]  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
282	[BUG]  [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates  ==  null)  {  return  false;  }	  if(t!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
283	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	18	None	replace
284	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
285	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
286	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	5	None	replace
287	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  this.alternates.keySet())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
288	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  }	  for(JSType    t    :    this.alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
289	[BUG]  [BUGGY]  For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
290	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);	  Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
291	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateStatements);  [CE]  cannot  find  symbol  intermediateStatements  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateStatements);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(intermediateStatements);	  Set    <    JSType>    alternates    =    Sets.newHashSet(intermediates);    	non-compiled	[CE]  cannot  find  symbol  intermediateStatements	44	None	replace
292	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
293	[BUG]  [BUGGY]  For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
294	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
295	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	84	None	replace
296	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	79	None	replace
297	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  true;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  true;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.isEmpty())return  true;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null)return    true;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
298	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required);  [CE]  cannot  find  symbol  required  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(required);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  required	43	None	replace
299	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(externals);  [CE]  cannot  find  symbol  externals  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(externals);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(externals);	  Set    <    JSType>    alternates    =    Sets.newHashSet(interiors);    	non-compiled	[CE]  cannot  find  symbol  externals	43	None	replace
300	[BUG]  [BUGGY]  while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;  }	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  cannot  find  symbol  t	66	None	replace
301	[BUG]  [BUGGY]  while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	while(!alternates.isEmpty()  ||  t.isUnknownType())  {  return  false;	  while(!alternates.isEmpty())    {    return    false;    	non-compiled	[CE]  ';'  expected	66	None	replace
302	[BUG]  [BUGGY]  For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	For(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
303	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isUnknownType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t!=    null)    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
304	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
305	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
306	[BUG]  [BUGGY]  JSType[]  alternates  =  new  JSType[alternates.size()  ];  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  new  JSType[alternates.size()  ];  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  new  JSType[alternates.size()  ];  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates);    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
307	[BUG]  [BUGGY]  if(!t.isUnknownType())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!t.isUnknownType())return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!t.isUnknownType())return  false;  }	  if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
308	[BUG]  [BUGGY]  if(t!=  null)return  false;  if(alternates.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t!=  null)return  false;  if(alternates.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t!=  null)return  false;  if(alternates.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	93	None	replace
309	[BUG]  [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(other.values!=  null)  {  for(JSType  t  :  other.values())  {  if(!t.isUnknownType())  {  return  true;  }  }	  for(JSType    t    :    other.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
310	[BUG]  [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)  {  for(JSType  t  :  alternates)  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }	  if(alternates    ==    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
311	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
312	[BUG]  [BUGGY]  if(alternates.isEmpty())  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.isEmpty())  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.isEmpty())  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
313	[BUG]  [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.size()  >  0)  {  return  true;  for(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
314	[BUG]  [BUGGY]  For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	For(JSType  t  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
315	[BUG]  [BUGGY]  for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
316	[BUG]  [BUGGY]  if(t.isUnionType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnionType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnionType())  {  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
317	[BUG]  [BUGGY]  if(alternates.contains(t))  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.contains(t))  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.contains(t))  {  return  true;  }	  return    true;    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	26	None	replace
318	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isUnknownType())return  false;  }	  if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
319	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isNativeObjectType())  {  return  false;  }	  if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	37	None	replace
320	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!isUnknownType())  {  return  false;  }  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!isUnknownType())  {  return  false;  }  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  for(JSType  t  :  alternates.values())  {  if(!isUnknownType())  {  return  false;  }  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
321	[BUG]  [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  other.values())  {  if(t.isUnknownType()  ||  t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    alternates.values())    {    if(t.isUnknownType()    ||    t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
322	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.isUnknownType())return  true;  if(t.isUnknownType())  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.isUnknownType())return  true;  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.isUnknownType())return  true;  if(t.isUnknownType())  {  return  true;  }	  if(alternates    ==    null)return    true;    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
323	[BUG]  [BUGGY]  if(t.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  t  [FE]    IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
324	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	39	7	replace
325	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]      IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	39	7	replace
326	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getMessage());  [CE]  cannot  find  symbol  t  [FE]        IllegalArgumentException    [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getMessage());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	throw  new  IllegalArgumentException( "Unknown  type: "  +  t.getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
327	[BUG]  [BUGGY]  LinkedList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  LinkedList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	LinkedList  <  JSType>  alternates  =  getAlternates();  if(alternates!=  null)  {  return  false;  }	  Set    <    JSType>    alternates    =    getAlternates();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
328	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isInterface())  {  return  true;  }  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isInterface())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isInterface())  {  return  true;  }	  if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	40	None	replace
329	[BUG]  [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType()  ||  t.isUnknownType())return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType()  ||  t.isUnknownType())return  true;  }	  if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
330	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates,  t);  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates,  t);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates,  t);	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  t	68	None	replace
331	[BUG]  [BUGGY]  JSType[]  alternates  =  new  JSType[alternates.size()  ];  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType[]  alternates  =  new  JSType[alternates.size()  ];  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType[]  alternates  =  new  JSType[alternates.size()  ];	  JSType[]    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
332	[BUG]  [BUGGY]  if(alternates.isEmpty())  {  return  true;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates.isEmpty())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates.isEmpty())  {  return  true;  }	  return    true;    for(JSType    t    :    alternates.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	71	None	replace
333	[BUG]  [BUGGY]  if(t.isUnknownType())  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  for(JSType  t  :  alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }	  if(alternates!=    null)    {    for(JSType    t    :    alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
334	[BUG]  [BUGGY]  if(!isUnknownType())  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(!isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(!isUnknownType())  {  return  false;  }	  return    true;    for(JSType    t    :    alternates)    {    if(!isUnknownType())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
335	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  t);  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  t);  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	JSType  alternates  =  Sets.newHashSet(alternates,  t);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  cannot  find  symbol  t	45	None	replace
336	[BUG]  [BUGGY]  for(JSType  t  :  alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  t  :  alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  t  :  alternates.keySet())  {  if(!t.isUnknownType())  {  return  false;  }	  for(JSType    t    :    others.values())    {    if(!t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
337	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  JSType>  alternates  =  new  TreeSet  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  }	  Set    <    JSType>    alternates    =    new    TreeSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
338	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  true;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
339	[BUG]  [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(t.isUnknownType())  {  if(alternates  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(t.isUnknownType())  {  if(alternates  ==  null)  {  return  false;  }	  if(t.isUnknownType())    {    if(alternates!=    null)    {    Set    <    JSType>    alternates    =    getAlternates();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
340	[BUG]  [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(this.alternates!=  null)  {  for(JSType  t  :  this.alternates.values())  {  if(!t.isUnknownType())  {  return  true;  }  }	  for(JSType    t    :    this.alternates.values())    {    if(!t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	46	None	replace
341	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  for(JSType  t  :  alternates)  {  return  true;  }	  if(alternates!=    null)    {    Set    <    JSType>    alternates    =    new    HashSet    <    JSType>(alternates.size());    for(JSType    t    :    alternates)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
342	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  <=  0)return  false;  if(t.isUnknownType())  {  return  false;  }	  if(alternates    ==    null    ||    alternates.size()    ==    0)return    false;    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
343	[BUG]  [BUGGY]  if(alternates!=  null  &&  alternates.size()  >  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null  &&  alternates.size()  >  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null  &&  alternates.size()  >  0)  {  return  false;  }	  if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	41	None	replace
344	[BUG]  [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null  ||  alternates.size()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null  ||  alternates.size()  ==  0)  {  return  false;  }	  if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	41	None	replace
345	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null)return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null)return  false;  }	  if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
346	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)  {  Set  <  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)  {  Set  <  Set  <  String>  alternates  =  Sets.newHashSet();  for(JSType  t  :  alternates)  {  if(t.isUnknownType())  {  return  false;  }	  return    true;    if(alternates!=    null)    {    for(JSType    t    :    alternates)    {    if(t.isUnknownType())    {    return    false;    }    	non-compiled	[CE]  >  expected	25	None	replace
347	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
348	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <  2)  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <  2)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  <  2)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
349	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  >  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  >  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  >  0)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
350	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates  ==  null  ||  alternates.size()  <=  0)  {  return  false;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates  ==  null  ||  alternates.size()  <=  0)  {  return  false;  }	  if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	67	None	replace
351	[BUG]  [BUGGY]  for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	for(JSType  other  :  alternates.values())  {  if(t.isUnknownType())  {  return  true;  }	  for(JSType    t    :    other.values())    {    if(t.isUnknownType())    {    return    true;    }    	non-compiled	[CE]  ';'  expected	88	None	replace
352	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isUnknownType()  {  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }      [BUGGY]  if(alternates!=  null)return  false;  t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	if(alternates!=  null)return  false;  t.getNativeType(JSTypeNative.UNKNOWN_TYPE)  ==  null)  {  return  true;  }	  if(alternates!=    null)return    false;    if(t.getNativeType(JSTypeNative.UNKNOWN_TYPE)    ==    null)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
