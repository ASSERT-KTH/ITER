bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	27	3	add
2	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	27	3	add
3	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  ';'  expected	27	None	add
4	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  ';'  expected	27	None	add
5	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  result;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  result;  }  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  return  result;  }	  	non-compiled	[CE]  ';'  expected	27	None	add
6	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  result;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  result;  }  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  result;  }	  	non-compiled	[CE]  ';'  expected	27	None	add
7	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  JSType  alternates  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  JSType  alternates  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    JSType  alternates  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
8	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  ==  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  ==  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null    ||    result.isObject())    {    if(result  ==  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
9	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result!=  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result!=  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null    ||    result.isObject())    {    if(result!=  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
10	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isObject())  {  If(result  ==  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isObject())  {  If(result  ==  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null    ||    result.isObject())    {    If(result  ==  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
11	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  ==  null  ||  that.isObject())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  ==  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null    ||    result.isObject())    {    if(result  ==  null  ||  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
12	[BUG]  [BUGGY]  JSType  result  =  otherAlternate.build();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  otherAlternate.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  otherAlternate.build();	      JSType    result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  JSType  result  =  otherAlternates.build();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  otherAlternates.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  otherAlternates.build();	      JSType    result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  JSType  result  =  builder.build(that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  builder.build(that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  builder.build(that);	      JSType    result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  this);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  this.getNativeType(JSTypeNative.NO_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  JSType  result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  ||  result.isUnknownType())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
20	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isUnknownType())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  ||  result.isUnknownType())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	2	replace
21	[BUG]  [BUGGY]  JSType  result  =  alternates.get(that);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(that);	      JSType    result    =    alternates.get(result);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  JSType  result  =  alternates.get(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(this);	      JSType    result    =    alternates.get(result);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  JSType  result  =  alternates.get(otherAlternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(otherAlternates);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(otherAlternates);	      JSType    result    =    alternates.get(result);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  JSType  result  =  alternates.get(this,  that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(this,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(this,  that);	      JSType    result    =    alternates.get(result);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  ||  result.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
26	[BUG]  [BUGGY]  if(result!=  null  ||  result.isUnknownType())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  ||  result.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  &&  result.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
28	[BUG]  [BUGGY]  if(result  ==  null  &&  result.isUnknownType())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  &&  result.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  result.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
30	[BUG]  [BUGGY]  if(result!=  null  &&  result.isObject())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  result.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  &&  result.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
32	[BUG]  [BUGGY]  if(result  ==  null  &&  result.isObject())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  &&  result.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  ||  that.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
34	[BUG]  [BUGGY]  if(result!=  null  ||  that.isObject())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  ||  that.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  ||  that.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
36	[BUG]  [BUGGY]  if(result  ==  null  ||  that.isObject())  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  ||  that.isObject())  {	  if(result!=    null    ||    result.isObject())    {    	compilable	  [FE]  AssertionFailedError  	11	2	replace
37	[BUG]  [BUGGY]  JSType  result  =  alternates.build();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.build();	      JSType    result    =    that.build();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  if(result  ==  null)  {  if(result  ==  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null)  {  if(result  ==  null)  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null)    {    if(result  ==  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
39	[BUG]  [BUGGY]  if(result  ==  null)  {  if(result!=  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null)  {  if(result!=  null)  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null)    {    if(result!=  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
40	[BUG]  [BUGGY]  if(result  ==  null)  {  If(result  ==  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null)  {  If(result  ==  null)  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null)    {    If(result  ==  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
41	[BUG]  [BUGGY]  if(result  ==  null)  {  if(result  >=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null)  {  if(result  >=  null)  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null)    {    if(result  >=  null)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
42	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  that.isObject());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  that.isObject());  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(this.isObject()  &&  that.isObject());	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  result  ==  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  result  ==  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(this.isObject()  &&  result  ==  null);	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  result!=  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(this.isObject()  &&  result!=  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(this.isObject()  &&  result!=  null);	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
46	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
47	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
48	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
49	[BUG]  [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result!=  null  &&  that.isObject())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result!=  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isObject())    {    if(result!=  null  &&  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
50	[BUG]  [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result  ==  null  &&  that.isObject())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result  ==  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isObject())    {    if(result  ==  null  &&  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
51	[BUG]  [BUGGY]  if(result!=  null  &&  that.isObject())  {  If(result!=  null  &&  that.isObject())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isObject())  {  If(result!=  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isObject())    {    If(result!=  null  &&  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
52	[BUG]  [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result  >=  null  &&  that.isObject())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isObject())  {  if(result  >=  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isObject())    {    if(result  >=  null  &&  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	25	2	add
54	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	25	2	add
55	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	25	None	add
56	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	25	None	add
57	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  results	25	None	add
58	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
59	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result!=  null  &&  result.isUnknownType())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result!=  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    result.isUnknownType())    {    if(result!=  null  &&  result.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
60	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result  ==  null  &&  result.isUnknownType())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result  ==  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    result.isUnknownType())    {    if(result  ==  null  &&  result.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
61	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  If(result!=  null  &&  result.isUnknownType())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  If(result!=  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    result.isUnknownType())    {    If(result!=  null  &&  result.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
62	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result  >=  null  &&  result.isUnknownType())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType())  {  if(result  >=  null  &&  result.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    result.isUnknownType())    {    if(result  >=  null  &&  result.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
63	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(result  ==  null);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkArgument(result  ==  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkArgument(result  ==  null);	      AssertionFailedError.checkArgument(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(this.isObject()  &&  result!=  null);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkArgument(this.isObject()  &&  result!=  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkArgument(this.isObject()  &&  result!=  null);	      AssertionFailedError.checkArgument(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(that!=  null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkArgument(that!=  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkArgument(that!=  null);	      AssertionFailedError.checkArgument(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  result  =  that.build();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.build();	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  result  =  otherAlternate.build();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  otherAlternate.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  otherAlternate.build();	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  result  =  builder.build(that);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  builder.build(that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  builder.build(that);	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  result  =  builder.build(this);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  builder.build(this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  builder.build(this);	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	        result    =    builder.build();    result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
71	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
72	[BUG]  [BUGGY]      result  =  builder.build();  JSType  result  =  builder.build();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  JSType  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    JSType  result  =  builder.build();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	1	None	add
73	[BUG]  [BUGGY]      result  =  builder.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  Result  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  Result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    Result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol  Result	1	None	add
74	[BUG]  [BUGGY]      result  =  builder.build();  results  =  builder.build();  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  results  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    results  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol  results	1	None	add
75	[BUG]  [BUGGY]      result  =  builder.build();  =  builder.build();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    =  builder.build();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	30	3	add
77	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	30	3	add
78	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    Result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	30	None	add
79	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	30	None	add
80	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  results  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  results  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    results  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  results	30	None	add
81	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
82	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
83	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
84	[BUG]  [BUGGY]  if(this.isNone()  &&  that.isNone())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isNone()  &&  that.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(this.isNone()  &&  that.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
85	[BUG]  [BUGGY]  if(result  ==  null  &&  that.isNone())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  that.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  &&  that.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
86	[BUG]  [BUGGY]  if(result!=  null  ||  that.isNone())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  that.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  ||  that.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
87	[BUG]  [BUGGY]  if(this.isNone()  ||  that.isNone())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isNone()  ||  that.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(this.isNone()  ||  that.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isObject()  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(this.isObject()  &&  that.isObject())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	3	replace
89	[BUG]  [BUGGY]  if(this.isObject()  &&  that.isObject())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isObject()  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(this.isObject()  &&  that.isObject())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	3	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isFunctionType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  that.isFunctionType())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
91	[BUG]  [BUGGY]  if(result!=  null  &&  that.isFunctionType())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isFunctionType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  that.isFunctionType())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
92	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
93	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.getNativeType(JSTypeNative.NO_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
96	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
97	[BUG]  [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
99	[BUG]  [BUGGY]  result  =  that.iterator().next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
100	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  otherAlternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  otherAlternates.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
101	[BUG]  [BUGGY]  result  =  others.iterator().next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  others.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  others.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
102	[BUG]  [BUGGY]  result  =  alternates.get(result).iterator().next();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  alternates.get(result).iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  alternates.get(result).iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  &&  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
104	[BUG]  [BUGGY]  if(result  ==  null  &&  that.isUnknownType())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  &&  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  ||  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
106	[BUG]  [BUGGY]  if(result!=  null  ||  that.isUnknownType())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  ||  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  ||  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
108	[BUG]  [BUGGY]  if(result  ==  null  ||  that.isUnknownType())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  ||  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isUnknownType()  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(this.isUnknownType()  &&  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
110	[BUG]  [BUGGY]  if(this.isUnknownType()  &&  that.isUnknownType())  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(this.isUnknownType()  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(this.isUnknownType()  &&  that.isUnknownType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
111	[BUG]  [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result!=  null  &&  that.isUnknownType())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result!=  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isUnknownType())    {    if(result!=  null  &&  that.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	17	None	add
112	[BUG]  [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result  ==  null  &&  that.isUnknownType())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result  ==  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isUnknownType())    {    if(result  ==  null  &&  that.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	17	None	add
113	[BUG]  [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  If(result!=  null  &&  that.isUnknownType())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  If(result!=  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isUnknownType())    {    If(result!=  null  &&  that.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	17	None	add
114	[BUG]  [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result  >=  null  &&  that.isUnknownType())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isUnknownType())  {  if(result  >=  null  &&  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    &&    that.isUnknownType())    {    if(result  >=  null  &&  that.isUnknownType())  {	  	non-compiled	[CE]  ';'  expected	17	None	add
115	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result!=  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result!=  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    if(result!=  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
116	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  ==  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  ==  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    if(result  ==  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
117	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  If(result!=  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  If(result!=  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    If(result!=  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
118	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  >=  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  >=  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    if(result  >=  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
119	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  >>  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result  >>  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    if(result  >>  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
120	[BUG]  [BUGGY]  JSType  result  =  that.iterator().next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.iterator().next();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
121	[BUG]  [BUGGY]  JSType  result  =  others.iterator().next();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  others.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  others.iterator().next();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
122	[BUG]  [BUGGY]  AssertionFailedError.checkState(that!=  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(that!=  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(that!=  null);	      AssertionFailedError.checkState(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  &&  that.isObject())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
124	[BUG]  [BUGGY]  if(result  ==  null  &&  that.isObject())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  &&  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  &&  that.isObject())  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
125	[BUG]  [BUGGY]  JSType  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
126	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  alternates);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  alternates);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  alternates);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
127	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
128	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
129	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator().next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  alternates.keySet().iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  alternates.keySet().iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
130	[BUG]  [BUGGY]  result  =  alternates.values().next();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  alternates.values().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  alternates.values().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
131	[BUG]  [BUGGY]  result  =  alternates.get(result);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  alternates.get(result);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  alternates.get(result);	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result!=  null  ||  that.isObject())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  result.isObject())  {  if(result!=  null  ||  that.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=    null    ||    result.isObject())    {    if(result!=  null  ||  that.isObject())  {	  	non-compiled	[CE]  ';'  expected	10	None	add
133	[BUG]  [BUGGY]  JSType  result  =  alternates.get(that).iterator().next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(that).iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(that).iterator().next();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
134	[BUG]  [BUGGY]  JSType  result  =  alternates.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.iterator();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.iterator();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
135	[BUG]  [BUGGY]  JSType  result  =  alternates.iterator().first();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.iterator().first();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.iterator().first();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
137	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
138	[BUG]  [BUGGY]  result  =  builder.build(result);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  builder.build(result);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  builder.build(result);	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
139	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    Result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  Result	27	None	add
140	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    JSType  result  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	27	None	add
141	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  results  =  alternates.iterator().next();  [CE]  cannot  find  symbol  results  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  results  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    results  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  results	27	None	add
142	[BUG]  [BUGGY]  if(that!=  null  &&  result.isNone())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(that!=  null  &&  result.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(that!=  null  &&  result.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
143	[BUG]  [BUGGY]  if(that!=  null  &&  that.isNone())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(that!=  null  &&  that.isNone())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(that!=  null  &&  that.isNone())  {	  if(result!=    null    &&    that.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
144	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedState.checkNotNull(result);  [CE]  cannot  find  symbol  ResolvedState  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedState.checkNotNull(result);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedState.checkNotNull(result);	  	non-compiled	[CE]  cannot  find  symbol  ResolvedState	1	None	add
145	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedState.checkState(result  ==  null);  [CE]  cannot  find  symbol  ResolvedState  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedState.checkState(result  ==  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedState.checkState(result  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  ResolvedState	1	None	add
146	[BUG]  [BUGGY]  JSType  result  =  builder.build(this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  builder.build(this);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  builder.build(this);	      JSType    result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  this.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  ||  this.isObject())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
148	[BUG]  [BUGGY]  if(result!=  null  ||  this.isObject())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  ||  this.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  ||  this.isObject())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
149	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(result!=  null,  that);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkArgument(result!=  null,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkArgument(result!=  null,  that);	      AssertionFailedError.checkArgument(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
150	[BUG]  [BUGGY]  AssertionFailedError.checkState(result!=  null,  that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(result!=  null,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(result!=  null,  that);	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
151	[BUG]  [BUGGY]  AssertionFailedError.checkState(result  ==  null,  that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(result  ==  null,  that);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(result  ==  null,  that);	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
152	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
153	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  alternates);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  alternates);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
155	[BUG]  [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.isObject()?  getNativeType(JSTypeNative.NO_TYPE):  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isSubtype(result))  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  result.isUnknownType()  ||  that.isSubtype(result))  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
157	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isSubtype(result))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isSubtype(result))  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  result.isUnknownType()  ||  that.isSubtype(result))  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  result.isUnknownType()  ||  that.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
159	[BUG]  [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isUnknownType())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  result.isUnknownType()  ||  that.isUnknownType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  result.isUnknownType()  ||  that.isUnknownType())  {	  if(result!=    null    &&    result.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	22	2	replace
160	[BUG]  [BUGGY]  AssertionFailedError.checkState(that  ==  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkState(that  ==  null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkState(that  ==  null);	      AssertionFailedError.checkState(result    ==    null);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
161	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  return  getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  return  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    return  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	30	None	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isSubtype(result))  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  that.isSubtype(result))  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
163	[BUG]  [BUGGY]  if(result!=  null  &&  that.isSubtype(result))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isSubtype(result))  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  that.isSubtype(result))  {	  if(result!=    null    &&    that.isObject())    {    	compilable	  [FE]  AssertionFailedError  	20	2	replace
164	[BUG]  [BUGGY]  JSType  result  =  this.build();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  this.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  this.build();	      JSType    result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
165	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(result!=  null  &&  that.isUnknownType());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  AssertionFailedError.checkArgument(result!=  null  &&  that.isUnknownType());  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	AssertionFailedError.checkArgument(result!=  null  &&  that.isUnknownType());	      AssertionFailedError.checkArgument(result!=    null);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  this.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result  ==  null  ||  this.isObject())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	3	replace
167	[BUG]  [BUGGY]  if(result  ==  null  ||  this.isObject())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  this.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result  ==  null  ||  this.isObject())  {	  if(result    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	9	3	replace
168	[BUG]  [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  >=  null  ||  result.isObject())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result  ==  null  ||  result.isObject())  {  if(result  >=  null  ||  result.isObject())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result    ==    null    ||    result.isObject())    {    if(result  >=  null  ||  result.isObject())  {	  	non-compiled	[CE]  ';'  expected	12	None	add
169	[BUG]  [BUGGY]  JSType  result  =  that.alternates.iterator().next();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.alternates.iterator().next();	      JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
170	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  JSType>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  JSType>  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedAssertionFailedError  <  JSType>  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
171	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_ATTRIBUTE>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_ATTRIBUTE>  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedAssertionFailedError  <  NUMBER_ATTRIBUTE>  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
172	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_INTERFACE>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_INTERFACE>  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedAssertionFailedError  <  NUMBER_INTERFACE>  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
173	[BUG]  [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_INTEGER>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  builder.build();  ResolvedAssertionFailedError  <  NUMBER_INTEGER>  result  =  builder.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    builder.build();    ResolvedAssertionFailedError  <  NUMBER_INTEGER>  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
174	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	25	None	add
175	[BUG]  [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  null;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.isObject()?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  null;  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.isObject()?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  null;	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
176	[BUG]  [BUGGY]  result  =  this.alternates.build();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  this.alternates.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  this.alternates.build();	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
177	[BUG]  [BUGGY]  result  =  alternates.build();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  alternates.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  alternates.build();	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
178	[BUG]  [BUGGY]  result  =  this.build();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  this.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  this.build();	      result    =    builder.build();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
179	[BUG]  [BUGGY]  JSType  result  =  that.alternates.build();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  that.alternates.build();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  that.alternates.build();	      JSType    result    =    that.build();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
180	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  Collections.sort(alternates);  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Collections  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  Collections.sort(alternates);  result  =  alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    Collections.sort(alternates);  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  Collections	27	None	add
181	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  res.iterator().next();  [CE]  cannot  find  symbol  res  [FE]      AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]      result  =  alternates.iterator().next();  res.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	        result    =    alternates.iterator().next();    res.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  res	27	None	add
182	[BUG]  [BUGGY]  JSType  result  =  alternates.get(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(JSTypeNative.NO_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(JSTypeNative.NO_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
183	[BUG]  [BUGGY]  result  =  that.alternates.iterator().next();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  that.alternates.iterator().next();  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  that.alternates.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isAllType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	if(result!=  null  &&  that.isAllType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
185	[BUG]  [BUGGY]  if(result!=  null  &&  that.isAllType())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  if(result!=  null  &&  that.isAllType())  {  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	if(result!=  null  &&  that.isAllType())  {	  if(result!=    null    &&    that.isUnknownType())    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
186	[BUG]  [BUGGY]  JSType  result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);	      JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
187	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
188	[BUG]  [BUGGY]  JSType  result  =  alternates.get(null);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (that  instanceof  UnionType)  {  for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();    [BUGGY]  JSType  result  =  alternates.get(null);  [BUGGY]    if  (result  !=  null)  {  return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	JSType  result  =  alternates.get(null);	      JSType    result    =    alternates.get(result);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
