bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList();	  this.alternates    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList();	  this.alternates    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet();	  this.alternates    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  1);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  +  1);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.length  -  2);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  this.alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  this.alternates.iterator().next();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  this.alternates.iterator().next();	  JSTypeRegistry    <?>    registry    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.iterator();	  JSTypeRegistry    <?>    registry    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.values().next();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.values().next();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.values().next();	  JSTypeRegistry    <?>    registry    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(registry);	  this.alternates    =    new    LinkedList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(registry.alternates);	  this.alternates    =    new    LinkedList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(registry,  alternates);	  this.alternates    =    new    LinkedList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
14	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
15	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  return  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry.alternates;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry.alternates;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry.alternates;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
18	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
19	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.keySet());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.keySet());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.keySet());	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.keySet())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
21	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry.alternates.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry.alternates.size());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(registry.alternates.size());	  this.alternates    =    new    HashSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
22	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(alternates.size()  -  1);	  this.alternates    =    new    HashSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
23	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)registry.alternates.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)registry.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)registry.alternates.clone();	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.toArray(new  Set  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.toArray(new  Set  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Set  <  JSType>)registry.alternates.toArray(new  Set  <  JSType>());	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  this.alternates  =(HashSet  <  JSType>)registry.alternates.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(HashSet  <  JSType>)registry.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(HashSet  <  JSType>)registry.alternates.clone();	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(0);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Set  <  JSType>)registry.alternates.get(0);	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  this.alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newArrayList(alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newArrayList(alternates);	  this.alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
28	[BUG]  [BUGGY]  this.alternates  =  Lists.newHashSet(registry);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newHashSet(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newHashSet(registry);	  this.alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
29	[BUG]  [BUGGY]  this.alternates  =  Lists.newHashSet(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newHashSet(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newHashSet(registry.alternates);	  this.alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
30	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
31	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getSimpleName()));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getSimpleName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getSimpleName()));  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
32	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getRawClass()));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getRawClass()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".equals(registry.getRawClass()));  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
33	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ".);  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
34	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  this.alternates.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  this.alternates.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  this.alternates.iterator();	  Iterator    <    JSType>    it    =    alternates.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
35	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  registry.alternates.iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  registry.alternates.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  registry.alternates.iterator();	  Iterator    <    JSType>    it    =    alternates.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
36	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  others.iterator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  others.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  others.iterator();	  Iterator    <    JSType>    it    =    alternates.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
37	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  registry.iterator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  registry.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  registry.iterator();	  Iterator    <    JSType>    it    =    alternates.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registry,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
39	[BUG]  [BUGGY]  this.alternates  =  Collections.newHashSet(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newHashSet(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newHashSet(registry,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
40	[BUG]  [BUGGY]  This.alternates  =  Sets.newHashSet(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  This.alternates  =  Sets.newHashSet(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	This.alternates  =  Sets.newHashSet(registry,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
41	[BUG]  [BUGGY]  this.alternates  =(HashSet  <  JSType>)registry.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(HashSet  <  JSType>)registry.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(HashSet  <  JSType>)registry.clone();	  this.alternates    =(HashSet    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  this.alternates  =(HashSet  <  JSType>)this.alternates.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(HashSet  <  JSType>)this.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(HashSet  <  JSType>)this.alternates.clone();	  this.alternates    =(HashSet    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)registry.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)registry.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)registry.clone();	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)this.alternates.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)this.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)this.alternates.clone();	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)super.alternates.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)super.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)super.alternates.clone();	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedHashSet  <  JSType>(registry);	  this.alternates    =    new    HashSet    <    JSType>(registry);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  ArrayList  <  JSType>(registry);	  this.alternates    =    new    HashSet    <    JSType>(registry);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
48	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(registry);	  this.alternates    =    new    HashSet    <    JSType>(registry);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  -  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  -  1);	  this.alternates    =    new    LinkedList    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry.alternates.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(registry.alternates.size());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(registry.alternates.size());	  this.alternates    =    new    LinkedList    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  +  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(alternates.size()  +  1);	  this.alternates    =    new    LinkedList    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
53	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry.alternates);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry.alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry.alternates);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
54	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(this.alternates);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(this.alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(this.alternates);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
55	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry,  alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(registry,  alternates);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
56	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  this.registry  =  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  this.registry  =  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.size())  {  this.registry  =  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.size());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.size());	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  alternates,  0,  alternates.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  alternates,  0,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  alternates,  0,  alternates.size());	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedHashSet  <  JSType>(registry,  alternates);	  this.alternates    =    new    HashSet    <    JSType>(registry,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
62	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(registry,  alternates);	  this.alternates    =    new    HashSet    <    JSType>(registry,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
63	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry,  list);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry,  list);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(registry,  list);	  this.alternates    =    new    HashSet    <    JSType>(registry,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.values();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.values();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.values();	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
65	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?  extends>  registry  :  alternates.values())  {  return  registry;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?  extends>  registry  :  alternates.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?  extends>  registry  :  alternates.values())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
66	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  others.values())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  others.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  others.values())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getSimpleName()));    }    	non-compiled	[CE]  	38	None	replace
68	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getSimpleName()));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
75	[BUG]  [BUGGY]  this.alternates  =  Collections.newHashSet(registry);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newHashSet(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newHashSet(registry);	  this.alternates    =    Collections.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
76	[BUG]  [BUGGY]  this.alternates  =  Collections.newHashSet(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newHashSet(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newHashSet(registry.alternates);	  this.alternates    =    Collections.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
77	[BUG]  [BUGGY]  this.alternates  =  Collections.newArrayList(alternates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newArrayList(alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newArrayList(alternates);	  this.alternates    =    Collections.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
78	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(registry);	  this.alternates    =    new    java.util.ArrayList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
79	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }	  this.alternates    =    new    java.util.ArrayList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
80	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.alternates);	  this.alternates    =    new    java.util.ArrayList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
81	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(registry,  alternates);	  this.alternates    =    new    java.util.ArrayList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  1);	  System.arraycopy(this.alternates,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  -  2);	  System.arraycopy(this.alternates,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.size()  +  1);	  System.arraycopy(this.alternates,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
85	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  1);	  this.alternates    =    new    TreeSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
86	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  +  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  +  1);	  this.alternates    =    new    TreeSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry.alternates.size());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry.alternates.size());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(registry.alternates.size());	  this.alternates    =    new    TreeSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(alternates,  registry);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(alternates,  registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedHashSet  <  JSType>(alternates,  registry);	  this.alternates    =    new    HashSet    <    JSType>(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.size());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.size());	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  1);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  -  2);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    2);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  2);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    2);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.length);	  System.arraycopy(alternates,    0,    this.alternates,    1,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  1,  alternates.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  1,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  1,  alternates.length);	  System.arraycopy(alternates,    0,    this.alternates,    1,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  1);	  System.arraycopy(alternates,    0,    this.alternates,    1,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  1,  alternates.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  1,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  1,  alternates.length);	  System.arraycopy(alternates,    0,    this.alternates,    1,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  +  1);	  System.arraycopy(alternates,    0,    this.alternates,    1,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
98	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.values());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates.values());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(alternates.values());	  this.alternates    =    new    ArrayList    <    JSType>(alternates.values());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
99	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.values());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.values());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates.values());	  this.alternates    =    new    ArrayList    <    JSType>(alternates.values());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
100	[BUG]  [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(alternates.keySet());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(alternates.keySet());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  ArrayList  <  JSType>(alternates.keySet());	  this.alternates    =    new    ArrayList    <    JSType>(alternates.values());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
101	[BUG]  [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedHashSet  <  JSType>(alternates.size()  -  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedHashSet  <  JSType>(alternates.size()  -  1);	  this.alternates    =    new    LinkedHashSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
102	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(registry.alternates);	  this.alternates    =    new    TreeSet    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
103	[BUG]  [BUGGY]  this.alternates  =  Collections.newArrayList();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newArrayList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newArrayList();	  this.alternates    =    Collections.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  0,  alternates.length  +  1);	  System.arraycopy(this.alternates,    0,    this.alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
105	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  registry.get(alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  registry.get(alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  registry.get(alternates);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
106	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.name);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.name);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry.name);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
107	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry.alternates);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
108	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.type);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry.type);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry.type);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  this.registry  =  registry.registry;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  registry.registry;  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  registry.registry;	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
110	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  registry.getRegistry();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  registry.getRegistry();	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
111	[BUG]  [BUGGY]  this.registry  =  registry.getRegistryType();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  registry.getRegistryType();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  registry.getRegistryType();	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
112	[BUG]  [BUGGY]  this.registry  =  new  ArrayList  <  JSType>(alternates.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  ArrayList  <  JSType>(alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  ArrayList  <  JSType>(alternates.size());	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
113	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getName()));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
114	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getName()));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
115	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ").equals(registry.getName());  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getName()));    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
116	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
117	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().next())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().next())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values().next())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
118	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.entrySet().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.entrySet().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.entrySet().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
119	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.entrySet())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.entrySet())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.entrySet())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
120	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator().next())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
121	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.keySet();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.keySet();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.keySet();	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.keySet())    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.size());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.size());	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.size()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
123	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
124	[BUG]  [BUGGY]  For(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  For(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	For(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
125	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  others.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  others.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  others.values())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
126	[BUG]  [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(registry,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  ArrayList  <  JSType>(registry,  alternates);	  this.alternates    =    new    ArrayList    <    JSType>(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  this.alternates  =  Sets.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.EMPTY_SET;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.EMPTY_SET;	  this.alternates    =    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  1);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  -  2);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size()  +  1);	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  1,  alternates.size());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  this.alternates,  1,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  this.alternates,  1,  alternates.size());	  System.arraycopy(registry,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  -  1);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length  -  1);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
134	[BUG]  [BUGGY]  this.alternates  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newArrayList();	  this.alternates    =    Lists.emptySet();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
135	[BUG]  [BUGGY]  this.alternates  =  Lists.newLinkedList();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newLinkedList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newLinkedList();	  this.alternates    =    Lists.emptySet();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
136	[BUG]  [BUGGY]  this.alternates  =(ArrayList  <  JSType>)registry.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(ArrayList  <  JSType>)registry.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(ArrayList  <  JSType>)registry.clone();	  this.alternates    =(ArrayList    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.length  +  1);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
138	[BUG]  [BUGGY]  this.alternates  =(Collection  <  JSType>)registry.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Collection  <  JSType>)registry.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Collection  <  JSType>)registry.clone();	  this.alternates    =(Collection    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
139	[BUG]  [BUGGY]  this.alternates  =(Collection  <  JSType>)this.alternates.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Collection  <  JSType>)this.alternates.clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Collection  <  JSType>)this.alternates.clone();	  this.alternates    =(Collection    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
140	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
141	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  throw  new  IllegalArgumentException( " ".equals(registry.getName()));  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(registry!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(this.alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
145	[BUG]  [BUGGY]  Preconditions.checkState(registry  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(registry  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(registry  ==  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.registry.alternates,  0,  alternates.length);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  alternates,  0,  alternates.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(registry,  0,  alternates,  0,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(registry,  0,  alternates,  0,  alternates.length);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet();	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
150	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(registry.alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(registry.alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(registry.alternates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
151	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  registry);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  registry);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternates,  registry);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
152	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.size());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.size());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(registry.size());	  this.alternates    =    new    java.util.ArrayList    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
153	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(1);	  this.alternates    =    new    java.util.ArrayList    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
154	[BUG]  [BUGGY]  this.alternates  =  Sets.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.EMPTY_LIST;  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.EMPTY_LIST;	  this.alternates    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
155	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registry.alternates,  alternates);	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
156	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  new  HashSet  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  new  HashSet  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registry.alternates,  new  HashSet  <  JSType>());	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
157	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  new  LinkedHashSet  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  new  LinkedHashSet  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registry.alternates,  new  LinkedHashSet  <  JSType>());	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
158	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  0);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registry.alternates,  0);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registry.alternates,  0);	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
159	[BUG]  [BUGGY]  this.alternates  =  Lists.newArrayList(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newArrayList(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newArrayList(alternates,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
160	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(register,  alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(register,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(register,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry.newHashSet());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(registry.newHashSet());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(registry.newHashSet());	  this.alternates    =    registry.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
162	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry.alternates);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry.alternates);  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry.alternates);  }	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
163	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  registry.alternates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  registry.alternates);	  this.alternates    =    Sets.newHashSet(registry.alternates);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
164	[BUG]  [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  ArrayList  <  JSType>(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  ArrayList  <  JSType>(alternates,  alternates);	  this.alternates    =    new    ArrayList    <    JSType>(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
165	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates,  registry);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates,  registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(alternates,  registry);	  this.alternates    =    new    ArrayList    <    JSType>(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
166	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates,  registry);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates,  registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates,  registry);	  this.alternates    =    new    ArrayList    <    JSType>(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
167	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  this.registry  =  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
168	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
169	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values)  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
170	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  false);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  false);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry,  false);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
171	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  this.alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  this.alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry,  this.alternates);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry  +  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry  +  1);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
173	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)alternates.toArray(new  ArrayList  <  JSType>());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)alternates.toArray(new  ArrayList  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)alternates.toArray(new  ArrayList  <  JSType>());	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
174	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)alternates.get(registry);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)alternates.get(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)alternates.get(registry);	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
175	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)alternates.values().clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)alternates.values().clone();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)alternates.values().clone();	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
176	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator().next())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
177	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  alternates.iterator().next();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  alternates.iterator().next();	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.size()  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  alternates.size()  -  1);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
179	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  Arrays.asList(alternates));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  Arrays.asList(alternates));  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  Arrays.asList(alternates));	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
180	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  HashSet  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  HashSet  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  new  HashSet  <  JSType>());	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
181	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  LinkedList  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  LinkedList  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  new  LinkedList  <  JSType>());	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  alternates,  0,  this.alternates.length);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
183	[BUG]  [BUGGY]  this.alternates  =  alternates.newArrayList();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  alternates.newArrayList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  alternates.newArrayList();	  this.alternates    =    alternates.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
184	[BUG]  [BUGGY]  this.alternates  =  alternates.toArray(new  JSType[alternates.size()  ]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  alternates.toArray(new  JSType[alternates.size()  ]);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  alternates.toArray(new  JSType[alternates.size()  ]);	  this.alternates    =    alternates.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  -  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  -  3);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  -  3);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    2);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  This.alternates  =  alternates.newHashSet();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  This.alternates  =  alternates.newHashSet();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	This.alternates  =  alternates.newHashSet();	  this.alternates    =    registry.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
187	[BUG]  [BUGGY]  this.alternates  =  alternates.newHashMap();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  alternates.newHashMap();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  alternates.newHashMap();	  this.alternates    =    registry.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
188	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  this.alternates.values())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
189	[BUG]  [BUGGY]  for(JSTypeRegistry  <  Object>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <  Object>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <  Object>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
190	[BUG]  [BUGGY]  this.alternates  =  Collections.newHashSet(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newHashSet(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newHashSet(alternates,  alternates);	  this.alternates    =    Collections.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
191	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
192	[BUG]  [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  new  JSTypeRegistry  <?>())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  new  JSTypeRegistry  <?>())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  new  JSTypeRegistry  <?>())  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
193	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(alternates.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(alternates.size()  -  1);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(alternates.size()  -  1);	  JSTypeRegistry    <?>    registry    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
194	[BUG]  [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
195	[BUG]  [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  LinkedList  <  JSType>(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  LinkedList  <  JSType>(alternates,  alternates);	  this.alternates    =    new    LinkedList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
196	[BUG]  [BUGGY]  this.alternates  =  Arrays.newHashSet(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Arrays.newHashSet(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Arrays.newHashSet(alternates,  alternates);	  this.alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
197	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
198	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.size());	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
199	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  false);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  false);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
200	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  true);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  true);	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
201	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.keySet())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.keySet())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.keySet())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.keySet())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
202	[BUG]  [BUGGY]  This.alternates  =  new  ArrayList  <  JSType>(alternates.size());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  This.alternates  =  new  ArrayList  <  JSType>(alternates.size());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	This.alternates  =  new  ArrayList  <  JSType>(alternates.size());	  this.alternates    =    new    ArrayList    <    JSType>(alternates.size()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
203	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates.iterator())  {  return  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
204	[BUG]  [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(registry.alternates);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(registry.alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Set  <  JSType>)registry.alternates.get(registry.alternates);	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
205	[BUG]  [BUGGY]  this.alternates  =  Collections.newLinkedList();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newLinkedList();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newLinkedList();	  this.alternates    =    Collections.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
206	[BUG]  [BUGGY]  this.alternates  =(Collection  <  JSType>)alternates.get(registry);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Collection  <  JSType>)alternates.get(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Collection  <  JSType>)alternates.get(registry);	  this.alternates    =(Collection    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
207	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }	  this.alternates    =    new    java.util.ArrayList    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
208	[BUG]  [BUGGY]  if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>();  }	  this.alternates    =    new    java.util.ArrayList    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
210	[BUG]  [BUGGY]  AssertionFailedError.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  AssertionFailedError.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	AssertionFailedError.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkNotNull(alternates);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkNotNull(alternates);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkNotNull(alternates);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
212	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName()));  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getSimpleName()));    }    	non-compiled	[CE]  	38	None	replace
213	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ").equals(registry.getSimpleName());  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ".equals(registry.getSimpleName()));    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates!=  null);  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
215	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.values())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
216	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  other.values())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  other.values())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  other.values())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
217	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  LinkedHashSet  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  LinkedHashSet  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  new  LinkedHashSet  <  JSType>());	  this.alternates    =    Sets.newHashSet(alternates,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
218	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  ArrayList  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(alternates,  new  ArrayList  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(alternates,  new  ArrayList  <  JSType>());	  this.alternates    =    Sets.newHashSet(alternates,    alternates);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
219	[BUG]  [BUGGY]  this.registry  =  new  JSTypeRegistry(registry);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  JSTypeRegistry(registry);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  JSTypeRegistry(registry);	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
220	[BUG]  [BUGGY]  this.registry  =  new  JSTypeRegistry(registry,  alternates);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  JSTypeRegistry(registry,  alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  JSTypeRegistry(registry,  alternates);	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
221	[BUG]  [BUGGY]  this.registry  =  new  JSTypeRegistry();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  JSTypeRegistry();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  JSTypeRegistry();	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
222	[BUG]  [BUGGY]  this.registry  =  new  ArrayList  <  JSType>();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  ArrayList  <  JSType>();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  ArrayList  <  JSType>();	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
223	[BUG]  [BUGGY]  this.alternates  =(HashSet  <  JSType>)alternates.toArray(new  HashSet  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(HashSet  <  JSType>)alternates.toArray(new  HashSet  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(HashSet  <  JSType>)alternates.toArray(new  HashSet  <  JSType>());	  this.alternates    =(HashSet    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  *  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  *  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length  *  2);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
225	[BUG]  [BUGGY]  this.alternates  =  Lists.newHashSet(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newHashSet(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newHashSet(alternates,  alternates);	  this.alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
226	[BUG]  [BUGGY]  this.alternates  =  Lists.newLinkedList(alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Lists.newLinkedList(alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Lists.newLinkedList(alternates);	  this.alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
227	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
228	[BUG]  [BUGGY]  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSType>  alternates  =  Sets.newHashSet(alternates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
229	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.keySet());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.keySet());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates.keySet());	  this.alternates    =    new    TreeSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
230	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates,  alternates);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates,  alternates);	  this.alternates    =    new    TreeSet    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
231	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  alternates.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Iterator  <  JSType>  it  =  alternates.values().iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Iterator  <  JSType>  it  =  alternates.values().iterator();	  Iterator    <    JSType>    it    =    alternates.iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
232	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  registry.alternates.iterator())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
233	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values().iterator())  {  throw  new  IllegalArgumentException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
234	[BUG]  [BUGGY]  if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates  ==  null)  {  this.alternates  =  new  ArrayList  <  JSType>(alternates);  }	  this.alternates    =    new    java.util.ArrayList    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
235	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  2);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  1,  alternates.length  -  2);	  System.arraycopy(alternates,    0,    this.alternates,    0,    alternates.length    -    2);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
236	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }	  this.alternates    =    Sets.newHashSet(registry);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
237	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  this.alternates  =  new  HashSet  <  JSType>();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  this.alternates  =  new  HashSet  <  JSType>();  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  this.alternates  =  new  HashSet  <  JSType>();  }	  this.alternates    =    Sets.newHashSet(registry);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
238	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size());  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(registry);  }  else  {  System.arraycopy(registry,  0,  this.alternates,  0,  alternates.size());  }	  this.alternates    =    Sets.newHashSet(registry);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
239	[BUG]  [BUGGY]  this.alternates  =(Collection  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Collection  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Collection  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());	  this.alternates    =(Collection    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
240	[BUG]  [BUGGY]  this.alternates  =(List  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(List  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(List  <  JSType>)alternates.toArray(new  LinkedList  <  JSType>());	  this.alternates    =(List    <    JSType>)alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
241	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates.values()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates.values()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates.values()))  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(alternates!=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkState(alternates!=  null);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkState(alternates!=  null);	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    this.registry    =    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
243	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  return  registry;  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
244	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  ';'  expected	33	None	replace
245	[BUG]  [BUGGY]  parent!=  null  &&  alternates.values().size()  >  0)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  parent!=  null  &&  alternates.values().size()  >  0)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	parent!=  null  &&  alternates.values().size()  >  0)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    return    registry;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
246	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  new  ArrayList  <  JSType>(alternates))  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
247	[BUG]  [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	for(JSTypeRegistry  <?>  registry  :  this.alternates)  {  throw  new  IllegalArgumentException( " ");  }	  for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
248	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates.values())  {  throw  new  IllegalStateException( " ");  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.values())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
249	[BUG]  [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(registry);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =(Set  <  JSType>)registry.alternates.get(registry);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =(Set  <  JSType>)registry.alternates.get(registry);	  this.alternates    =(Set    <    JSType>)registry.alternates.clone();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
250	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.values());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.values());  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(alternates.values());	  this.alternates    =    new    ArrayList    <    JSType>(alternates.values());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
251	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry).next();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry).next();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry).next();	  JSTypeRegistry    <?>    registry    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
252	[BUG]  [BUGGY]  this.registry  =  new  ArrayList  <  JSType>(alternates);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.registry  =  new  ArrayList  <  JSType>(alternates);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.registry  =  new  ArrayList  <  JSType>(alternates);	  this.registry    =    registry;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
253	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.size());	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.keySet())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
254	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
255	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates.size()  ==  1);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates.size()  ==  1);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates.size()  ==  1);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
256	[BUG]  [BUGGY]  this.alternates  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  alternates.iterator().next();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  alternates.iterator().next();	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
257	[BUG]  [BUGGY]  AssertionFailedError.checkState(alternates.isEmpty());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  AssertionFailedError.checkState(alternates.isEmpty());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	AssertionFailedError.checkState(alternates.isEmpty());	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator().next())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.size());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.size());	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
259	[BUG]  [BUGGY]  this.alternates  =  Collections.newLinkedHashSet();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Collections.newLinkedHashSet();  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Collections.newLinkedHashSet();	  this.alternates    =    Collections.newHashSet();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
260	[BUG]  [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  HashSet  <  JSType>(alternates.size()  +  1);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  HashSet  <  JSType>(alternates.size()  +  1);	  this.alternates    =    new    HashSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry,  0,  alternates.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.registry,  0,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.registry,  0,  alternates.length);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.length);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.registeredTypes,  0,  alternates.length);	  System.arraycopy(this.alternates,    0,    alternates,    0,    alternates.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(this.alternates,  0,  this.alternates,  1,  alternates.size());	  System.arraycopy(this.alternates,    0,    this.alternates,    0,    alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
264	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(4);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(4);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(4);	  this.alternates    =    new    TreeSet    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
265	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.iterator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.iterator());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  new  HashSet  <  JSType>(alternates.iterator());	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
266	[BUG]  [BUGGY]  this.alternates  =  alternates.iterator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  alternates.iterator();  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  alternates.iterator();	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.iterator())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
267	[BUG]  [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(4);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  java.util.ArrayList  <  JSType>(4);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  java.util.ArrayList  <  JSType>(4);	  this.alternates    =    new    java.util.ArrayList    <    JSType>();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates.size()  ==  2);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates.size()  ==  2);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates.size()  ==  2);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Preconditions.checkArgument(alternates.size()  >  0);  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	  Preconditions.checkState(alternates!=    null);    for(JSTypeRegistry    <?>    registry    :    alternates)    {    return    registry;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
270	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.values());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.values());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates.values());	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
271	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates.size());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  new  JSTypeRegistry  <  JSType>(alternates,  alternates.size());	  JSTypeRegistry    <?>    registry    =    new    JSTypeRegistry    <    JSType>(alternates);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
272	[BUG]  [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  2);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  new  TreeSet  <  JSType>(alternates.size()  -  2);	  this.alternates    =    new    TreeSet    <    JSType>(alternates.size());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
273	[BUG]  [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(alternates,  registry);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(alternates,  registry);  }  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  this.alternates  =  Sets.newHashSet(alternates,  registry);  }	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
274	[BUG]  [BUGGY]  this.alternates  =  Sets.newHashSet(registerers,  alternates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  this.alternates  =  Sets.newHashSet(registerers,  alternates);  [BUGGY]      }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	this.alternates  =  Sets.newHashSet(registerers,  alternates);	  this.alternates    =    Sets.newHashSet(alternates,    registry);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
275	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
276	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  :  alternates.keySet())  {  return  registry;  }	  if(alternates!=    null)    {    for(JSTypeRegistry    <?>    registry    :    alternates.keySet())    {    return    registry;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
277	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  this.alternates.get(registry);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  this.alternates.get(registry);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  this.alternates.get(registry);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
278	[BUG]  [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;      [BUGGY]  JSTypeRegistry  <?>  registry  =  alternates.get(registry,  true);  [BUGGY]        [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	JSTypeRegistry  <?>  registry  =  alternates.get(registry,  true);	  JSTypeRegistry    <?>    registry    =    alternates.get(registry);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
