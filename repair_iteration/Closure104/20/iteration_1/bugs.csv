bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this.alternates  =(Set  <  JSType>)alternates.clone();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =(Set  <  JSType>)alternates.clone();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =(Set  <  JSType>)alternates.clone();		non-compiled	[CE]  cannot  find  symbol	40	None	add
2	[BUG]  [BUGGY]    this.alternates  =  new  HashSet  <  JSType>();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  HashSet  <  JSType>();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  HashSet  <  JSType>();		non-compiled	[CE]  cannot  find  symbol	40	None	add
3	[BUG]  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>(alternates.size());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>(alternates.size());  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  ArrayList  <  JSType>(alternates.size());		non-compiled	[CE]  cannot  find  symbol	40	None	add
4	[BUG]  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  ArrayList  <  JSType>();		non-compiled	[CE]  cannot  find  symbol	40	None	add
5	[BUG]  [BUGGY]    this.alternates  =  new  HashSet  <  JSType>(alternates);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  HashSet  <  JSType>(alternates);  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  HashSet  <  JSType>(alternates);		non-compiled	[CE]  cannot  find  symbol	40	None	add
6	[BUG]  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>(alternates);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  ArrayList  <  JSType>(alternates);  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  ArrayList  <  JSType>(alternates);		non-compiled	[CE]  cannot  find  symbol	40	None	add
7	[BUG]  [BUGGY]    this.alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]    AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  Sets.newHashSet();		non-compiled	[CE]  cannot  find  symbol  Sets	40	None	add
8	[BUG]  [BUGGY]    this.alternates  =  Collections.emptySet();  [CE]  cannot  find  symbol  Collections  [FE]      AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  Collections.emptySet();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  Collections.emptySet();		non-compiled	[CE]  cannot  find  symbol  Collections	40	None	add
9	[BUG]  [BUGGY]    this.alternates  =  new  LinkedList  <  JSType>();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  new  LinkedList  <  JSType>();  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  new  LinkedList  <  JSType>();		non-compiled	[CE]  cannot  find  symbol	40	None	add
10	[BUG]  [BUGGY]    this.alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]          AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]    this.alternates  =  Sets.newHashSet(alternates);  [BUGGY]  }  [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	    this.alternates  =  Sets.newHashSet(alternates);		non-compiled	[CE]  cannot  find  symbol  Sets	40	None	add
11	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.size());  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.size());  [BUGGY]    [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.size());	}  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]  System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length);  [BUGGY]    [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	System.arraycopy(alternates,  0,  this.alternates,  0,  alternates.length);	}  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
13	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }  [BUGGY]    [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  this.registry  =  registry;  }	}  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
14	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  UnionType(JSTypeRegistry  registry,  Set<JSType>  alternates)  {  super(registry);  this.alternates  =  alternates;  [BUGGY]  if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }  [BUGGY]    [CLASS]  UnionType  [METHOD]  <init>  [RETURN_TYPE]  Set)  JSTypeRegistry  registry  JSType>  alternates  [VARIABLES]  JSTypeRegistry  registry  Set  alternates  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	if(alternates!=  null)  {  for(JSTypeRegistry  <?>  registry  :  alternates)  {  return  registry;  }	}  	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
