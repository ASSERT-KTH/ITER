bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  alternates  =  this.element.getAlternates();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.element.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.element.getAlternates();	  JSType    alternates    =    element.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
2	[BUG]  [BUGGY]  JSType  alternates  =  element.getAlternates(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  element.getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  element.getAlternates(this);	  JSType    alternates    =    element.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
3	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternators.get(element);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternators.get(element);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternators.get(element);	  JSType    alternates    =(JSType)this.alternators.get(that);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.alternators.get(this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.alternators.get(this);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.alternators.get(this);	  JSType    alternates    =(JSType)this.alternators.get(that);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that,  alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that,  alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that,  alternates);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this,  that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(others,  that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(others,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(others,  that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(that,  alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(that,  alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(that,  alternates);	  Set    <    String>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
9	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(this,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(this,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(this,  that);	  Set    <    String>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
10	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates,  that);	  Set    <    String>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
11	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(this);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(this);	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
12	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(element);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(element);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(element);	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
13	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(that,  element);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(that,  element);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(that,  element);	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
14	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(element);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(element);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.get(element);	  JSType    alternates    =(JSType)this.alternates.get(that);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
15	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.alternates.get(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.alternates.get(this);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.alternates.get(this);	  JSType    alternates    =(JSType)this.alternates.get(that);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
18	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  ArrayList.newArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
21	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(this);	  List    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
22	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that);	  List    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
23	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this);	  List    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
24	[BUG]  [BUGGY]  Set  alternates  =  new  TreeSet(that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  alternates  =  new  TreeSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  alternates  =  new  TreeSet(that);	  Set    alternates    =    new    TreeSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
25	[BUG]  [BUGGY]  ArrayList  alternates  =  new  TreeSet(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  TreeSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  TreeSet(alternates);	  Set    alternates    =    new    TreeSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
26	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  ArrayList.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  List.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(element);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(element);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(element);	  Set    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
32	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(that).iterator();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
33	[BUG]  [BUGGY]  JSType  alternates  =  this.elements.getAlternates();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.elements.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.elements.getAlternates();	  JSType    alternates    =    elements.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
34	[BUG]  [BUGGY]  JSType  alternates  =  others.getAlternates();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  others.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  others.getAlternates();	  JSType    alternates    =    elements.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
35	[BUG]  [BUGGY]  for(JSType  element  :  that.isSubtype(this,  alternates))  {  [CE]  no  suitable  method  found  for  isSubtype(UnionType,Set<JSType>)  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.isSubtype(this,  alternates))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.isSubtype(this,  alternates))  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  no  suitable  method  found  for  isSubtype(UnionType,Set<JSType>)	58	None	replace
36	[BUG]  [BUGGY]  for(JSType  element  :  that.isUnknownType())  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.isUnknownType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.isUnknownType())  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	58	None	replace
37	[BUG]  [BUGGY]  for(JSType  element  :  others.isSubtype(this))  {  [CE]  cannot  find  symbol  others  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  others.isSubtype(this))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  others.isSubtype(this))  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  cannot  find  symbol  others	58	None	replace
38	[BUG]  [BUGGY]  for(JSType  element  :  other.isSubtype(this))  {  [CE]  cannot  find  symbol  other  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.isSubtype(this))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.isSubtype(this))  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  cannot  find  symbol  other	58	None	replace
39	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(required);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(required);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(required);	  Set    <    JSType>    alternates    =    Sets.newHashSet(required);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required,  that);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(required,  that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(required);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  for(JSType  element  :  that.isSubtype())  {  [CE]  no  suitable  method  found  for  isSubtype()  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.isSubtype())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.isSubtype())  {	  for(JSType    element    :    that.restrictByNonNullOrUndefined)    {    	non-compiled	[CE]  no  suitable  method  found  for  isSubtype()	97	None	replace
42	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates().iterator().next();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternates().iterator().next();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternates().iterator().next();	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
43	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates(that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternates(that);	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
44	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternates().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternates().iterator();	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
45	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newArrayList();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newLinkedList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newLinkedList();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  for(JSType  element  :  that.asList())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.asList())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asList())  {	  for(JSType    element    :    that.restrictedSet)    {    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
48	[BUG]  [BUGGY]  for(JSType  element  :  that.asStaticSet)  {  [CE]  cannot  find  symbol  asStaticSet  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.asStaticSet)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asStaticSet)  {	  for(JSType    element    :    that.restrictedSet)    {    	non-compiled	[CE]  cannot  find  symbol  asStaticSet	100	None	replace
49	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
50	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(this.alternates);	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
51	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet();	  JSType    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
52	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newArrayList(alternates);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
53	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Lists.newHashSet(alternates);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
54	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet(that);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
55	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newArrayList(alternates);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
56	[BUG]  [BUGGY]  JSType  alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Lists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Lists.newArrayList(alternates);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
57	[BUG]  [BUGGY]  for(JSType  element  :  other.values)  {  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.values)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.values)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  cannot  find  symbol  other	72	None	replace
58	[BUG]  [BUGGY]  for(JSType  element  :  this.values)  {  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.values)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.values)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  cannot  find  symbol  values	72	None	replace
59	[BUG]  [BUGGY]  for(JSType  item  :  that.values)  {  [CE]  cannot  find  symbol  values  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  item  :  that.values)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  item  :  that.values)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  cannot  find  symbol  values	72	None	replace
60	[BUG]  [BUGGY]  for(JSType  element  :  equals)  {  [CE]  cannot  find  symbol  equals  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  equals)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  equals)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  cannot  find  symbol  equals	72	None	replace
61	[BUG]  [BUGGY]  for(JSType  element  :  that.types.iterator().next())  {  [CE]  cannot  find  symbol  types  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.types.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.types.iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  cannot  find  symbol  types	99	None	replace
62	[BUG]  [BUGGY]  for(JSType  element  :  that.getElements().iterator().next())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.getElements().iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.getElements().iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
63	[BUG]  [BUGGY]  for(JSType  element  :  that.elements.iterator().next())  {  [CE]  cannot  find  symbol  elements  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.elements.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.elements.iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  cannot  find  symbol  elements	99	None	replace
64	[BUG]  [BUGGY]  for(JSType  element  :  that.iterator().next())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
65	[BUG]  [BUGGY]  for(JSType  element  :  alternates.iterator().next())  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  alternates.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  alternates.iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	99	None	replace
66	[BUG]  [BUGGY]  for(JSType  element  :  this.alternates.asParameters())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.alternates.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.alternates.asParameters())  {	  for(JSType    element    :    alternates.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
67	[BUG]  [BUGGY]  for(JSType  element  :  elements.asParameters())  {  [CE]  cannot  find  symbol  elements  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.asParameters())  {	  for(JSType    element    :    alternates.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol  elements	20	None	replace
68	[BUG]  [BUGGY]  for(JSType  element  :  this.unions)  {  [CE]  cannot  find  symbol  unions  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.unions)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.unions)  {	  for(JSType    element    :    that.unions)    {    	non-compiled	[CE]  cannot  find  symbol  unions	14	None	replace
69	[BUG]  [BUGGY]  for(JSType  element  :  that.members)  {  [CE]  cannot  find  symbol  members  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.members)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.members)  {	  for(JSType    element    :    that.unions)    {    	non-compiled	[CE]  cannot  find  symbol  members	14	None	replace
70	[BUG]  [BUGGY]  for(JSType  element  :  other.unions)  {  [CE]  cannot  find  symbol  other  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.unions)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.unions)  {	  for(JSType    element    :    that.unions)    {    	non-compiled	[CE]  cannot  find  symbol  other	14	None	replace
71	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).values();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
72	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this).keySet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this).keySet();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
73	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).subtypes();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).subtypes();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).subtypes();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
74	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).getReturnType();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).getReturnType();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).getReturnType();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
75	[BUG]  [BUGGY]  for(JSType  element  :  other.types)  {  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.types)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.types)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  cannot  find  symbol  other	13	None	replace
76	[BUG]  [BUGGY]  for(JSType  element  :  this.types)  {  [CE]  cannot  find  symbol  types  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.types)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.types)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  cannot  find  symbol  types	13	None	replace
77	[BUG]  [BUGGY]  For(JSType  element  :  that.types)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.types)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.types)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
78	[BUG]  [BUGGY]  for(JSType  element  :  elements)  {  [CE]  cannot  find  symbol  elements  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  cannot  find  symbol  elements	13	None	replace
79	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that).keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that).keySet();	  JSType    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
80	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates).values();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates).values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates).values();	  JSType    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
81	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates).keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(this.alternates).keySet();	  JSType    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
82	[BUG]  [BUGGY]  for(JSType  that  :  element.asParameters())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.asParameters())  {	  for(JSType    element    :    other.asParameters())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	19	None	replace
83	[BUG]  [BUGGY]  for(JSType  element  :  equals.asParameters())  {  [CE]  cannot  find  symbol  equals  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  equals.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  equals.asParameters())  {	  for(JSType    element    :    other.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol  equals	19	None	replace
84	[BUG]  [BUGGY]  for(JSType  that  :  alternates())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  alternates())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  alternates())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	103	None	replace
85	[BUG]  [BUGGY]  for(JSType  that  :  getAlternates(),  alternates)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  getAlternates(),  alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  getAlternates(),  alternates)  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  ')'  expected	103	None	replace
86	[BUG]  [BUGGY]  for(JSType  that  :  getAlternates().values())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  getAlternates().values())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  getAlternates().values())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	103	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  getAlternates())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	add	for(JSType  element  :  getAlternates())  {	  for(JSType    that    :    getAlternates())    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
88	[BUG]  [BUGGY]  for(JSType  element  :  getAlternates())  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  getAlternates())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  getAlternates())  {	  for(JSType    that    :    getAlternates())    {    	compilable	  [FE]  AssertionFailedError  	103	1	replace
89	[BUG]  [BUGGY]  HashSet  alternates  =  getAlternates();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  HashSet  alternates  =  getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	HashSet  alternates  =  getAlternates();	  LinkedHashSet    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
90	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(this.alternates).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(this.alternates).iterator();	  JSType    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
91	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet().iterator();	  JSType    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
92	[BUG]  [BUGGY]  for(JSType  element  :  this.parameters())  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.parameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.parameters())  {	  for(JSType    element    :    this.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
94	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
95	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
96	[BUG]  [BUGGY]  JSType  alternates  =  element.getRawClass();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  element.getRawClass();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  element.getRawClass();	  JSType    alternates    =    that.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
97	[BUG]  [BUGGY]  JSType  alternates  =  this.getRawClass();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.getRawClass();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.getRawClass();	  JSType    alternates    =    that.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
98	[BUG]  [BUGGY]  JSType  alternates  =  elements.getRawClass();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  elements.getRawClass();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  elements.getRawClass();	  JSType    alternates    =    that.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
99	[BUG]  [BUGGY]  for(JSType  element  :  that.union)  {  [CE]  cannot  find  symbol  union  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.union)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.union)  {	  for(JSType    element    :    that.restrictByUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  union	45	None	replace
100	[BUG]  [BUGGY]  JSType  alternates  =  this.other.getAlternates();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.other.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.other.getAlternates();	  JSType    alternates    =    other.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
101	[BUG]  [BUGGY]  for(JSType  that  :  this.restrictByNotNullOrUndefined())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  this.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  this.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    this.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	2	None	replace
102	[BUG]  [BUGGY]  for(JSType  element  :  this.restrictByNotNullOrUndefined(),  that)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.restrictByNotNullOrUndefined(),  that)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.restrictByNotNullOrUndefined(),  that)  {	  for(JSType    element    :    this.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  ')'  expected	2	None	replace
103	[BUG]  [BUGGY]  ArrayList  alternates  =  new  LinkedList(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  LinkedList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  LinkedList(alternates);	  ArrayList    alternates    =    new    HashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
104	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(that);	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
105	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList();	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
106	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(that.alternates);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(that.alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(that.alternates);	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
107	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(this.alternates);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(this.alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(this.alternates);	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
108	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newArrayList(alternates.size());	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
109	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
110	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
111	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size()  -  1);	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
112	[BUG]  [BUGGY]  for(JSType  alternates  :  that.symbols)  {  [CE]  cannot  find  symbol  symbols  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  that.symbols)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  that.symbols)  {	  for(JSType    element    :    that.symbols)    {    	non-compiled	[CE]  cannot  find  symbol  symbols	12	None	replace
113	[BUG]  [BUGGY]  for(JSType  element  :  other.symbols)  {  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.symbols)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.symbols)  {	  for(JSType    element    :    that.symbols)    {    	non-compiled	[CE]  cannot  find  symbol  other	12	None	replace
114	[BUG]  [BUGGY]  for(JSType  element  :  this.symbols)  {  [CE]  cannot  find  symbol  symbols  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.symbols)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.symbols)  {	  for(JSType    element    :    that.symbols)    {    	non-compiled	[CE]  cannot  find  symbol  symbols	12	None	replace
115	[BUG]  [BUGGY]  for(JSType  that  :  element.symbols)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.symbols)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.symbols)  {	  for(JSType    element    :    that.symbols)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	12	None	replace
116	[BUG]  [BUGGY]  List  <  String>  alternates  =  Sets.newHashSet(that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Sets.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Sets.newHashSet(that);	  List    <    String>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
117	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Sets.newHashSet(alternates);	  List    <    String>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
118	[BUG]  [BUGGY]  List  <  String>  alternates  =  Sets.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Sets.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Sets.newArrayList(alternates);	  List    <    String>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
119	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(this);	  Set    <    String>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Sets.newHashSet(that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Sets.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Sets.newHashSet(that);	  Set    <    String>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
121	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(element);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(element);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(element);	  Set    <    String>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
122	[BUG]  [BUGGY]  Set  alternates  =  new  LinkedHashSet(that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  alternates  =  new  LinkedHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  alternates  =  new  LinkedHashSet(that);	  Set    alternates    =    new    HashSet(that);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
123	[BUG]  [BUGGY]  List  alternates  =  new  ArrayList(that);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  new  ArrayList(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  new  ArrayList(that);	  Set    alternates    =    new    HashSet(that);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
124	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that).keySet();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(that).keySet();	  JSType[]    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
125	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).values();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).values();	  JSType[]    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
126	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  JSType[alternates.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  JSType[alternates.size()  ]);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  JSType[alternates.size()  ]);	  JSType[]    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
127	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).get();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).get();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).get();	  JSType[]    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
128	[BUG]  [BUGGY]  for(JSType  element  :  that.assignments)  {  [CE]  cannot  find  symbol  assignments  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.assignments)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.assignments)  {	  for(JSType    element    :    that.assignmentOps)    {    	non-compiled	[CE]  cannot  find  symbol  assignments	96	None	replace
129	[BUG]  [BUGGY]  List  <  String>  alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Lists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Lists.newArrayList(alternates);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
130	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Lists.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Lists.newHashSet(alternates);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
131	[BUG]  [BUGGY]  List  <  String>  alternates  =  Lists.newHashSet(that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Lists.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Lists.newHashSet(that);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
132	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Lists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Lists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Lists.newArrayList(alternates);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
133	[BUG]  [BUGGY]  List  <  String>  alternates  =  Lists.newLinkedList(alternates);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Lists.newLinkedList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Lists.newLinkedList(alternates);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
134	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(this).iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(this).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(this).iterator();	  JSType    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
135	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that),  this.alternators.iterator();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that),  this.alternators.iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that),  this.alternators.iterator();	  JSType    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
136	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that),  that.iterator();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that),  that.iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that),  that.iterator();	  JSType    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  ';'  expected	66	None	replace
137	[BUG]  [BUGGY]  JSType  alternates  =  this.all.getAlternates();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.all.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.all.getAlternates();	  JSType    alternates    =    all.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
138	[BUG]  [BUGGY]  for(JSType  element  :  equals.restrictByNotNullOrUndefined())  {  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  equals.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  equals.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    other.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  cannot  find  symbol  equals	85	None	replace
139	[BUG]  [BUGGY]  ArrayList  alternates  =  getAlternates().values();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  getAlternates().values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  getAlternates().values();	  ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
140	[BUG]  [BUGGY]  List  alternates  =  getAlternates().values();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  getAlternates().values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  getAlternates().values();	  List    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
141	[BUG]  [BUGGY]  List  alternates  =  getAlternates().iterator().next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  getAlternates().iterator().next();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  getAlternates().iterator().next();	  List    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
142	[BUG]  [BUGGY]  for(JSType  element  :  that.static)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.static)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.static)  {	  for(JSType    element    :    that.asStatic)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
143	[BUG]  [BUGGY]  for(JSType  element  :  that.getStatic)  {  [CE]  cannot  find  symbol  getStatic  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.getStatic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.getStatic)  {	  for(JSType    element    :    that.asStatic)    {    	non-compiled	[CE]  cannot  find  symbol  getStatic	44	None	replace
144	[BUG]  [BUGGY]  for(JSType  item  :  that.placeholders)  {  [CE]  cannot  find  symbol  placeholders  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  item  :  that.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  item  :  that.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  cannot  find  symbol  placeholders	82	None	replace
145	[BUG]  [BUGGY]  for(JSType  that  :  element.placeholders)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	82	None	replace
146	[BUG]  [BUGGY]  for(JSType  alternates  :  that.placeholders)  {  [CE]  cannot  find  symbol  placeholders  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  that.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  that.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  cannot  find  symbol  placeholders	82	None	replace
147	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that.size());	  JSType    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
148	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates.size()  -  1);	  JSType    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
149	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  +  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates.size()  +  1);	  JSType    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
150	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  -  that);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates.size()  -  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates.size()  -  that);	  JSType    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
151	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternatives,  that);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternatives,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternatives,  that);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternatives);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
152	[BUG]  [BUGGY]  for(JSType  that  :  equals)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  equals)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  equals)  {	  for(JSType    that    :    element)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	68	None	replace
153	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(that).keySet();	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
154	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Arrays.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Arrays.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Arrays.newArrayList(alternates);	  ArrayList    <    String>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
155	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  new  ArrayList  <  String>(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  new  ArrayList  <  String>(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  new  ArrayList  <  String>(alternates);	  ArrayList    <    String>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
156	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Arrays.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Arrays.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Arrays.newHashSet(alternates);	  ArrayList    <    String>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
157	[BUG]  [BUGGY]  List  <  String>  alternates  =  Arrays.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Arrays.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Arrays.newHashSet(alternates);	  ArrayList    <    String>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
158	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
159	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
160	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  List.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
161	[BUG]  [BUGGY]  for(JSType  that  :  this.alternates.values())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  this.alternates.values())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  this.alternates.values())  {	  for(JSType    that    :    this.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	70	None	replace
162	[BUG]  [BUGGY]  for(JSType  that  :  this.alternates.keySet())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  this.alternates.keySet())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  this.alternates.keySet())  {	  for(JSType    that    :    this.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	70	None	replace
163	[BUG]  [BUGGY]  for(JSType  that  :  this.alternates.iterator())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  this.alternates.iterator())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  this.alternates.iterator())  {	  for(JSType    that    :    this.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	70	None	replace
164	[BUG]  [BUGGY]  for(JSType  element  :  this.type)  {  [CE]  cannot  find  symbol  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.type)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.type)  {	  for(JSType    element    :    that.type)    {    	non-compiled	[CE]  cannot  find  symbol  type	39	None	replace
165	[BUG]  [BUGGY]  for(JSType  element  :  other.type)  {  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.type)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.type)  {	  for(JSType    element    :    that.type)    {    	non-compiled	[CE]  cannot  find  symbol  other	39	None	replace
166	[BUG]  [BUGGY]  for(JSType  element  :  that.type,  alternates)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.type,  alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.type,  alternates)  {	  for(JSType    element    :    that.type)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
167	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
168	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  ArrayLists.newArrayList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
169	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(that).iterator();	  JSType[]    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
170	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet().iterator();	  JSType[]    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
171	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(this.alternates).iterator();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(this.alternates).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(this.alternates).iterator();	  JSType[]    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
172	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
173	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that.size());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(that.size());	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
174	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
175	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
176	[BUG]  [BUGGY]  JSType  alternates  =  that.alternates.getAlternates();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  that.alternates.getAlternates();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  that.alternates.getAlternates();	  JSType    alternates    =    this.alternates.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
177	[BUG]  [BUGGY]  JSType  alternates  =  this.alternates.getAlternates(that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.alternates.getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.alternates.getAlternates(that);	  JSType    alternates    =    this.alternates.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
178	[BUG]  [BUGGY]  for(JSType  element  :  other.asType())  {  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.asType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.asType())  {	  for(JSType    element    :    that.asType())    {    	non-compiled	[CE]  cannot  find  symbol  other	73	None	replace
179	[BUG]  [BUGGY]  for(JSType  element  :  this.asType())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.asType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.asType())  {	  for(JSType    element    :    that.asType())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
180	[BUG]  [BUGGY]  for(JSType  element  :  that.type.asType())  {  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.type.asType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.type.asType())  {	  for(JSType    element    :    that.asType())    {    	non-compiled	[CE]  cannot  find  symbol  type	73	None	replace
181	[BUG]  [BUGGY]  for(JSType  element  :  that.types.asType())  {  [CE]  cannot  find  symbol  types  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.types.asType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.types.asType())  {	  for(JSType    element    :    that.asType())    {    	non-compiled	[CE]  cannot  find  symbol  types	73	None	replace
182	[BUG]  [BUGGY]  for(JSType  alternates  :  that.synthetic)  {  [CE]  cannot  find  symbol  synthetic  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  that.synthetic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  that.synthetic)  {	  for(JSType    element    :    that.synthetic)    {    	non-compiled	[CE]  cannot  find  symbol  synthetic	40	None	replace
183	[BUG]  [BUGGY]  for(JSType  that  :  element.synthetic)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.synthetic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.synthetic)  {	  for(JSType    element    :    that.synthetic)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	40	None	replace
184	[BUG]  [BUGGY]  for(JSType  element  :  this.synthetic)  {  [CE]  cannot  find  symbol  synthetic  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.synthetic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.synthetic)  {	  for(JSType    element    :    that.synthetic)    {    	non-compiled	[CE]  cannot  find  symbol  synthetic	40	None	replace
185	[BUG]  [BUGGY]  for(JSType  element  :  other.synthetic)  {  [CE]  cannot  find  symbol  other  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.synthetic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.synthetic)  {	  for(JSType    element    :    that.synthetic)    {    	non-compiled	[CE]  cannot  find  symbol  other	40	None	replace
186	[BUG]  [BUGGY]  for(JSType  element  :  that.globals)  {  [CE]  cannot  find  symbol  globals  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.globals)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.globals)  {	  for(JSType    element    :    that.global)    {    	non-compiled	[CE]  cannot  find  symbol  globals	75	None	replace
187	[BUG]  [BUGGY]  for(JSType  element  :  this.global)  {  [CE]  cannot  find  symbol  global  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.global)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.global)  {	  for(JSType    element    :    that.global)    {    	non-compiled	[CE]  cannot  find  symbol  global	75	None	replace
188	[BUG]  [BUGGY]  for(JSType  element  :  this.others.restrictByNotNullOrUndefined())  {  [CE]  cannot  find  symbol  others  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.others.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.others.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    others.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  cannot  find  symbol  others	1	None	replace
189	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(requires);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(requires);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(requires);	  Set    <    JSType>    alternates    =    Sets.newHashSet(requires);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
190	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires,  that);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(requires,  that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(requires);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
191	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newArrayList();	  List    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
192	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newLinkedList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newLinkedList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newLinkedList();	  List    <    JSType>    alternates    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
193	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  ArrayList.newArrayList(alternates);	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
194	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  List.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  List.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  List.newArrayList(alternates);	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
195	[BUG]  [BUGGY]  List  <  String>  alternates  =  ArrayList.newArrayList(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  ArrayList.newArrayList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  ArrayList.newArrayList(alternates);	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
196	[BUG]  [BUGGY]  for(JSType  that  :  elements.alternates)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  elements.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  elements.alternates)  {	  for(JSType    that    :    element.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	67	None	replace
197	[BUG]  [BUGGY]  for(JSType  that  :  element.alternates,  alternates)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.alternates,  alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.alternates,  alternates)  {	  for(JSType    that    :    element.alternates)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
198	[BUG]  [BUGGY]  for(JSType  element  :  this.alternates.restrictByNotNullOrUndefined())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.alternates.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.alternates.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    alternates.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
199	[BUG]  [BUGGY]  for(JSType  element  :  this.alternators.restrictByNotNullOrUndefined())  {  [CE]  cannot  find  symbol  alternators  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.alternators.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.alternators.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    alternates.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  cannot  find  symbol  alternators	3	None	replace
200	[BUG]  [BUGGY]  for(JSType  element  :  that.types.asParameters())  {  [CE]  cannot  find  symbol  types  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.types.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.types.asParameters())  {	  for(JSType    element    :    others.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol  types	22	None	replace
201	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newArrayList();	  List    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
202	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Lists.newHashSet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Lists.newHashSet();	  List    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
203	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newArrayList();	  List    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
204	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newLinkedList();	  List    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
205	[BUG]  [BUGGY]  for(JSType  element  :  this.restrictByNotEmpty())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.restrictByNotEmpty())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.restrictByNotEmpty())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
206	[BUG]  [BUGGY]  for(JSType  element  :  other.restrictByNotEmpty())  {  [CE]  cannot  find  symbol  other  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.restrictByNotEmpty())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.restrictByNotEmpty())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  other	4	None	replace
207	[BUG]  [BUGGY]  for(JSType  element  :  others.restrictByNotEmpty())  {  [CE]  cannot  find  symbol  others  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  others.restrictByNotEmpty())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  others.restrictByNotEmpty())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  others	4	None	replace
208	[BUG]  [BUGGY]  for(JSType  element  :  alternates.restrictByNotEmpty())  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  alternates.restrictByNotEmpty())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  alternates.restrictByNotEmpty())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
209	[BUG]  [BUGGY]  for(JSType  item  :  that.ranges)  {  [CE]  cannot  find  symbol  ranges  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  item  :  that.ranges)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  item  :  that.ranges)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  cannot  find  symbol  ranges	15	None	replace
210	[BUG]  [BUGGY]  for(JSType  element  :  this.ranges)  {  [CE]  cannot  find  symbol  ranges  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.ranges)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.ranges)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  cannot  find  symbol  ranges	15	None	replace
211	[BUG]  [BUGGY]  for(JSType  that  :  element.ranges)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.ranges)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.ranges)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	15	None	replace
212	[BUG]  [BUGGY]  for(JSType  element  :  other.ranges)  {  [CE]  cannot  find  symbol  other  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.ranges)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.ranges)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  cannot  find  symbol  other	15	None	replace
213	[BUG]  [BUGGY]  for(JSType  alternates  :  others)  {  [CE]  cannot  find  symbol  others  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  others)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  others)  {	  for(JSType    that    :    others)    {    	non-compiled	[CE]  cannot  find  symbol  others	71	None	replace
214	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternates.size()  -  1);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
215	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.size());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.size());	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
216	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(that.alternates.size());	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
217	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(removed);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(removed);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(removed);	  Set    <    JSType>    alternates    =    Sets.newHashSet(removed);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
218	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(removed);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(removed);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(removed);	  Set    <    JSType>    alternates    =    Sets.newHashSet(removed);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
219	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this).iterator();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
220	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet().iterator();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet().iterator();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
221	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).iterate();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).iterate();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).iterate();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
222	[BUG]  [BUGGY]  for(JSType  element  :  this.strictByNotNullOrUndefined)  {  [CE]  cannot  find  symbol  strictByNotNullOrUndefined  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.strictByNotNullOrUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.strictByNotNullOrUndefined)  {	  for(JSType    element    :    that.strictByNotNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  strictByNotNullOrUndefined	43	None	replace
223	[BUG]  [BUGGY]  for(JSType  element  :  other.strictByNotNullOrUndefined)  {  [CE]  cannot  find  symbol  other  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.strictByNotNullOrUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.strictByNotNullOrUndefined)  {	  for(JSType    element    :    that.strictByNotNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  other	43	None	replace
224	[BUG]  [BUGGY]  for(JSType  element  :  others.strictByNotNullOrUndefined)  {  [CE]  cannot  find  symbol  others  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  others.strictByNotNullOrUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  others.strictByNotNullOrUndefined)  {	  for(JSType    element    :    that.strictByNotNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  others	43	None	replace
225	[BUG]  [BUGGY]  for(JSType  element  :  that.strictByNonNullOrUndefined)  {  [CE]  cannot  find  symbol  strictByNonNullOrUndefined  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.strictByNonNullOrUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.strictByNonNullOrUndefined)  {	  for(JSType    element    :    that.strictByNotNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  strictByNonNullOrUndefined	43	None	replace
226	[BUG]  [BUGGY]  JSType  alternates  =  element.getInterfaces();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  element.getInterfaces();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  element.getInterfaces();	  JSType    alternates    =    that.getInterfaces();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
227	[BUG]  [BUGGY]  JSType  alternates  =  this.getInterfaces();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.getInterfaces();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.getInterfaces();	  JSType    alternates    =    that.getInterfaces();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
228	[BUG]  [BUGGY]  JSType  alternates  =  that.getElements();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  that.getElements();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  that.getElements();	  JSType    alternates    =    that.getInterfaces();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
229	[BUG]  [BUGGY]  JSType  alternates  =  elements.getInterfaces();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  elements.getInterfaces();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  elements.getInterfaces();	  JSType    alternates    =    that.getInterfaces();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
230	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.clone();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.clone();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
231	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.cloneTree();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.cloneTree();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.cloneTree();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
232	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.cloneList();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.cloneList();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.cloneList();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
233	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.cloneChildren();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.cloneChildren();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.cloneChildren();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
234	[BUG]  [BUGGY]  for(JSType  that  :  alternates.values())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  alternates.values())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  alternates.values())  {	  for(JSType    that    :    elements)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	69	None	replace
235	[BUG]  [BUGGY]  JSType  element  =  this.getElement();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  element  =  this.getElement();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  element  =  this.getElement();	  JSType    element    =    that.getElement();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
236	[BUG]  [BUGGY]  JSType  element  =  others.getElement();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  element  =  others.getElement();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  element  =  others.getElement();	  JSType    element    =    that.getElement();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
237	[BUG]  [BUGGY]  JSType  element  =  getElement();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  element  =  getElement();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  element  =  getElement();	  JSType    element    =    that.getElement();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
238	[BUG]  [BUGGY]  for(JSType  element  :  other.singletonType())  {  [CE]  cannot  find  symbol  other  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol  other	42	None	replace
239	[BUG]  [BUGGY]  for(JSType  element  :  this.singletonType())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
240	[BUG]  [BUGGY]  for(JSType  element  :  others.singletonType())  {  [CE]  cannot  find  symbol  others  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  others.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  others.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol  others	42	None	replace
241	[BUG]  [BUGGY]  for(JSType  element  :  alternates.singletonType())  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  alternates.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  alternates.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
242	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that.alternates);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that.alternates);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.get(that.alternates);	  JSType    alternates    =(JSType)this.alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
243	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.alternates.iterator().next();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.alternates.iterator().next();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.alternates.iterator().next();	  JSType    alternates    =(JSType)this.alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
244	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  -  1);	  Set    <    JSType>    alternates    =    Sets.newHashSet(that.size());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
245	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  +  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that.size()  +  1);	  Set    <    JSType>    alternates    =    Sets.newHashSet(that.size());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
246	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(element.size());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(element.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(element.size());	  Set    <    JSType>    alternates    =    Sets.newHashSet(that.size());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
247	[BUG]  [BUGGY]  for(JSType  element  :  other.types())  {  [CE]  cannot  find  symbol  other  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol  other	94	None	replace
248	[BUG]  [BUGGY]  for(JSType  element  :  others.types())  {  [CE]  cannot  find  symbol  others  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  others.types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  others.types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol  others	94	None	replace
249	[BUG]  [BUGGY]  for(JSType  element  :  alternates.types())  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  alternates.types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  alternates.types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
250	[BUG]  [BUGGY]  for(JSType  element  :  types())  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
251	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates).keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates).keySet();	  Set    <    JSType>    alternates    =    Sets.newHashSet(others).keySet();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
252	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);	  ArrayList    <    JSType>    alternates    =    Sets.newHashSet(alternations);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
253	[BUG]  [BUGGY]  JSType  that  =  Sets.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  that  =  Sets.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  that  =  Sets.newHashSet(alternates);	  List    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
254	[BUG]  [BUGGY]  for(JSType  that  :  element.others)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.others)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.others)  {	  for(JSType    that    :    others)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	71	None	replace
255	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Arrays.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Arrays.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Arrays.newHashSet(alternates,  that);	  ArrayList    <    String>    alternates    =    Arrays.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
256	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternators.get(this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternators.get(this);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternators.get(this);	  JSType    alternates    =(JSType)this.alternators.get(that);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
257	[BUG]  [BUGGY]  for(JSType  element  :  elements.singletonType())  {  [CE]  cannot  find  symbol  elements  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol  elements	42	None	replace
258	[BUG]  [BUGGY]  for(JSType  element  :  equals.singletonType())  {  [CE]  cannot  find  symbol  equals  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  equals.singletonType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  equals.singletonType())  {	  for(JSType    element    :    that.singletonType())    {    	non-compiled	[CE]  cannot  find  symbol  equals	42	None	replace
259	[BUG]  [BUGGY]  for(JSType  that  :  element.elements)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.elements)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.elements)  {	  for(JSType    that    :    elements)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	69	None	replace
260	[BUG]  [BUGGY]  for(JSType  that  :  elements.values())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  elements.values())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  elements.values())  {	  for(JSType    that    :    elements)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	69	None	replace
261	[BUG]  [BUGGY]  for(JSType  element  :  elements.restrictByNotEmpty())  {  [CE]  cannot  find  symbol  elements  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.restrictByNotEmpty())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.restrictByNotEmpty())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  elements	4	None	replace
262	[BUG]  [BUGGY]  for(JSType  element  :  that.restrictByNotNull())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.restrictByNotNull())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.restrictByNotNull())  {	  for(JSType    element    :    that.restrictByNotEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
263	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(other);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(other);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(other);	  Set    <    JSType>    alternates    =    Sets.newHashSet(required);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
264	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  ArrayList.newHashSet(alternates,  that);	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
265	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  ArrayList.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  ArrayList.newArrayList();	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
266	[BUG]  [BUGGY]  List  <  String>  alternates  =  Lists.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Lists.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Lists.newHashSet(alternates,  that);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
267	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).keySet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).keySet().iterator();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
268	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).keySet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).keySet().iterator();	  JSType[]    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
269	[BUG]  [BUGGY]  JSType  alternates  =  elements.getAlternates(this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  elements.getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  elements.getAlternates(this);	  JSType    alternates    =    elements.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
270	[BUG]  [BUGGY]  List  <  String>  alternates  =  Sets.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  Sets.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  Sets.newHashSet(alternates,  that);	  List    <    String>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
271	[BUG]  [BUGGY]  java.util.ArrayList  alternates  =  getAlternates(this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  java.util.ArrayList  alternates  =  getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	java.util.ArrayList  alternates  =  getAlternates(this);	  java.util.ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
272	[BUG]  [BUGGY]  ArrayList  alternates  =  getAlternates(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  getAlternates(this);	  java.util.ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
273	[BUG]  [BUGGY]  java.util.ArrayList  alternates  =  getAlternates(that);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  java.util.ArrayList  alternates  =  getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	java.util.ArrayList  alternates  =  getAlternates(that);	  java.util.ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
274	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators.size());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternators.size());	  Set    <    JSType>    alternates    =    Sets.newHashSet(that.size());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
275	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(this.alternates.size());	  Set    <    JSType>    alternates    =    Sets.newHashSet(that.size());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	add	for(JSType  element  :  this.alternates)  {	  for(JSType    element    :    others)    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
277	[BUG]  [BUGGY]  for(JSType  element  :  this.alternates)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.alternates)  {	  for(JSType    element    :    others)    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
278	[BUG]  [BUGGY]  LinkedHashSet  alternates  =  new  LinkedHashSet(that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  LinkedHashSet  alternates  =  new  LinkedHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	LinkedHashSet  alternates  =  new  LinkedHashSet(that);	  LinkedHashSet    alternates    =    new    LinkedHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
279	[BUG]  [BUGGY]  LinkedHashSet  alternates  =  new  LinkedHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  LinkedHashSet  alternates  =  new  LinkedHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	LinkedHashSet  alternates  =  new  LinkedHashSet(alternates,  that);	  LinkedHashSet    alternates    =    new    LinkedHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
280	[BUG]  [BUGGY]  List  alternates  =  new  ArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  new  ArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  new  ArrayList(alternates.size());	  List    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
281	[BUG]  [BUGGY]  List  alternates  =  new  ArrayList(alternates.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  new  ArrayList(alternates.length);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  new  ArrayList(alternates.length);	  List    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
282	[BUG]  [BUGGY]  for(JSType  that  :  element.type)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  element.type)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  element.type)  {	  for(JSType    that    :    element)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	68	None	replace
283	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required).keySet();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(required).keySet();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
284	[BUG]  [BUGGY]  for(JSType  element  :  elements.isSubtype(this))  {  [CE]  cannot  find  symbol  elements  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.isSubtype(this))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.isSubtype(this))  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  cannot  find  symbol  elements	58	None	replace
285	[BUG]  [BUGGY]  for(JSType  element  :  alternates.isSubtype(this))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  alternates.isSubtype(this))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  alternates.isSubtype(this))  {	  for(JSType    element    :    that.isSubtype(this))    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
286	[BUG]  [BUGGY]  for(JSType  element  :  elements.types())  {  [CE]  cannot  find  symbol  elements  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol  elements	94	None	replace
287	[BUG]  [BUGGY]  for(JSType  element  :  this.types())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.types())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.types())  {	  for(JSType    element    :    that.types())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
288	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternates(this);	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
289	[BUG]  [BUGGY]  JSType  alternates  =  getAlternatesForType();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternatesForType();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternatesForType();	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
290	[BUG]  [BUGGY]  JSType  alternates  =  getAlternatesForType(that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternatesForType(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternatesForType(that);	  JSType    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
291	[BUG]  [BUGGY]  for(JSType  element  :  that.value)  {  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.value)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.value)  {	  for(JSType    element    :    that.asStatic)    {    	non-compiled	[CE]  cannot  find  symbol  value	44	None	replace
292	[BUG]  [BUGGY]  for(JSType  alternates  :  element.alternates)  {  [CE]  cannot  find  symbol  element  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  element.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  element.alternates)  {	  for(JSType    that    :    element.alternates)    {    	non-compiled	[CE]  cannot  find  symbol  element	67	None	replace
293	[BUG]  [BUGGY]  Set  alternates  =  new  LinkedList(alternates);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  alternates  =  new  LinkedList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  alternates  =  new  LinkedList(alternates);	  Set    alternates    =    new    LinkedHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
294	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(this,  that);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(this,  that);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(this,  that);	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
295	[BUG]  [BUGGY]  for(JSType  that  :  this.alternates,  element)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  this.alternates,  element)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  this.alternates,  element)  {	  for(JSType    that    :    this.alternates)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
296	[BUG]  [BUGGY]  for(JSType  element  :  that.getNativeType(UNKNOWN_TYPE))  {  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.getNativeType(UNKNOWN_TYPE))  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.getNativeType(UNKNOWN_TYPE))  {	  for(JSType    element    :    that.restrictByNonNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	97	None	replace
297	[BUG]  [BUGGY]  for(JSType  element  :  that.restrictByNullOrUndefined)  {  [CE]  cannot  find  symbol  restrictByNullOrUndefined  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.restrictByNullOrUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.restrictByNullOrUndefined)  {	  for(JSType    element    :    that.restrictByNonNullOrUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  restrictByNullOrUndefined	97	None	replace
298	[BUG]  [BUGGY]  JSType  alternates  =  getAlternates(other);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getAlternates(other);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getAlternates(other);	  JSType    alternates    =    other.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
299	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates.size());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(alternates.size());	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
300	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates.length);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(alternates.length);	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
301	[BUG]  [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates,  that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  ArrayList(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  ArrayList(alternates,  that);	  ArrayList    alternates    =    new    ArrayList(alternates);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
302	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternates,  that);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
303	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayLists.newHashSet(alternates,  that);	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
304	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newLinkedList(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newLinkedList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayLists.newLinkedList(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
305	[BUG]  [BUGGY]  for(JSType  alternates  :  getAlternates())  {  [CE]  cannot  find  symbol  element  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  alternates  :  getAlternates())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  alternates  :  getAlternates())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  cannot  find  symbol  element	103	None	replace
306	[BUG]  [BUGGY]  for(JSType  that  :  getOwnAlternates())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  getOwnAlternates())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  getOwnAlternates())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	103	None	replace
307	[BUG]  [BUGGY]  For(JSType  element  :  that.type)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.type)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.type)  {	  for(JSType    element    :    that.type)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
308	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(that).keySet().iterator();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(that).keySet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(that).keySet().iterator();	  JSType    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
309	[BUG]  [BUGGY]  For(JSType  element  :  that.ranges)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.ranges)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.ranges)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
310	[BUG]  [BUGGY]  for(JSType  element  :  that.range)  {  [CE]  cannot  find  symbol  range  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.range)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.range)  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  cannot  find  symbol  range	15	None	replace
311	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.restrictByNotNullOrUndefined();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.restrictByNotNullOrUndefined();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
312	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.references.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.references.clone();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.references.clone();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
313	[BUG]  [BUGGY]  JSType  alternates  =(JSType)that.types.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)that.types.clone();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)that.types.clone();	  JSType    alternates    =(JSType)that.clone();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
314	[BUG]  [BUGGY]  JSType  element  =  getElement(that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  element  =  getElement(that);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  element  =  getElement(that);	  JSType    element    =    that.getElement();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
315	[BUG]  [BUGGY]  JSType  alternates  =  this.alternates.getAlternates(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.alternates.getAlternates(this);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.alternates.getAlternates(this);	  JSType    alternates    =    this.alternates.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
316	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  new  ArrayList  <  JSType>(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
317	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates).keySet().iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternates).keySet().iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternates).keySet().iterator();	  JSType    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
318	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(requires);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(requires);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(requires);	  Set    <    String>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
319	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(required);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(required);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(required);	  Set    <    String>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
320	[BUG]  [BUGGY]  JSType  alternates  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Lists.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Lists.newArrayList();	  List    <    JSType>    alternates    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
321	[BUG]  [BUGGY]  ArrayList  alternates  =  getAlternates(that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  getAlternates(that);	  ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
322	[BUG]  [BUGGY]  LinkedList  alternates  =  new  TreeSet(alternates);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  LinkedList  alternates  =  new  TreeSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	LinkedList  alternates  =  new  TreeSet(alternates);	  Set    alternates    =    new    TreeSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
323	[BUG]  [BUGGY]  List  alternates  =  new  TreeSet(alternates);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  new  TreeSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  new  TreeSet(alternates);	  Set    alternates    =    new    TreeSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
324	[BUG]  [BUGGY]  for(JSType  element  :  elements.restrictByNotNullOrUndefined())  {  [CE]  cannot  find  symbol  elements  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.restrictByNotNullOrUndefined())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.restrictByNotNullOrUndefined())  {	  for(JSType    element    :    all.restrictByNotNullOrUndefined())    {    	non-compiled	[CE]  cannot  find  symbol  elements	86	None	replace
325	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newLinkedList(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newLinkedList(alternates);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
326	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet(alternates,  that);	  List    <    JSType>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
327	[BUG]  [BUGGY]  for(JSType  element  :  allTypes)  {  [CE]  cannot  find  symbol  allTypes  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  allTypes)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  allTypes)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  cannot  find  symbol  allTypes	13	None	replace
328	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(this);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.get(this);	  JSType    alternates    =(JSType)this.alternates.get(that);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
329	[BUG]  [BUGGY]  for(JSType  element  :  this.placeholders)  {  [CE]  cannot  find  symbol  placeholders  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  this.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  this.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  cannot  find  symbol  placeholders	82	None	replace
330	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators).keySet();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(alternators).keySet();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(alternators).keySet();	  Set    <    JSType>    alternates    =    Sets.newHashSet(others).keySet();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
331	[BUG]  [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternatives);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  Sets.newHashSet(alternatives);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  Sets.newHashSet(alternatives);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternatives);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
332	[BUG]  [BUGGY]  For(JSType  element  :  that.synthetic)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.synthetic)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.synthetic)  {	  for(JSType    element    :    that.synthetic)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
333	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newLinkedList(alternates.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newLinkedList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newLinkedList(alternates.size());	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
334	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternations,  that);	  List    <    JSType>    alternates    =    Sets.newHashSet(alternations);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
335	[BUG]  [BUGGY]  ArrayList  alternates  =  new  HashSet(that);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  alternates  =  new  HashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  alternates  =  new  HashSet(that);	  Set    alternates    =    new    HashSet(that);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
336	[BUG]  [BUGGY]  JSType  alternates  =  new  HashSet(that);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  new  HashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  new  HashSet(that);	  Set    alternates    =    new    HashSet(that);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
337	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires.size());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(requires.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(requires.size());	  Set    <    JSType>    alternates    =    Sets.newHashSet(requires);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
338	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size()  -  1);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size()  -  1);	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
339	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newLinkedList(alternates.size());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayList.newLinkedList(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayList.newLinkedList(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
340	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Sets.newHashSet(alternates).values();	  List    <    JSType>    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
341	[BUG]  [BUGGY]  for(JSType  element  :  that.asSymbols)  {  [CE]  cannot  find  symbol  asSymbols  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.asSymbols)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asSymbols)  {	  for(JSType    element    :    that.symbols)    {    	non-compiled	[CE]  cannot  find  symbol  asSymbols	12	None	replace
342	[BUG]  [BUGGY]  for(JSType  element  :  that.asUndefined)  {  [CE]  cannot  find  symbol  asUndefined  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.asUndefined)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asUndefined)  {	  for(JSType    element    :    that.restrictByUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  asUndefined	45	None	replace
343	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that.alternates.size()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that.alternates.size()  -  1);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.get(that.alternates.size()  -  1);	  JSType    alternates    =(JSType)this.alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
344	[BUG]  [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that).next();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =(JSType)this.alternates.get(that).next();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =(JSType)this.alternates.get(that).next();	  JSType    alternates    =(JSType)this.alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
345	[BUG]  [BUGGY]  List  alternates  =  getAlternates(that);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  getAlternates(that);	  List    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
346	[BUG]  [BUGGY]  JSType  alternates  =  getRawClass();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getRawClass();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getRawClass();	  JSType    alternates    =    that.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
347	[BUG]  [BUGGY]  For(JSType  element  :  that.values)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.values)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.values)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
348	[BUG]  [BUGGY]  for(JSType  element  :  that.symbols.asParameters())  {  [CE]  cannot  find  symbol  symbols  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.symbols.asParameters())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.symbols.asParameters())  {	  for(JSType    element    :    alternates.asParameters())    {    	non-compiled	[CE]  cannot  find  symbol  symbols	20	None	replace
349	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(that).restrictByNotNullOrUndefined();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(that).restrictByNotNullOrUndefined();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).keySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
350	[BUG]  [BUGGY]  For(JSType  element  :  that.unions)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.unions)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.unions)  {	  for(JSType    element    :    that.unions)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
351	[BUG]  [BUGGY]  setAlternates(getAlternates());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  setAlternates(getAlternates());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	setAlternates(getAlternates());	  ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
352	[BUG]  [BUGGY]  for(JSType  element  :  elements.asType())  {  [CE]  cannot  find  symbol  elements  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.asType())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.asType())  {	  for(JSType    element    :    that.asType())    {    	non-compiled	[CE]  cannot  find  symbol  elements	73	None	replace
353	[BUG]  [BUGGY]  for(JSType  element  :  that.getElements())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.getElements())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.getElements())  {	  for(JSType    element    :    that.ranges)    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
354	[BUG]  [BUGGY]  for(JSType  that  :  other.alternates)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  other.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  other.alternates)  {	  for(JSType    that    :    this.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	70	None	replace
355	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).clone();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).clone();	  JSType[]    alternates    =    Sets.newHashSet(alternates).keySet();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
356	[BUG]  [BUGGY]  for(JSType  element  :  that.placements)  {  [CE]  cannot  find  symbol  placements  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.placements)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.placements)  {	  for(JSType    element    :    that.values)    {    	non-compiled	[CE]  cannot  find  symbol  placements	72	None	replace
357	[BUG]  [BUGGY]  for(JSType  element  :  that.others)  {  [CE]  cannot  find  symbol  others  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.others)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.others)  {	  for(JSType    element    :    others)    {    	non-compiled	[CE]  cannot  find  symbol  others	41	None	replace
358	[BUG]  [BUGGY]  List  <  String>  alternates  =  ArrayList.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  String>  alternates  =  ArrayList.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  String>  alternates  =  ArrayList.newHashSet(alternates);	  ArrayList    <    String>    alternates    =    ArrayList.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
359	[BUG]  [BUGGY]  JSType  alternates  =  element.getAlternates(that);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  element.getAlternates(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  element.getAlternates(that);	  JSType    alternates    =    element.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
360	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(other,  that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(other,  that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(other,  that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
361	[BUG]  [BUGGY]  JSType  alternates  =  that.getRawParameterTypes();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  that.getRawParameterTypes();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  that.getRawParameterTypes();	  JSType    alternates    =    that.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
362	[BUG]  [BUGGY]  JSType  alternates  =  this.alternates.getElementsByTag(that);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  this.alternates.getElementsByTag(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  this.alternates.getElementsByTag(that);	  JSType    alternates    =    this.alternates.getAlternates();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
363	[BUG]  [BUGGY]  for(JSType  element  :  other.placeholders)  {  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  cannot  find  symbol  other	82	None	replace
364	[BUG]  [BUGGY]  For(JSType  element  :  that.placeholders)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  For(JSType  element  :  that.placeholders)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	For(JSType  element  :  that.placeholders)  {	  for(JSType    element    :    that.placeholders)    {    	non-compiled	[CE]  ')'  expected	82	None	replace
365	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  ArrayLists.newArrayList();	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
366	[BUG]  [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  JSType>  alternates  =  Lists.newHashSet(alternates);	  ArrayList    <    JSType>    alternates    =    ArrayLists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
367	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  Lists.newHashSet(alternates.size());	  ArrayList    <    JSType>    alternates    =    Lists.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
368	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined);  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined);	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
369	[BUG]  [BUGGY]  JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined());  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  getImpl(that.restrictByNotNullOrUndefined());	  JSType    alternates    =    getImpl(that);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
370	[BUG]  [BUGGY]  for(JSType  element  :  elements.types)  {  [CE]  cannot  find  symbol  elements  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  elements.types)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  elements.types)  {	  for(JSType    element    :    that.types)    {    	non-compiled	[CE]  cannot  find  symbol  elements	13	None	replace
371	[BUG]  [BUGGY]  List  alternates  =  getImmediateParents();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  alternates  =  getImmediateParents();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  alternates  =  getImmediateParents();	  List    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
372	[BUG]  [BUGGY]  for(JSType  element  :  that.list)  {  [CE]  cannot  find  symbol  list  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.list)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.list)  {	  for(JSType    element    :    that.global)    {    	non-compiled	[CE]  cannot  find  symbol  list	75	None	replace
373	[BUG]  [BUGGY]  for(JSType  that  :  Element.alternates)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  Element.alternates)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  Element.alternates)  {	  for(JSType    that    :    element.alternates)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	67	None	replace
374	[BUG]  [BUGGY]  for(JSType  element  :  that.elements)  {  [CE]  cannot  find  symbol  elements  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.elements)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.elements)  {	  for(JSType    element    :    that.restrictByUndefined)    {    	non-compiled	[CE]  cannot  find  symbol  elements	45	None	replace
375	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(that);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(that);	  Set    <    JSType>    alternates    =    Sets.newHashSet(that);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
376	[BUG]  [BUGGY]  for(JSType  that  :  getOwners())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  getOwners())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  getOwners())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	103	None	replace
377	[BUG]  [BUGGY]  for(JSType  that  :  getElements())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  getElements())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  getElements())  {	  for(JSType    that    :    getAlternates())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	103	None	replace
378	[BUG]  [BUGGY]  for(JSType  element  :  that.type),  this)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  that.type),  this)  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.type),  this)  {	  for(JSType    element    :    that.type)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
379	[BUG]  [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size());  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	List  <  JSType>  alternates  =  ArrayList.newHashSet(alternates.size());	  ArrayList    <    JSType>    alternates    =    ArrayList.newHashSet(alternates.size());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
380	[BUG]  [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required).iterator();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  JSType>  alternates  =  Sets.newHashSet(required).iterator();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  JSType>  alternates  =  Sets.newHashSet(required).iterator();	  Set    <    JSType>    alternates    =    Sets.newHashSet(that).iterator();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
381	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(alternates,  that.alternates);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(alternates,  that.alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(alternates,  that.alternates);	  Set    <    String>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
382	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(alternates,  equals);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  Set  <  String>  alternates  =  Sets.newHashSet(alternates,  equals);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	Set  <  String>  alternates  =  Sets.newHashSet(alternates,  equals);	  Set    <    String>    alternates    =    Sets.newHashSet(alternates,    that);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
383	[BUG]  [BUGGY]  for(JSType  element  :  other.iterator().next())  {  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  element  :  other.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  other.iterator().next())  {	  for(JSType    element    :    others.iterator().next())    {    	non-compiled	[CE]  cannot  find  symbol  other	99	None	replace
384	[BUG]  [BUGGY]  JSType  alternates  =  that.getReferences();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  alternates  =  that.getReferences();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  alternates  =  that.getReferences();	  JSType    alternates    =    that.getInterfaces();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
385	[BUG]  [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  Type[alternates.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  Type[alternates.size()  ]);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType[]  alternates  =  Sets.newHashSet(alternates).toArray(new  Type[alternates.size()  ]);	  JSType[]    alternates    =    Sets.newHashSet(alternates).iterator();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
386	[BUG]  [BUGGY]  java.util.ArrayList  alternates  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  java.util.ArrayList  alternates  =  new  ArrayList();  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	java.util.ArrayList  alternates  =  new  ArrayList();	  java.util.ArrayList    alternates    =    getAlternates();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
387	[BUG]  [BUGGY]  for(JSType  that  :  alternates.iterator().next())  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  for(JSType  that  :  alternates.iterator().next())  {  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  alternates.iterator().next())  {	  for(JSType    that    :    element)    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	68	None	replace
388	[BUG]  [BUGGY]  ArrayList  <  String>  alternates  =  Lists.newHashSet(alternates);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  ArrayList  <  String>  alternates  =  Lists.newHashSet(alternates);  [BUGGY]      for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	ArrayList  <  String>  alternates  =  Lists.newHashSet(alternates);	  List    <    String>    alternates    =    Lists.newHashSet(alternates);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
389	[BUG]  [BUGGY]  JSType  element  =  alternates.getElement();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isSubtype(JSType  that)  {      [BUGGY]  JSType  element  =  alternates.getElement();  [BUGGY]      if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	JSType  element  =  alternates.getElement();	  JSType    element    =    that.getElement();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
