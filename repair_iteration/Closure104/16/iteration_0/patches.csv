bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(JSType  element  :  that.alternates)  {  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that.alternates)  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.alternates)  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol  alternates	31	None	replace
2	[BUG]  [BUGGY]  for(JSType  element  :  that.restrictByNotNullOrUndefined)  {  [CE]  cannot  find  symbol  restrictByNotNullOrUndefined  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that.restrictByNotNullOrUndefined)  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.restrictByNotNullOrUndefined)  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol  restrictByNotNullOrUndefined	31	None	replace
3	[BUG]  [BUGGY]  for(JSType  that  :  alternates)  {  [CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  that  :  alternates)  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  that  :  alternates)  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  variable  that  is  already  defined  in  method  isSubtype(JSType)	31	None	replace
4	[BUG]  [BUGGY]  for(JSType  element  :  that.asParameters())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that.asParameters())  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asParameters())  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol	31	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	  	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
6	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
7	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet();  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet();		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
8	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [CE]  cannot  find  symbol  alternations  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);		non-compiled	[CE]  cannot  find  symbol  alternations	32	None	add
9	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();  [CE]  cannot  find  symbol  Sets  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
10	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [CE]  cannot  find  symbol  Sets  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
11	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternatives);  [CE]  cannot  find  symbol  alternatives  [FE]              AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternatives);  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternatives);		non-compiled	[CE]  cannot  find  symbol  alternatives	32	None	add
12	[BUG]  [BUGGY]  for(JSType  element  :  that)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that)  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that)  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	31	None	replace
13	[BUG]  [BUGGY]  for(JSType  element  :  that.asParameters)  {  [CE]  cannot  find  symbol  asParameters  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that.asParameters)  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.asParameters)  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol  asParameters	31	None	replace
14	[BUG]  [BUGGY]    JSType  alternates  =  that.getAlternates();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    JSType  alternates  =  that.getAlternates();  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    JSType  alternates  =  that.getAlternates();		non-compiled	[CE]  cannot  find  symbol	32	None	add
15	[BUG]  [BUGGY]    Set  alternates  =  getAlternates();  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  alternates  =  getAlternates();  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  alternates  =  getAlternates();		non-compiled	[CE]  incompatible  types	32	None	add
16	[BUG]  [BUGGY]    Set  alternates  =  new  HashSet(alternates);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  alternates  =  new  HashSet(alternates);  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  alternates  =  new  HashSet(alternates);		non-compiled	[CE]  cannot  find  symbol	32	None	add
17	[BUG]  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  String>  alternates  =  Sets.newHashSet(alternates);		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
18	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).keySet();  [CE]  cannot  find  symbol  Sets  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).keySet();  [BUGGY]  for  (JSType  element  :  alternates)  {  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).keySet();		non-compiled	[CE]  cannot  find  symbol  Sets	32	None	add
19	[BUG]  [BUGGY]  for(JSType  element  :  that.restrictByNotNullOrUndefined())  {  [CE]  for-each  not  applicable  to  expression  type  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isSubtype(JSType  that)  {  [BUGGY]  for(JSType  element  :  that.restrictByNotNullOrUndefined())  {  [BUGGY]  if  (!element.isSubtype(that))  {  return  false;  }  }  return  true;  }  [CLASS]  UnionType  [METHOD]  isSubtype  [RETURN_TYPE]  boolean  JSType  that  [VARIABLES]  Set  alternates  JSType  element  that  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	for(JSType  element  :  that.restrictByNotNullOrUndefined())  {	for  (JSType  element  :  alternates)  {  	non-compiled	[CE]  for-each  not  applicable  to  expression  type	31	None	replace
