bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
2	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
3	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	1	None	add
4	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	1	None	add
5	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  results  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  results	1	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
8	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
9	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	7	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
11	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
12	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  otherAlternate	7	None	add
13	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	7	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
15	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
16	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [CE]  cannot  find  symbol  result  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	28	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	3	1	add
18	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	3	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    System.err.println( "Unknown  type: "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
20	[BUG]  [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    System.err.println( "Unknown  type: "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    System.err.println( "Unexpected  error: "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
22	[BUG]  [BUGGY]      result  =  builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    System.err.println( "Unexpected  error: "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
23	[BUG]  [BUGGY]      result  =  builder.build();  System.err.println( "Unexpected  error: "  +  that.getMessage());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unexpected  error: "  +  that.getMessage());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    System.err.println( "Unexpected  error: "  +  that.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
24	[BUG]  [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getType());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getType());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    System.err.println( "Unknown  type: "  +  that.getType());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
25	[BUG]  [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getJSType());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  System.err.println( "Unknown  type: "  +  that.getJSType());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    System.err.println( "Unknown  type: "  +  that.getJSType());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
27	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
28	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	26	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	18	3	replace
30	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	18	3	replace
31	[BUG]  [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	18	None	replace
32	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	18	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	31	2	add
34	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	31	2	add
35	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  result  =  alternates.iterator().next();  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  result  =  alternates.iterator().next();  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  result  =  alternates.iterator().next();  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
36	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  result  =  alternates.iterator().next();  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  result  =  alternates.iterator().next();  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result!=  null)  {  result  =  alternates.iterator().next();  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
37	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
38	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	  	non-compiled	[CE]  ')'  expected	31	None	add
39	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
40	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	10	None	replace
41	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT);  [CE]  cannot  find  symbol  NO_OBJECT  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT	10	None	replace
42	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE);  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_TYPE);	      result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	10	None	replace
43	[BUG]  [BUGGY]  result  =  otherAlternate.build();  [CE]  cannot  find  symbol  otherAlternate  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  otherAlternate.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();	      result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	4	None	replace
44	[BUG]  [BUGGY]  result  =  builder.build(result);  [CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  builder.build(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(result);	      result    =    builder.build();    	non-compiled	[CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	4	None	replace
45	[BUG]  [BUGGY]  result  =  builder.result();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  builder.result();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.result();	      result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
46	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	15	None	add
47	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	15	None	add
48	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	15	None	add
49	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	15	None	add
50	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
51	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  ';'  expected	15	None	add
52	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	23	None	add
53	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	23	None	add
54	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	23	None	add
55	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	23	None	add
56	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	23	None	add
57	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	23	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	9	3	add
59	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	9	3	add
60	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    Result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	9	None	add
61	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	9	None	add
62	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
63	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE));	  	non-compiled	[CE]  ';'  expected	9	None	add
64	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);	      result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	21	None	replace
65	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this);	      result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	21	None	replace
66	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternates);  [CE]  cannot  find  symbol  otherAlternates  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternates);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternates);	      result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	21	None	replace
67	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	25	None	add
68	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	25	None	add
69	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	25	None	add
70	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	25	None	add
71	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	25	None	add
72	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	25	None	add
73	[BUG]  [BUGGY]  result  =  alternates.get(result);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
74	[BUG]  [BUGGY]  result  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.alternates.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	22	None	replace
75	[BUG]  [BUGGY]  result  =  others.get(result);  [CE]  cannot  find  symbol  others  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  others.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  others	22	None	replace
76	[BUG]  [BUGGY]  result  =  otherAlternates.get(result);  [CE]  cannot  find  symbol  otherAlternates  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  otherAlternates.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	22	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	compilable	  [FE]  AssertionFailedError  	20	3	add
78	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	compilable	  [FE]  AssertionFailedError  	20	3	add
79	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	20	None	add
80	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	20	None	add
81	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
82	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  results  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  results	20	None	add
83	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
84	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	2	None	replace
85	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	2	None	replace
86	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);  [CE]  cannot  find  symbol  otherAlternates  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	2	None	replace
87	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  return  result  ==  null?  null  :  result;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  return  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    return  result  ==  null?  null  :  result;	  	non-compiled	[CE]  unreachable  statement	11	None	add
88	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    result  ==  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	11	None	add
89	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  return  result!=  null?  null  :  result;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  return  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    return  result!=  null?  null  :  result;	  	non-compiled	[CE]  unreachable  statement	11	None	add
90	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  ==  null?  null  :  result;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    JSType  result  ==  null?  null  :  result;	  	non-compiled	[CE]  ';'  expected	11	None	add
91	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  Result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  Result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    Result  ==  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	11	None	add
92	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    result!=  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	11	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	2	replace
94	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	2	replace
95	[BUG]  [BUGGY]  result  =  new  LinkedHashSet  <  JSType>();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  LinkedHashSet  <  JSType>();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedHashSet  <  JSType>();	      result    =    new    HashSet    <    JSType>();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
96	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  TreeSet  <  JSType>();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>();	      result    =    new    HashSet    <    JSType>();    	non-compiled	[CE]  incompatible  types	34	None	replace
97	[BUG]  [BUGGY]  result  =  new  ArrayList  <  JSType>();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  ArrayList  <  JSType>();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  ArrayList  <  JSType>();	      result    =    new    HashSet    <    JSType>();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
98	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(result);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  HashSet  <  JSType>(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(result);	      result    =    new    HashSet    <    JSType>();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
99	[BUG]  [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	8	None	replace
100	[BUG]  [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	8	None	replace
101	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternate);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	8	None	replace
102	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	8	None	replace
103	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  return  result!=  null?  null  :  result;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  return  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    return  result!=  null?  null  :  result;	  	non-compiled	[CE]  unreachable  statement	13	None	add
104	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    result!=  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	13	None	add
105	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  return  result  ==  null?  null  :  result;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  return  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    return  result  ==  null?  null  :  result;	  	non-compiled	[CE]  unreachable  statement	13	None	add
106	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    result  ==  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	13	None	add
107	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  JSType  result!=  null?  null  :  result;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  JSType  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    JSType  result!=  null?  null  :  result;	  	non-compiled	[CE]  ';'  expected	13	None	add
108	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  Result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  Result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    Result!=  null?  null  :  result;	  	non-compiled	[CE]  not  a  statement	13	None	add
109	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  that);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	33	None	replace
110	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternate);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	33	None	replace
111	[BUG]  [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(result.size());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(result.size());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedHashSet  <  JSType>(result.size());	      result    =    new    HashSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
112	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(result.size());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  TreeSet  <  JSType>(result.size());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(result.size());	      result    =    new    HashSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
113	[BUG]  [BUGGY]  result  =  new  ArrayList  <  JSType>(result.size());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  ArrayList  <  JSType>(result.size());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  ArrayList  <  JSType>(result.size());	      result    =    new    HashSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
114	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(that.size());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  HashSet  <  JSType>(that.size());  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(that.size());	      result    =    new    HashSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	16	3	replace
116	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	16	3	replace
117	[BUG]  [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	16	None	replace
118	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	27	None	add
119	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	27	None	add
120	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	27	None	add
121	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	27	None	add
122	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	27	None	add
123	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	27	None	add
124	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [CE]  cannot  find  symbol  result  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  result	24	None	replace
125	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    return  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	17	None	add
126	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	17	None	add
127	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	17	None	add
128	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	17	None	add
129	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
130	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    Return  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  ';'  expected	17	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	30	3	replace
132	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	30	3	replace
133	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	30	None	replace
134	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	29	None	add
135	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	29	None	add
136	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	29	None	add
137	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	29	None	add
138	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	29	None	add
139	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	29	None	add
140	[BUG]  [BUGGY]  result  =  alternates.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();	      result    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
141	[BUG]  [BUGGY]  result  =  other.build();  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  other.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build();	      result    =    that.build();    	non-compiled	[CE]  cannot  find  symbol  other	5	None	replace
142	[BUG]  [BUGGY]  result  =  that.iterator().next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
143	[BUG]  [BUGGY]  result  =  others.iterator().next();  [CE]  cannot  find  symbol  others  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  others.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  others	32	None	replace
144	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  [CE]  cannot  find  symbol  otherAlternates  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  otherAlternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	32	None	replace
145	[BUG]  [BUGGY]  result  =  alternates.get(result.type).iterator().next();  [CE]  cannot  find  symbol  type  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.get(result.type).iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result.type).iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  type	32	None	replace
146	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.result;  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.result;	  return    result    ==    null?    null    :    result.type;    	non-compiled	[CE]  cannot  find  symbol  result	19	None	replace
147	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.type;  [CE]  cannot  find  symbol  type  [FE]                  AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.type;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.type;	  return    result    ==    null?    null    :    result.type;    	non-compiled	[CE]  cannot  find  symbol  type	19	None	replace
148	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.baseType;  [CE]  cannot  find  symbol  baseType  [FE]                    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.baseType;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.baseType;	  return    result    ==    null?    null    :    result.type;    	non-compiled	[CE]  cannot  find  symbol  baseType	19	None	replace
149	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  Return  result  ==  null?  null  :  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result;  Return  result  ==  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result;    Return  result  ==  null?  null  :  result;	  	non-compiled	[CE]  ';'  expected	11	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	18	3	replace
151	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	18	3	replace
152	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  Return  result!=  null?  null  :  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  Return  result!=  null?  null  :  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    Return  result!=  null?  null  :  result;	  	non-compiled	[CE]  ';'  expected	13	None	add
153	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	25	None	add
154	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	25	None	add
155	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
156	[BUG]  [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	28	None	replace
157	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	29	None	add
158	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	29	None	add
159	[BUG]  [BUGGY]  result  =  this.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build();	      result    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
160	[BUG]  [BUGGY]      result  =  builder.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    ReflectionError  <  UnionType>  builder  =  that.build();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
161	[BUG]  [BUGGY]      result  =  builder.build();  JSType  result  =  builder.build();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  JSType  result  =  builder.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    JSType  result  =  builder.build();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	3	None	add
162	[BUG]  [BUGGY]      result  =  builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    ReflectionError  <  UnionType>  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
163	[BUG]  [BUGGY]      result  =  builder.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  Result  =  builder.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    Result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol  Result	3	None	add
164	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	23	None	add
165	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  JSType  alternates  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  JSType  alternates  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    JSType  alternates  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
166	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    Result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  Result	31	None	add
167	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    JSType  result  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	31	None	add
168	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
169	[BUG]  [BUGGY]  result  =  new  LinkedList  <  JSType>();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  new  LinkedList  <  JSType>();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedList  <  JSType>();	      result    =    new    HashSet    <    JSType>();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	16	3	replace
171	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	16	3	replace
172	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator().next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.keySet().iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
173	[BUG]  [BUGGY]  result  =  alternates.values().next();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.values().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
174	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);	      result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	21	None	replace
175	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.value;  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.value;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.value;	  return    result    ==    null?    null    :    result.type;    	non-compiled	[CE]  cannot  find  symbol  value	19	None	replace
176	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;	  	non-compiled	[CE]  ')'  expected	1	None	add
177	[BUG]  [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
178	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	27	None	add
179	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  results  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  results  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  results  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    results  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  results	9	None	add
180	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE;	  	non-compiled	[CE]  ')'  expected	9	None	add
181	[BUG]  [BUGGY]  result  =  replacements.get(result);  [CE]  cannot  find  symbol  replacements  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  replacements.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  replacements	22	None	replace
182	[BUG]  [BUGGY]  result  =  alternatives.get(result);  [CE]  cannot  find  symbol  alternatives  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternatives.get(result);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternatives.get(result);	      result    =    this.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternatives	22	None	replace
183	[BUG]  [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  it  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  it	7	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	2	replace
185	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	2	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
187	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	12	3	replace
188	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	      result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	21	None	replace
189	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result,  that.type;  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  null  :  result,  that.type;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result,  that.type;	  return    result    ==    null?    null    :    result.type;    	non-compiled	[CE]  ';'  expected	19	None	replace
190	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result;    JSType  result  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	13	None	add
191	[BUG]  [BUGGY]  result  =  this.alternates.build();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.alternates.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.build();	      result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
192	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  not  a  statement	3	None	add
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
194	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
195	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	3	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
197	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
199	[BUG]  [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  return    result!=    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	14	3	replace
201	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  return    result!=    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	14	3	replace
202	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE);  [CE]  cannot  find  symbol  NO_RELATIVE_TYPE  [FE]          AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE);	      result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RELATIVE_TYPE	33	None	replace
203	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	26	None	replace
204	[BUG]  [BUGGY]  result  =  that.alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  that.alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.iterator().next();	      result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  alternates	32	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	        result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	31	3	add
206	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	31	3	add
207	[BUG]  [BUGGY]      result  =  alternates.iterator().next();  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  alternates.iterator().next();  =  alternates.iterator().next();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    alternates.iterator().next();    =  alternates.iterator().next();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
208	[BUG]  [BUGGY]  return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	28	None	replace
209	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT);  [CE]  cannot  find  symbol  NO_RESULT  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT);	      result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT	2	None	replace
210	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  that.alternates.get(result);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  alternate  =  that.alternates.get(result);	  	non-compiled	[CE]  cannot  find  symbol  alternates	15	None	add
211	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  that.alternates.get(result);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  alternates  =  that.alternates.get(result);	  	non-compiled	[CE]  cannot  find  symbol  alternates	15	None	add
212	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  findNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  findNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  findNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
213	[BUG]  [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
214	[BUG]  [BUGGY]  result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
215	[BUG]  [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	      result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
216	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
217	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  that.alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  that.alternates.iterator().next();  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  alternates  =  that.alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  alternates	17	None	add
218	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]      AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  that.alternates.get(result);  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  alternate  =  that.alternates.get(result);	  	non-compiled	[CE]  cannot  find  symbol  alternates	17	None	add
219	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]    }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  1;	  return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	18	None	replace
220	[BUG]  [BUGGY]  result  =  otherAlternates.build();  [CE]  cannot  find  symbol  otherAlternates  [FE]            AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]  result  =  otherAlternates.build();  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.build();	      result    =    that.build();    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	5	None	replace
221	[BUG]  [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {    [BUGGY]      result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
