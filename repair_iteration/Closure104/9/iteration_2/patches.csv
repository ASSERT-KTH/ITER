bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	29	None	add
2	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	29	None	add
3	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	29	None	add
4	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	29	None	add
5	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  ';'  expected	29	None	add
6	[BUG]  [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	31	None	replace
7	[BUG]  [BUGGY]  result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	31	None	replace
8	[BUG]  [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  other	31	None	replace
9	[BUG]  [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(that.size());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(that.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedHashSet  <  JSType>(that.size());	  result    =    new    HashSet    <    JSType>(that.size());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
10	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(that.size());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(that.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(that.size());	  result    =    new    HashSet    <    JSType>(that.size());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
11	[BUG]  [BUGGY]  result  =  new  ArrayList  <  JSType>(that.size());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  ArrayList  <  JSType>(that.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  ArrayList  <  JSType>(that.size());	  result    =    new    HashSet    <    JSType>(that.size());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
12	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	56	None	replace
13	[BUG]  [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	56	None	replace
14	[BUG]  [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	56	None	replace
15	[BUG]  [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  ';'  expected	153	None	replace
16	[BUG]  [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	57	None	replace
17	[BUG]  [BUGGY]  result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	90	None	replace
18	[BUG]  [BUGGY]  JSType  result  =  result  ==  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	90	None	replace
19	[BUG]  [BUGGY]  return  result  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
20	[BUG]  [BUGGY]  return  result!=  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
21	[BUG]  [BUGGY]  return  result  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  ||  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
22	[BUG]  [BUGGY]  return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  that;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  that;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  that;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
23	[BUG]  [BUGGY]  Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	178	None	replace
24	[BUG]  [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	138	None	replace
25	[BUG]  [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	138	None	replace
26	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	93	None	add
27	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	93	None	add
28	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	93	None	add
29	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  ';'  expected	93	None	add
30	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	93	None	add
31	[BUG]  [BUGGY]  Return  result!=  null?  null  :  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    Return    result!=    null?    null    :    result;    	non-compiled	[CE]  ';'  expected	152	None	replace
32	[BUG]  [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  missing  return  statement	197	None	replace
33	[BUG]  [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  missing  return  statement	197	None	replace
34	[BUG]  [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
35	[BUG]  [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
36	[BUG]  [BUGGY]  System.err.println( "Unknown  type: "  +  that.getJSType());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  System.err.println( "Unknown  type: "  +  that.getJSType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	System.err.println( "Unknown  type: "  +  that.getJSType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getJSType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
37	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getJSType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
38	[BUG]  [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getJSType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getJSType());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	25	None	replace
39	[BUG]  [BUGGY]  result.setNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.setNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.setNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
40	[BUG]  [BUGGY]  result.setType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.setType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.setType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
41	[BUG]  [BUGGY]  result.put(JSTypeNative.NO_TYPE,  that);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.put(JSTypeNative.NO_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.put(JSTypeNative.NO_TYPE,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
42	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	61	None	replace
43	[BUG]  [BUGGY]  Result  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
44	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  that);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
45	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  this);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
46	[BUG]  [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	164	None	replace
47	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	135	None	replace
48	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	4	None	replace
49	[BUG]  [BUGGY]  Result  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
50	[BUG]  [BUGGY]  Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
51	[BUG]  [BUGGY]  Result  result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
52	[BUG]  [BUGGY]  result  =  that.alternates.build();  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.alternates.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.build();	  result    =    this.alternates.build();    	non-compiled	[CE]  cannot  find  symbol  alternates	191	None	replace
53	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NULL_TYPE);  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NULL_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  missing  return  statement	78	None	replace
54	[BUG]  [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	154	None	replace
55	[BUG]  [BUGGY]  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  alternate  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  alternate  =  that.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	210	None	replace
56	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  other.alternates.get(result);  [CE]  package  other  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  other.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  other.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  package  other  does  not  exist	210	None	replace
57	[BUG]  [BUGGY]  return  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  alternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	210	None	replace
58	[BUG]  [BUGGY]  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	116	None	replace
59	[BUG]  [BUGGY]  result  =  that.results.get(result);  [CE]  cannot  find  symbol  results  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.results.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.results.get(result);	  result    =    replacements.get(result);    	non-compiled	[CE]  cannot  find  symbol  results	181	None	replace
60	[BUG]  [BUGGY]  result  =  that.get(result);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.get(result);	  result    =    replacements.get(result);    	non-compiled	[CE]  cannot  find  symbol	181	None	replace
61	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType    result    =    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	72	None	replace
62	[BUG]  [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  missing  return  statement	194	None	replace
63	[BUG]  [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  missing  return  statement	194	None	replace
64	[BUG]  [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
65	[BUG]  [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
66	[BUG]  [BUGGY]  JSType  alternates  =  that.alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  alternates  =  that.alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  alternates  =  that.alternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  alternates	217	None	replace
67	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  this.alternates.iterator().next();  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  this.alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  this.alternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  unreachable  statement	217	None	replace
68	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  otherAlternates.iterator().next();  [CE]  cannot  find  symbol  otherAlternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  otherAlternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  otherAlternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	217	None	replace
69	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	102	None	replace
70	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  alternates);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  alternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  alternates);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	102	None	replace
71	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  otherAlternate);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	102	None	replace
72	[BUG]  [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	102	None	replace
73	[BUG]  [BUGGY]  result  =  others.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  others  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  others	213	None	replace
74	[BUG]  [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	193	1	add
76	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	193	1	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	193	2	add
78	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	193	2	add
79	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  Result  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	193	None	add
80	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  illegal  start  of  expression	193	None	add
81	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	193	None	add
82	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  Result  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	193	None	add
83	[BUG]  [BUGGY]  result  =  other.iterator().next();  [CE]  cannot  find  symbol  other  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.iterator().next();	  result    =    others.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  other	143	None	replace
84	[BUG]  [BUGGY]  result  =  otherAlternate.iterator().next();  [CE]  cannot  find  symbol  otherAlternate  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.iterator().next();	  result    =    others.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	143	None	replace
85	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  that);  [CE]  cannot  find  symbol  NO_RELATIVE_TYPE  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  that);	  result    =    getNativeType(JSTypeNative.NO_RELATIVE_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RELATIVE_TYPE	202	None	replace
86	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  NO_RELATIVE_TYPE  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE_TYPE,  otherAlternate);	  result    =    getNativeType(JSTypeNative.NO_RELATIVE_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RELATIVE_TYPE	202	None	replace
87	[BUG]  [BUGGY]  result  =  this.alternates.iterator().next();  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.iterator().next();	          result    =    alternates.iterator().next();    result    =    alternates.iterator().next();    	non-compiled	[CE]  missing  return  statement	34	None	replace
88	[BUG]  [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  other	99	None	replace
89	[BUG]  [BUGGY]  result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
90	[BUG]  [BUGGY]  result  =  this.alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  alternate  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  alternate	99	None	replace
91	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE));	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    getNativeType(JSTypeNative.NO_TYPE));    	non-compiled	[CE]  ';'  expected	63	None	replace
92	[BUG]  [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	70	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
94	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
96	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
97	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  otherAlternate	7	None	add
98	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	7	None	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
100	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
101	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  other	7	None	add
102	[BUG]  [BUGGY]  return  result.getNativeType(0);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(0);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(0);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	130	None	replace
103	[BUG]  [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  missing  return  statement	199	None	replace
104	[BUG]  [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  missing  return  statement	199	None	replace
105	[BUG]  [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
106	[BUG]  [BUGGY]  result  =  otherAlternate.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	199	None	replace
107	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT,  that);  [CE]  cannot  find  symbol  NO_OBJECT  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT,  that);	  result    =    getNativeType(JSTypeNative.NO_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT	41	None	replace
108	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_RELATIVE);  [CE]  cannot  find  symbol  NO_OBJECT_RELATIVE  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_RELATIVE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_RELATIVE);	  result    =    getNativeType(JSTypeNative.NO_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT_RELATIVE	41	None	replace
109	[BUG]  [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType    result    =    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	139	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
111	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
112	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	14	None	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
114	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
115	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  otherAlternate	14	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
117	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	14	2	add
118	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  other	14	None	add
119	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	15	None	replace
120	[BUG]  [BUGGY]  result.setNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.setNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.setNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
121	[BUG]  [BUGGY]  result.put(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.put(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.put(JSTypeNative.NO_OBJECT_TYPE,  that);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
122	[BUG]  [BUGGY]  result.put(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.put(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.put(JSTypeNative.NO_OBJECT_TYPE,  result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
123	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  unreachable  statement	170	None	add
124	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  unreachable  statement	170	None	add
125	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  unreachable  statement	170	None	add
126	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	170	None	add
127	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    Result  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	170	None	add
128	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Result  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    Result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	170	None	add
129	[BUG]  [BUGGY]  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
130	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictNullOrUndefined();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.restrictNullOrUndefined();	  return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
131	[BUG]  [BUGGY]  result  =  alternates.get(that.result).iterator().next();  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(that.result).iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(that.result).iterator().next();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  cannot  find  symbol  result	145	None	replace
132	[BUG]  [BUGGY]  result  =  alternates.get(that.type).iterator().next();  [CE]  cannot  find  symbol  type  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(that.type).iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(that.type).iterator().next();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  cannot  find  symbol  type	145	None	replace
133	[BUG]  [BUGGY]  result  =  alternates.get(that.result.type).iterator().next();  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(that.result.type).iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(that.result.type).iterator().next();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  cannot  find  symbol  result	145	None	replace
134	[BUG]  [BUGGY]  result  =  alternates.get(result.type).iterator();  [CE]  cannot  find  symbol  type  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(result.type).iterator();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result.type).iterator();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  cannot  find  symbol  type	145	None	replace
135	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  0;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  0;	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	219	None	replace
136	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  2;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  2;	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	219	None	replace
137	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)/  1;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)/  1;	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	219	None	replace
138	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  that.toString();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  that.toString();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  that.toString();	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  incompatible  types	219	None	replace
139	[BUG]  [BUGGY]  JSType  alternates  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  alternates  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  alternates  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternates    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
140	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  JSType  alternates  =  others.iterator().next();  [CE]  cannot  find  symbol  others  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  JSType  alternates  =  others.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  JSType  alternates  =  others.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternates    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  others	165	None	replace
141	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  JSType  replacements  =  alternates.iterator().next();  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  JSType  replacements  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  JSType  replacements  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternates    =    alternates.iterator().next();    	non-compiled	[CE]  missing  return  statement	165	None	replace
142	[BUG]  [BUGGY]  result  =  that.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
143	[BUG]  [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
144	[BUG]  [BUGGY]  result  =  other.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  other	177	None	replace
145	[BUG]  [BUGGY]  result  =  builder.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	177	None	replace
146	[BUG]  [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.result;	  result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	156	None	replace
147	[BUG]  [BUGGY]  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	137	None	replace
148	[BUG]  [BUGGY]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
149	[BUG]  [BUGGY]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
150	[BUG]  [BUGGY]  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Result  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	81	None	replace
151	[BUG]  [BUGGY]  result  =  createNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  createNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  createNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
152	[BUG]  [BUGGY]  result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    return    result!=    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	103	None	replace
153	[BUG]  [BUGGY]  result  =  that.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  Result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  Result  =  builder.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
154	[BUG]  [BUGGY]  result  =  otherAlternate.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  otherAlternate  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  Result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  Result  =  builder.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	163	None	replace
155	[BUG]  [BUGGY]  result  =  other.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  other  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.build();  Result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build();  Result  =  builder.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  other	163	None	replace
156	[BUG]  [BUGGY]  result  ==  null?  null  :  result.type;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result.type;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result.type;	  return    result    ==    null?    null    :    result;    result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	88	None	replace
157	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  otherAlternate);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	174	None	replace
158	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  that);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	174	None	replace
159	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  equals);  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  equals);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  equals);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  cannot  find  symbol  equals	174	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	33	2	add
161	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	33	2	add
162	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    Result  =  alternates.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  Result	33	None	add
163	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  equals.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  equals  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  equals.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  equals.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  equals	33	None	add
164	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  others.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  others  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  others.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  others.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  others	33	None	add
165	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternatives.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  alternatives  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  alternatives.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  alternatives.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  alternatives	33	None	add
166	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  =  alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    =  alternates.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
167	[BUG]  [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_TYPE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.getNativeType(JSTypeNative.NO_TYPE);	  result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	42	None	replace
168	[BUG]  [BUGGY]  Results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Results  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    results    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Results	6	None	replace
169	[BUG]  [BUGGY]  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	results  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    results    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  results	6	None	replace
170	[BUG]  [BUGGY]  result  =  createNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  createNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  createNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    results    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
171	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	150	None	add
172	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	150	None	add
173	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  unreachable  statement	150	None	add
174	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  ';'  expected	150	None	add
175	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    Result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	150	None	add
176	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE);  [CE]  cannot  find  symbol  NO_RELATIVE  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE);	  result    =    getNativeType(JSTypeNative.NO_RESULT);    	non-compiled	[CE]  cannot  find  symbol  NO_RELATIVE	209	None	replace
177	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  other.alternates.get(result);  [CE]  package  other  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  other.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  other.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  package  other  does  not  exist	218	None	replace
178	[BUG]  [BUGGY]  return  that.alternates.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  alternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.alternates.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.alternates.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	218	None	replace
179	[BUG]  [BUGGY]  result  =  other.alternates.iterator().next();  [CE]  package  other  does  not  exist  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.alternates.iterator().next();	  result    =    that.alternates.iterator().next();    	non-compiled	[CE]  package  other  does  not  exist	204	None	replace
180	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);  [CE]  cannot  find  symbol  other  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  other	84	None	replace
181	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  equals);  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  equals);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  equals);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  equals	84	None	replace
182	[BUG]  [BUGGY]  result  =  this.iterator().next();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.iterator().next();	  result    =    that.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
183	[BUG]  [BUGGY]  result  =  other.get(result);  [CE]  cannot  find  symbol  other  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.get(result);	  result    =    others.get(result);    	non-compiled	[CE]  cannot  find  symbol  other	75	None	replace
184	[BUG]  [BUGGY]  result  =  otherAlternate.get(result);  [CE]  cannot  find  symbol  otherAlternate  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.get(result);	  result    =    others.get(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	75	None	replace
185	[BUG]  [BUGGY]  JSType  result  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  alternates.iterator().next();	  return    result!=    null?    null    :    result;    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	190	None	replace
186	[BUG]  [BUGGY]  result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();	  return    result!=    null?    null    :    result;    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  not  a  statement	190	None	replace
187	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  JSType  result  =  alternates.iterator().next();	  return    result!=    null?    null    :    result;    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	190	None	replace
188	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    findNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
189	[BUG]  [BUGGY]  Result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    findNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	216	None	replace
190	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    findNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
191	[BUG]  [BUGGY]  result  =  that.findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.findNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.findNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    findNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
192	[BUG]  [BUGGY]  result  =  other.alternates.get(result);  [CE]  package  other  does  not  exist  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.alternates.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.alternates.get(result);	  result    =    otherAlternates.get(result);    	non-compiled	[CE]  package  other  does  not  exist	76	None	replace
193	[BUG]  [BUGGY]  result  =  equals.get(result);  [CE]  cannot  find  symbol  equals  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  equals.get(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  equals.get(result);	  result    =    otherAlternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  equals	76	None	replace
194	[BUG]  [BUGGY]  JSType  result  =  builder.build();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  builder.build();	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	161	None	replace
195	[BUG]  [BUGGY]  null  result  =  builder.build();  JSType  result  =  builder.build();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  null  result  =  builder.build();  JSType  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	null  result  =  builder.build();  JSType  result  =  builder.build();	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  not  a  statement	161	None	replace
196	[BUG]  [BUGGY]  Result  =  builder.build();  [CE]  cannot  find  symbol  Result  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  builder.build();	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  Result	161	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	198	1	add
198	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	198	1	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	198	3	add
200	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	198	3	add
201	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  cannot  find  symbol  Result  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	198	None	add
202	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	non-compiled	[CE]  illegal  start  of  expression	198	None	add
203	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	198	None	add
204	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	198	None	add
205	[BUG]  [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  builder.build();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  ReflectionError  <  UnionType>  builder  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
206	[BUG]  [BUGGY]  ReflectionError  <  UnionType>  builder  =  that.build();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  ReflectionError  <  UnionType>  builder  =  that.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	ReflectionError  <  UnionType>  builder  =  that.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
207	[BUG]  [BUGGY]  result  =  other.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build();  ReflectionError  <  UnionType>  builder  =  that.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol  other	160	None	replace
208	[BUG]  [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  ReflectionError  <  UnionType>  builder  =  that.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
209	[BUG]  [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	128	None	replace
210	[BUG]  [BUGGY]  Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
211	[BUG]  [BUGGY]  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	155	2	replace
213	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	155	2	replace
214	[BUG]  [BUGGY]  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
215	[BUG]  [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
216	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  that);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
217	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  this);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
218	[BUG]  [BUGGY]  result  =  getType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
219	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	115	None	add
220	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	115	None	add
221	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  unreachable  statement	115	None	add
222	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	115	None	add
223	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  ';'  expected	115	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	58	3	add
225	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	compilable	  [FE]  AssertionFailedError  	58	3	add
226	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  Result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    Result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	58	None	add
227	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	58	None	add
228	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
229	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;	  	non-compiled	[CE]  ')'  expected	58	None	add
230	[BUG]  [BUGGY]  result  =  new  java.util.ArrayList  <  JSType>();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  java.util.ArrayList  <  JSType>();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  java.util.ArrayList  <  JSType>();	  result    =    new    LinkedList    <    JSType>();    	non-compiled	[CE]  incompatible  types	169	None	replace
231	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	32	None	replace
232	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  this);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  this);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	32	None	replace
233	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	32	None	replace
234	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  otherAlternate);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  otherAlternate);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	32	None	replace
235	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType    result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	80	None	replace
236	[BUG]  [BUGGY]  Result  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType    result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	196	1	add
238	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	196	1	add
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	196	3	add
240	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	196	3	add
241	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  cannot  find  symbol  Result  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    Result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	196	None	add
242	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  illegal  start  of  expression	196	None	add
243	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    JSType  builder  =  that.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	196	None	add
244	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  cannot  find  symbol  Result  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    Result  =  builder.build();  result  =  builder.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  Result	196	None	add
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	result  =  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	125	3	replace
246	[BUG]  [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.getNativeType(JSTypeNative.NO_TYPE);  return  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	125	3	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	46	2	replace
248	[BUG]  [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	46	2	replace
249	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  this);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  this);	  result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	110	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
251	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
253	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  System.err.println( "Unknown  type:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
254	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  JSType  builder  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  JSType  builder  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    JSType  builder  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	19	None	add
255	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  Result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  Result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    Result  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	non-compiled	[CE]  cannot  find  symbol  Result	19	None	add
256	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  unreachable  statement	186	None	add
257	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  not  a  statement	186	None	add
258	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  unreachable  statement	186	None	add
259	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    Return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  ';'  expected	186	None	add
260	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    Result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  not  a  statement	186	None	add
261	[BUG]  [BUGGY]  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
262	[BUG]  [BUGGY]  JSType  alternates  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  alternates  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  alternates  =  that.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternates    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	211	None	replace
263	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternates    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
264	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  others.get(result);  [CE]  cannot  find  symbol  others  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  others.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  others.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternates    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  others	211	None	replace
265	[BUG]  [BUGGY]  null  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [CE]  unexpected  type  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  null  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	null  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  unexpected  type	167	None	replace
266	[BUG]  [BUGGY]  result  =  that.iterator().next();  JSType  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  JSType  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  JSType  result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
267	[BUG]  [BUGGY]  System.err.println( "Unknown  type: "  +  that.getClass());  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	System.err.println( "Unknown  type: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getClass());    	non-compiled	[CE]  missing  return  statement	20	None	replace
268	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
269	[BUG]  [BUGGY]  result  =  otherAlternate.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [CE]  cannot  find  symbol  otherAlternate  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  System.err.println( "Unknown  type: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	20	None	replace
270	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
271	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
272	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
273	[BUG]  [BUGGY]  result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
274	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
275	[BUG]  [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  ';'  expected	157	None	replace
276	[BUG]  [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
277	[BUG]  [BUGGY]  Result  =  builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  Result  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  Result	162	None	replace
278	[BUG]  [BUGGY]  return  result!=  null?  null  :  result,  that.type;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result,  that.type;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result,  that.type;	  return    result    ==    null?    null    :    result,    that.type;    	non-compiled	[CE]  ';'  expected	189	None	replace
279	[BUG]  [BUGGY]  return  that.type  ==  null?  null  :  result,  that.type;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.type  ==  null?  null  :  result,  that.type;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.type  ==  null?  null  :  result,  that.type;	  return    result    ==    null?    null    :    result,    that.type;    	non-compiled	[CE]  ';'  expected	189	None	replace
280	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.type,  that.type;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.type,  that.type;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.type,  that.type;	  return    result    ==    null?    null    :    result,    that.type;    	non-compiled	[CE]  ';'  expected	189	None	replace
281	[BUG]  [BUGGY]  System.err.println( "Unknown  type: "  +  that.getType());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  System.err.println( "Unknown  type: "  +  that.getType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	System.err.println( "Unknown  type: "  +  that.getType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getType());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
282	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getType());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
283	[BUG]  [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  that.build();  System.err.println( "Unknown  type: "  +  builder.getType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getType());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	24	None	replace
284	[BUG]  [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	49	None	replace
285	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  unreachable  statement	184	None	add
286	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	184	None	add
287	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  unreachable  statement	184	None	add
288	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    JSType  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  ';'  expected	184	None	add
289	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  Result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  Result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    Result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	184	None	add
290	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  Return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  Return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    Return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  ';'  expected	184	None	add
291	[BUG]  [BUGGY]  result  =  that.getAlternates().iterator().next();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getAlternates().iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getAlternates().iterator().next();	  result    =    otherAlternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	compilable	  [FE]  AssertionFailedError  	77	3	add
293	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	compilable	  [FE]  AssertionFailedError  	77	3	add
294	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	77	None	add
295	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	77	None	add
296	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
297	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;	  	non-compiled	[CE]  ')'  expected	77	None	add
298	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    findNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
299	[BUG]  [BUGGY]  Result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    findNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	221	None	replace
300	[BUG]  [BUGGY]  result  =  that.findNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.findNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.findNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    findNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
301	[BUG]  [BUGGY]  result  =  new  UnionTypeBuilder().build();  [CE]  constructor  UnionTypeBuilder  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  UnionTypeBuilder().build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  UnionTypeBuilder().build();	          result    =    builder.build();    result    =    builder.build();    	non-compiled	[CE]  constructor  UnionTypeBuilder  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	18	None	replace
302	[BUG]  [BUGGY]  result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
303	[BUG]  [BUGGY]  result  =  that.alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  alternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.alternates.get(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.get(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  alternates	214	None	replace
304	[BUG]  [BUGGY]  result  =  others.get(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  others  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.get(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.get(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  others	214	None	replace
305	[BUG]  [BUGGY]  result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.get(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    this.alternates.get(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
306	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that.result;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that.result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that.result;	  result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	28	None	replace
307	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  otherAlternate;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  otherAlternate;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  otherAlternate;	  result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	28	None	replace
308	[BUG]  [BUGGY]  result  =  that.result();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
309	[BUG]  [BUGGY]  result  =  otherAlternate.result();  [CE]  cannot  find  symbol  otherAlternate  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	45	None	replace
310	[BUG]  [BUGGY]  result  =  other.result();  [CE]  cannot  find  symbol  other  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol  other	45	None	replace
311	[BUG]  [BUGGY]  result  =  this.builder.result();  [CE]  cannot  find  symbol  builder  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol  builder	45	None	replace
312	[BUG]  [BUGGY]  result  =  alternates.get(that);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(that);	  result    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
313	[BUG]  [BUGGY]  result  =  that.alternates.get(this);  [CE]  cannot  find  symbol  alternates  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.alternates.get(this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.get(this);	  result    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	74	None	replace
314	[BUG]  [BUGGY]  result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
315	[BUG]  [BUGGY]  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
316	[BUG]  [BUGGY]  result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
317	[BUG]  [BUGGY]  result  =  otherAlternate.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
318	[BUG]  [BUGGY]  result  =  otherAlternate.build();  result  =  that.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  result  =  that.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  result  =  that.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
319	[BUG]  [BUGGY]  result  =  others.values().next();  [CE]  cannot  find  symbol  others  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.values().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.values().next();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol  others	173	None	replace
320	[BUG]  [BUGGY]  result  =  that.values().next();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.values().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.values().next();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
321	[BUG]  [BUGGY]  result  =  other.values().next();  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.values().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.values().next();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol  other	173	None	replace
322	[BUG]  [BUGGY]  result  =  replacements.values().next();  [CE]  cannot  find  symbol  replacements  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.values().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.values().next();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol  replacements	173	None	replace
323	[BUG]  [BUGGY]  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType    result    =    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	122	None	replace
324	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType    result    =    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	122	None	replace
325	[BUG]  [BUGGY]  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  it  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  it	183	None	replace
326	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  incompatible  types	151	None	replace
327	[BUG]  [BUGGY]  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  not  a  statement	151	None	replace
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	17	1	add
329	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	17	1	add
330	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  Result  =  builder.build();  result  =  builder.build();  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  Result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    Result  =  builder.build();  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol  Result	17	None	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  if(this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  if(this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
332	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  if(this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  result  =  builder.build();  if(this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    result  =  builder.build();  result  =  builder.build();  if(this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
333	[BUG]  [BUGGY]  result  =  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  alternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  alternates	215	None	replace
334	[BUG]  [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
335	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  variable  alternate  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  alternate  is  already  defined  in  method  meet(JSType)	205	None	add
336	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  Result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    Result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  Result	205	None	add
337	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  variable  alternate  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  alternate  is  already  defined  in  method  meet(JSType)	205	None	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  alternative  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternates.iterator().next();  JSType  alternative  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	205	2	add
339	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  alternative  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  alternative  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternates.iterator().next();  JSType  alternative  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	205	2	add
340	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  equals.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  equals.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  equals.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  equals	205	None	add
341	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  others.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  others  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  others.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  others.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  others	205	None	add
342	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(result.size()  -  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(result.size()  -  1);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(result.size()  -  1);	  result    =    new    TreeSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
343	[BUG]  [BUGGY]  result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  result	117	None	replace
344	[BUG]  [BUGGY]  result  =  equals.build();  [CE]  cannot  find  symbol  equals  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  equals.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  equals.build();	  result    =    other.build();    	non-compiled	[CE]  cannot  find  symbol  equals	141	None	replace
345	[BUG]  [BUGGY]  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    Result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	60	None	replace
346	[BUG]  [BUGGY]  result  =  new  LinkedList  <  JSType>(result.size());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  LinkedList  <  JSType>(result.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedList  <  JSType>(result.size());	  result    =    new    ArrayList    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
347	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  result);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	40	None	replace
348	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternate);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	40	None	replace
349	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternates);  [CE]  cannot  find  symbol  otherAlternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  otherAlternates);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	40	None	replace
350	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  other);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  other);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  other);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  other	40	None	replace
351	[BUG]  [BUGGY]  Result  result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  this.result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Result    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
352	[BUG]  [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  otherAlternate  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	101	None	replace
353	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  null);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
354	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  incompatible  types	94	None	replace
355	[BUG]  [BUGGY]  return  result  ==  null  ||  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  ||  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	94	None	replace
356	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    that.result;    	non-compiled	[CE]  <identifier>  expected	124	None	replace
357	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  that.getClass());  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	System.err.println( "Unexpected  error: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getClass());    	non-compiled	[CE]  missing  return  statement	22	None	replace
358	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
359	[BUG]  [BUGGY]  result  =  otherAlternate.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [CE]  cannot  find  symbol  otherAlternate  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternate.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternate.build();  System.err.println( "Unexpected  error: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	22	None	replace
360	[BUG]  [BUGGY]  result  =  that.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  JSType  alternate  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternate    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
361	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  alternates.iterator().next();  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternate    =    alternates.iterator().next();    	non-compiled	[CE]  missing  return  statement	206	None	replace
362	[BUG]  [BUGGY]  result  =  that.iterator().next();  JSType  alternate  =  other.iterator().next();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  JSType  alternate  =  other.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  JSType  alternate  =  other.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternate    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
363	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.result;  [CE]  cannot  find  symbol  result  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.result;	  return    result!=    null?    null    :    result.type;    	non-compiled	[CE]  cannot  find  symbol  result	147	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
365	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
367	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
368	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	10	None	add
369	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  otherAlternate  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  otherAlternate	10	None	add
370	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  other	10	None	add
371	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  it  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  it	10	None	add
372	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
373	[BUG]  [BUGGY]  Result  =  findNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  findNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  findNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	212	None	replace
374	[BUG]  [BUGGY]  result  =  that.findNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.findNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.findNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
375	[BUG]  [BUGGY]  result  =  createNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  createNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  createNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
376	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.name;  [CE]  cannot  find  symbol  name  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.name;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.name;	  return    result    ==    null?    null    :    result.value;    	non-compiled	[CE]  cannot  find  symbol  name	175	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	compilable	  [FE]  AssertionFailedError  	187	3	replace
378	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	compilable	  [FE]  AssertionFailedError  	187	3	replace
379	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  incompatible  types	187	None	replace
380	[BUG]  [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	13	None	replace
381	[BUG]  [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	13	None	replace
382	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  unreachable  statement	200	None	add
383	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	200	None	add
384	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	200	None	add
385	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  unreachable  statement	200	None	add
386	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  Result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  Result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    Result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	200	None	add
387	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  result);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
388	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	26	None	add
389	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	26	None	add
390	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	26	None	add
391	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	26	None	add
392	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	26	None	add
393	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType  result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	26	None	add
394	[BUG]  [BUGGY]  Result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	11	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
396	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
397	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  Result	1	None	add
398	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	1	None	add
399	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;	  	non-compiled	[CE]  ')'  expected	1	None	add
400	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
401	[BUG]  [BUGGY]  JSType  result  =  result!=  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    JSType    result!=    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	107	None	replace
402	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
403	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
404	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
405	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
406	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
407	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternates);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  otherAlternates);	  result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	109	None	replace
408	[BUG]  [BUGGY]  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
409	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);	  return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	171	None	replace
410	[BUG]  [BUGGY]  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  missing  return  statement	171	None	replace
411	[BUG]  [BUGGY]  Result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    Result!=    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	108	None	replace
412	[BUG]  [BUGGY]  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	3	None	replace
413	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NULL_OBJECT_TYPE);  [CE]  cannot  find  symbol  NULL_OBJECT_TYPE  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NULL_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NULL_OBJECT_TYPE);	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NULL_OBJECT_TYPE	3	None	replace
414	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
415	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
416	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  result  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
417	[BUG]  [BUGGY]  result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
418	[BUG]  [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
419	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator(),  that.next();  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().iterator(),  that.next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator(),  that.next();	  result    =    alternates.keySet().iterator().next();    	non-compiled	[CE]  ';'  expected	172	None	replace
420	[BUG]  [BUGGY]  result  =  others.keySet().iterator().next();  [CE]  cannot  find  symbol  others  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.keySet().iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.keySet().iterator().next();	  result    =    alternates.keySet().iterator().next();    	non-compiled	[CE]  cannot  find  symbol  others	172	None	replace
421	[BUG]  [BUGGY]  result  =  that.keySet().iterator().next();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.keySet().iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.keySet().iterator().next();	  result    =    alternates.keySet().iterator().next();    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
422	[BUG]  [BUGGY]  result  =  other.keySet().iterator().next();  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.keySet().iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.keySet().iterator().next();	  result    =    alternates.keySet().iterator().next();    	non-compiled	[CE]  cannot  find  symbol  other	172	None	replace
423	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(that.alternates);  [CE]  cannot  find  symbol  alternates  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(that.alternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(that.alternates);	  result    =    new    TreeSet    <    JSType>();    	non-compiled	[CE]  cannot  find  symbol  alternates	96	None	replace
424	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(that);  [CE]  no  suitable  constructor  found  for  TreeSet(JSType)  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(that);	  result    =    new    TreeSet    <    JSType>();    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(JSType)	96	None	replace
425	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that.result;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that.result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that.result;	  result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	133	None	replace
426	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  otherAlternate;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  otherAlternate;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  otherAlternate;	  result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	133	None	replace
427	[BUG]  [BUGGY]  result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	48	None	replace
428	[BUG]  [BUGGY]  result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	48	None	replace
429	[BUG]  [BUGGY]  Result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    Result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	91	None	replace
430	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  Result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  Result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  Result!=  null?  null  :  result;	  return    result    ==    null?    null    :    result;    Result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	91	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
432	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
434	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  System.err.println( "Unexpected  error:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
435	[BUG]  [BUGGY]  Result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  Result	166	None	replace
436	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  Result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  otherAlternates  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternates.iterator().next();  Result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();  Result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	166	None	replace
437	[BUG]  [BUGGY]  Results  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Results  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Results  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Results  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    results    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Results	179	None	replace
438	[BUG]  [BUGGY]  results  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  results  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  results  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	results  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    results    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  results	179	None	replace
439	[BUG]  [BUGGY]  result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  this.isObject()  &&  builder.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	195	None	replace
440	[BUG]  [BUGGY]  result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	195	None	replace
441	[BUG]  [BUGGY]  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	195	None	replace
442	[BUG]  [BUGGY]  result  =  builder.build(result,  that);  [CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(result,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(result,  that);	  result    =    builder.build(result);    	non-compiled	[CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	44	None	replace
443	[BUG]  [BUGGY]  result  =  builder.build(that);  [CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(that);	  result    =    builder.build(result);    	non-compiled	[CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	44	None	replace
444	[BUG]  [BUGGY]  result  =  builder.build(that,  result);  [CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(that,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(that,  result);	  result    =    builder.build(result);    	non-compiled	[CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	44	None	replace
445	[BUG]  [BUGGY]  result  =  builder.build(otherAlternate,  result);  [CE]  cannot  find  symbol  otherAlternate  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(otherAlternate,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(otherAlternate,  result);	  result    =    builder.build(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	44	None	replace
446	[BUG]  [BUGGY]  result  =  builder.build(result,  otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(result,  otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(result,  otherAlternate);	  result    =    builder.build(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	44	None	replace
447	[BUG]  [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	71	None	replace
448	[BUG]  [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	71	None	replace
449	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  result);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	64	None	replace
450	[BUG]  [BUGGY]  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  return  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  that.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	168	3	replace
452	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	168	3	replace
453	[BUG]  [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  builder.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
454	[BUG]  [BUGGY]  return  this.build().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  this.build().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  this.build().getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
455	[BUG]  [BUGGY]  result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	127	None	replace
456	[BUG]  [BUGGY]  result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	127	None	replace
457	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  2;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  2;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	188	None	replace
458	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  builder.build();  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  builder.build();	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	188	None	replace
459	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  0;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  0;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  0;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	188	None	replace
460	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that.result;  [CE]  cannot  find  symbol  result  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that.result;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that.result;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  cannot  find  symbol  result	188	None	replace
461	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.null;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    that.result;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
462	[BUG]  [BUGGY]  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
463	[BUG]  [BUGGY]  result  =  that.iterator().next();  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.iterator().next();  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.iterator().next();  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
464	[BUG]  [BUGGY]  result  =  otherAlternates.iterator().next();  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  otherAlternates.iterator().next();  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  otherAlternates.iterator().next();  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
465	[BUG]  [BUGGY]  result  =  alternates.get(result.size()  -  1);  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(result.size()  -  1);  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result.size()  -  1);  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
466	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  that.getMessage());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  that.getMessage());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	System.err.println( "Unexpected  error: "  +  that.getMessage());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getMessage());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
467	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getMessage());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
468	[BUG]  [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  that.build();  System.err.println( "Unexpected  error: "  +  builder.getMessage());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getMessage());    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	23	None	replace
469	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined;  [CE]  cannot  find  symbol  restrictByNotNullOrUndefined  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined;	  return    result    ==    null?    null    :    result.result;    	non-compiled	[CE]  cannot  find  symbol  restrictByNotNullOrUndefined	146	None	replace
470	[BUG]  [BUGGY]  return  result  >=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  >=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  >=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	30	None	replace
471	[BUG]  [BUGGY]  Results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  Results  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    results    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Results	82	None	replace
472	[BUG]  [BUGGY]  results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  results  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	results  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    results    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  results	82	None	replace
473	[BUG]  [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(result);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  LinkedHashSet  <  JSType>(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  LinkedHashSet  <  JSType>(result);	  result    =    new    HashSet    <    JSType>(result);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
474	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(result);  [CE]  no  suitable  constructor  found  for  TreeSet(JSType)  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(result);	  result    =    new    HashSet    <    JSType>(result);    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(JSType)	98	None	replace
475	[BUG]  [BUGGY]  result  =  new  ArrayList  <  JSType>(result);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  ArrayList  <  JSType>(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  ArrayList  <  JSType>(result);	  result    =    new    HashSet    <    JSType>(result);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
476	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(result,  that);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  HashSet  <  JSType>(result,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(result,  that);	  result    =    new    HashSet    <    JSType>(result);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
477	[BUG]  [BUGGY]  Return  result  ==  null?  null  :  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Return  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Return  result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    Return    result    ==    null?    null    :    result;    	non-compiled	[CE]  ';'  expected	149	None	replace
478	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result;	  return    result    ==    null?    null    :    result;    Return    result    ==    null?    null    :    result;    	non-compiled	[CE]  incompatible  types	149	None	replace
479	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	131	None	add
480	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	131	None	add
481	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	131	None	add
482	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  not  a  statement	131	None	add
483	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return  result  ==  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  unreachable  statement	131	None	add
484	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType  result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	131	None	add
485	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
486	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  this,  result);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	85	None	replace
487	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  results);  [CE]  cannot  find  symbol  results  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  results);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  results);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  cannot  find  symbol  results	85	None	replace
488	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  builder);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  builder);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  builder);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
489	[BUG]  [BUGGY]  result  =  result.build();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.build();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.build();	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	47	2	replace
491	[BUG]  [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	47	2	replace
492	[BUG]  [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	47	None	replace
493	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType    result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	80	None	replace
494	[BUG]  [BUGGY]  result  =  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null  &&  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
495	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  Result  {  null?  null  :  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  Result  {  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  Result  {  null?  null  :  result;	  return    result    ==    null?    null    :    result;    Result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	91	None	replace
496	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  Result  <  null?  null  :  result;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  Result  <  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  Result  <  null?  null  :  result;	  return    result    ==    null?    null    :    result;    Result    ==    null?    null    :    result;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
497	[BUG]  [BUGGY]  result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	195	None	replace
498	[BUG]  [BUGGY]  result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  not  a  statement	195	None	replace
499	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  no);  [CE]  cannot  find  symbol  no  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  no);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  no);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternates);    	non-compiled	[CE]  cannot  find  symbol  no	86	None	replace
500	[BUG]  [BUGGY]  result  ==  null?  null  :  result;  return  result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result;  return  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result;  return  result!=  null?  null  :  result;	  return    result    ==    null?    null    :    result;    return    result!=    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	89	None	replace
501	[BUG]  [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  {  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	71	None	replace
502	[BUG]  [BUGGY]  result  =  replacements.iterator().next();  [CE]  cannot  find  symbol  replacements  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.iterator().next();	  result    =    others.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  replacements	143	None	replace
503	[BUG]  [BUGGY]  result  =  alternates.iterator(),  that.next();  JSType  alternates  =  alternates.iterator().next();  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator(),  that.next();  JSType  alternates  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator(),  that.next();  JSType  alternates  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternates    =    alternates.iterator().next();    	non-compiled	[CE]  ';'  expected	165	None	replace
504	[BUG]  [BUGGY]  result  =  alternates.iterator();  JSType  alternates  =  alternates.iterator().next();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator();  JSType  alternates  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator();  JSType  alternates  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternates    =    alternates.iterator().next();    	non-compiled	[CE]  incompatible  types	165	None	replace
505	[BUG]  [BUGGY]  result  =  this.builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  builder	117	None	replace
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	198	1	add
507	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	198	1	add
508	[BUG]  [BUGGY]  =  getNativeType(JSTypeNative.NO_TYPE,  result);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  =  getNativeType(JSTypeNative.NO_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	=  getNativeType(JSTypeNative.NO_TYPE,  result);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
510	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
511	[BUG]  [BUGGY]  result  =  builder.build(result,  this);  [CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(result,  this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(result,  this);	  result    =    builder.build(result);    	non-compiled	[CE]  method  build  in  class  UnionTypeBuilder  cannot  be  applied  to  given  types;	44	None	replace
512	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE,  that);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	187	None	replace
513	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator().next();  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().iterator().next();  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator().next();  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
514	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getMessage());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getMessage());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unexpected  error: "  +  that.getMessage());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getMessage());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
515	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  reverse);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  that,  reverse);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  reverse	64	None	replace
516	[BUG]  [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    Return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	164	None	replace
517	[BUG]  [BUGGY]  result  =  new  ArrayList  <  JSType>(alternates.size());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  ArrayList  <  JSType>(alternates.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  ArrayList  <  JSType>(alternates.size());	  result    =    new    ArrayList    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
518	[BUG]  [BUGGY]  Result  result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  builder.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
519	[BUG]  [BUGGY]  result  =  replacements.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  replacements  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  replacements	215	None	replace
520	[BUG]  [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  {  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	138	None	replace
521	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  JSType  builder  =  builder.build();  result  =  builder.build();  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  JSType  builder  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    JSType  builder  =  builder.build();  result  =  builder.build();	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	17	None	add
522	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  JSType  result  =  builder.build();  result  =  builder.build();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  JSType  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    JSType  result  =  builder.build();  result  =  builder.build();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	17	None	add
523	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  =  builder.build();  result  =  builder.build();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    =  builder.build();  result  =  builder.build();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
524	[BUG]  [BUGGY]  result  =  that.alternates.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.alternates.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.alternates.iterator().next();  for(JSType  alternates  :  alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
525	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
526	[BUG]  [BUGGY]  result  =  alternates.build();  Result  =  alternates.build();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build();  Result  =  alternates.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();  Result  =  alternates.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
527	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	171	None	replace
528	[BUG]  [BUGGY]  Result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  Result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	127	None	replace
529	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	193	None	add
530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	193	1	add
531	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();	  	compilable	  [FE]  AssertionFailedError  	193	1	add
532	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result;  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result;	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	9	None	replace
533	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  Return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    Return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  ';'  expected	170	None	add
534	[BUG]  [BUGGY]  result  =  replacements.build();  [CE]  cannot  find  symbol  replacements  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.build();	  result    =    otherAlternates.build();    	non-compiled	[CE]  cannot  find  symbol  replacements	220	None	replace
535	[BUG]  [BUGGY]  result  =  replacement.build();  [CE]  cannot  find  symbol  replacement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacement.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacement.build();	  result    =    otherAlternates.build();    	non-compiled	[CE]  cannot  find  symbol  replacement	220	None	replace
536	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_OBJECT_TYPE);  [CE]  cannot  find  symbol  NO_RELATIVE_OBJECT_TYPE  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RELATIVE_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RELATIVE_OBJECT_TYPE);	  result    =    getNativeType(JSTypeNative.NO_RELATIVE_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_RELATIVE_OBJECT_TYPE	202	None	replace
537	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);  [CE]  cannot  find  symbol  otherAlternates  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  otherAlternates);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	102	None	replace
538	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  reverse);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  reverse);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  reverse	83	None	replace
539	[BUG]  [BUGGY]  result!=  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result!=  null?  null  :  result;  JSType  result  =  alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result!=  null?  null  :  result;  JSType  result  =  alternates.iterator().next();	  return    result!=    null?    null    :    result;    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  not  a  statement	190	None	replace
540	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE;  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE;  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  ')'  expected	58	None	add
541	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    Return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	131	None	add
542	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  that;	  	non-compiled	[CE]  unreachable  statement	131	None	add
543	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(result.keySet());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(result.keySet());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(result.keySet());	  result    =    new    TreeSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
544	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE;	  	non-compiled	[CE]  ')'  expected	10	None	add
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
546	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	compilable	  [FE]  AssertionFailedError  	10	2	add
547	[BUG]  [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    that.result;    	non-compiled	[CE]  cannot  find  symbol  value	124	None	replace
548	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT,  result);  [CE]  cannot  find  symbol  NO_OBJECT  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT,  result);	  result    =    getNativeType(JSTypeNative.NO_OBJECT);    	non-compiled	[CE]  cannot  find  symbol  NO_OBJECT	41	None	replace
549	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  that;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	188	None	replace
550	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  alternates;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  alternates;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)+  alternates;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	188	None	replace
551	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE;  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  ')'  expected	77	None	add
552	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  that);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    findNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
553	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternate  =  that.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	218	None	replace
554	[BUG]  [BUGGY]  result  =  this.builder.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  builder  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  builder	31	None	replace
555	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    JSType  result  =  alternates.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	205	None	add
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  substitute  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternates.iterator().next();  JSType  substitute  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	205	3	add
557	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  substitute  =  alternates.iterator().next();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternates.iterator().next();  JSType  substitute  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternates.iterator().next();  JSType  substitute  =  alternates.iterator().next();	  	compilable	  [FE]  AssertionFailedError  	205	3	add
558	[BUG]  [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  this.build();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  ReflectionError  <  UnionType>  builder  =  this.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  ReflectionError  <  UnionType>  builder  =  this.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
559	[BUG]  [BUGGY]  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    	non-compiled	[CE]  not  a  statement	201	None	replace
560	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  reverse);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  reverse);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  reverse	84	None	replace
561	[BUG]  [BUGGY]  result  =  alternates.iterator();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator();	          result    =    alternates.iterator().next();    result    =    alternates.iterator().next();    	non-compiled	[CE]  incompatible  types	34	None	replace
562	[BUG]  [BUGGY]  result  =  iterator().next();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  iterator().next();	          result    =    alternates.iterator().next();    result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
563	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  that.alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  that.alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  that.alternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  alternates	217	None	replace
564	[BUG]  [BUGGY]  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
565	[BUG]  [BUGGY]  result  =  others.build();  [CE]  cannot  find  symbol  others  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  others.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  others.build();	  result    =    this.alternates.build();    	non-compiled	[CE]  cannot  find  symbol  others	191	None	replace
566	[BUG]  [BUGGY]  result  =  alternates.values().iterator().next();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.values().iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().iterator().next();	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    result    =    alternates.iterator().next();    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
567	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  this,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  this,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  this,  that);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	40	None	replace
568	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  reverse	40	None	replace
569	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  result    =    getNativeType(JSTypeNative.NO_RESULT);    	non-compiled	[CE]  missing  return  statement	209	None	replace
570	[BUG]  [BUGGY]  result  ==  null?  null  :  result;  return  result  ==  null?  null  :  result;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result;  return  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result;  return  result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    return    result    ==    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	87	None	replace
571	[BUG]  [BUGGY]  Result  result  =  builder.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  result  =  builder.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  result  =  builder.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Result    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
572	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  this);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  this);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  this);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	174	None	replace
573	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  equals);  [CE]  cannot  find  symbol  equals  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  equals);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  equals);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  cannot  find  symbol  equals	174	None	replace
574	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;	          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    	non-compiled	[CE]  ')'  expected	176	None	replace
575	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternate  =  that.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternate    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	210	None	replace
576	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  this,  result);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    this);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	65	None	replace
577	[BUG]  [BUGGY]  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [CE]  cannot  find  symbol  Result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    this);    	non-compiled	[CE]  cannot  find  symbol  Result	65	None	replace
578	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	37	None	replace
579	[BUG]  [BUGGY]  result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
580	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	161	None	replace
581	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	161	None	replace
582	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  return  result;  }  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  return  result;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  builder.build();  JSType  result  =  builder.build();  }  else  {  return  result;  }	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	161	None	replace
583	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  Return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  Return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    Return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  ';'  expected	200	None	add
584	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    JSType  return  result!=  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	200	None	add
585	[BUG]  [BUGGY]  result  =  new  java.util.ArrayList  <  JSType>(result.size());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  java.util.ArrayList  <  JSType>(result.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  java.util.ArrayList  <  JSType>(result.size());	  result    =    new    LinkedHashSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
586	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  alternates);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  alternates);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  alternates);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	32	None	replace
587	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  that,  reverse);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  reverse	32	None	replace
588	[BUG]  [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  builder.getNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  builder.getNativeType(JSTypeNative.NO_TYPE,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
589	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getJSType());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getJSType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getJSType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getJSType());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
590	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;	  	non-compiled	[CE]  ')'  expected	14	None	add
591	[BUG]  [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  {  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  {  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  not  a  statement	53	None	replace
592	[BUG]  [BUGGY]  result  =  this.builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  System.err.println( "Unexpected  error: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol  builder	22	None	replace
593	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	90	None	replace
594	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	90	None	replace
595	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  variable  builder  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    JSType  builder  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  variable  builder  is  already  defined  in  method  meet(JSType)	196	None	add
596	[BUG]  [BUGGY]  result  =  replacements.get(that);  [CE]  cannot  find  symbol  replacements  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.get(that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.get(that);	  result    =    replacements.get(result);    	non-compiled	[CE]  cannot  find  symbol  replacements	181	None	replace
597	[BUG]  [BUGGY]  result  =  replacements.get(otherAlternate);  [CE]  cannot  find  symbol  otherAlternate  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.get(otherAlternate);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.get(otherAlternate);	  result    =    replacements.get(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternate	181	None	replace
598	[BUG]  [BUGGY]  result  =  replacements.get(otherAlternates);  [CE]  cannot  find  symbol  otherAlternates  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacements.get(otherAlternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacements.get(otherAlternates);	  result    =    replacements.get(result);    	non-compiled	[CE]  cannot  find  symbol  otherAlternates	181	None	replace
599	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	136	None	replace
600	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;	  result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	28	None	replace
601	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(alternates.size());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  HashSet  <  JSType>(alternates.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(alternates.size());	  result    =    new    HashSet    <    JSType>(that.size());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
602	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result,  that.type;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result,  that.type;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result,  that.type;	  return    result    ==    null?    null    :    result,    that.type;    	non-compiled	[CE]  	189	None	replace
603	[BUG]  [BUGGY]  result  =  alternates.get(result.name).iterator().next();  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(result.name).iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result.name).iterator().next();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  cannot  find  symbol  name	145	None	replace
604	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getType());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getType());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unknown  type: "  +  that.getType());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getType());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
605	[BUG]  [BUGGY]  result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
606	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  for(JSType  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
607	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  that;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  that;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  that;	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	219	None	replace
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
609	[BUG]  [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
610	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result  ==  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	if(result  ==  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
611	[BUG]  [BUGGY]  if(result  ==  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result  ==  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result  ==  null)  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
612	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  Return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    Return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  	non-compiled	[CE]  ';'  expected	26	None	add
613	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  that;	  	non-compiled	[CE]  unreachable  statement	26	None	add
614	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	115	None	add
615	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	1	None	add
616	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  ')'  expected	1	None	add
617	[BUG]  [BUGGY]  result  =  alternates.result();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
618	[BUG]  [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	69	None	replace
619	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  that.value;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    that.result;    	non-compiled	[CE]  cannot  find  symbol  value	16	None	replace
620	[BUG]  [BUGGY]  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  Result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  Result	48	None	replace
621	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  that.alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternates    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol  alternates	211	None	replace
622	[BUG]  [BUGGY]  result  =  locateNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  locateNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  locateNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
623	[BUG]  [BUGGY]  result  =  alternates.values().ext();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.values().ext();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().ext();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
624	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  JSType  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    JSType  return  result  ==  null?  null  :  result.restrictByNotNullOrUndefined();	  	non-compiled	[CE]  not  a  statement	184	None	add
625	[BUG]  [BUGGY]  result  =  this.builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [CE]  cannot  find  symbol  builder  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  System.err.println( "Unknown  type: "  +  that.getClass());	          result    =    builder.build();    System.err.println(   "Unknown    type:   "    +    that.getClass());    	non-compiled	[CE]  cannot  find  symbol  builder	20	None	replace
626	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(result.alternates);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  HashSet  <  JSType>(result.alternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(result.alternates);	  result    =    new    HashSet    <    JSType>(result);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
627	[BUG]  [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build().getNativeType(JSTypeNative.NO_TYPE);	  result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
628	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().iterator();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator();	  result    =    alternates.keySet().iterator().next();    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
629	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.objectType;  [CE]  cannot  find  symbol  objectType  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.objectType;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.objectType;	  return    result    ==    null?    null    :    result.baseType;    	non-compiled	[CE]  cannot  find  symbol  objectType	148	None	replace
630	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(alternates);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(alternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(alternates);	  result    =    new    TreeSet    <    JSType>();    	non-compiled	[CE]  incompatible  types	96	None	replace
631	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	150	None	add
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
633	[BUG]  [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	compilable	  [FE]  AssertionFailedError  	51	2	replace
634	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  return  result!=  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  not  a  statement	29	None	add
635	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result;  JSType  result  =  result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    JSType    result!=    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	107	None	replace
636	[BUG]  [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result;  JSType  result  =  result  ==  null?  null  :  result;	  return    result!=    null?    null    :    result;    JSType    result!=    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	107	None	replace
637	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  ';'  expected	93	None	add
638	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator().next();  Result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().iterator().next();  Result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator().next();  Result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
639	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  Result  =  others.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  Result  =  others.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  Result  =  others.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  Result	166	None	replace
640	[BUG]  [BUGGY]  result  =  alternates.iterator();  Result  =  alternates.iterator().next();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator();  Result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator();  Result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  incompatible  types	166	None	replace
641	[BUG]  [BUGGY]  result  =  alternates.keySet().iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().iterator().next();  JSType  alternate  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternate    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
642	[BUG]  [BUGGY]  result  =  alternates.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
643	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE)+  1;	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    getNativeType(JSTypeNative.NO_TYPE));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
644	[BUG]  [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);	  result    =    this.build().getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
645	[BUG]  [BUGGY]  result  =  equals.iterator().next();  [CE]  cannot  find  symbol  equals  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  equals.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  equals.iterator().next();	  result    =    others.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  equals	143	None	replace
646	[BUG]  [BUGGY]  result  =  alternates.iterator().next();  Result  =  replacements.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.iterator().next();  Result  =  replacements.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.iterator().next();  Result  =  replacements.iterator().next();	          result    =    alternates.iterator().next();    Result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  Result	166	None	replace
647	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)/  1;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)/  1;	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	188	None	replace
648	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  alternates  =  alternates.get(result);	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType    alternates    =    that.alternates.get(result);    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
649	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternatives.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [CE]  cannot  find  symbol  alternatives  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    JSType  alternate  =  alternates.iterator().next();  result  =  alternatives.iterator().next();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        JSType    alternate    =    alternates.iterator().next();    result  =  alternatives.iterator().next();  JSType  alternate  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  alternatives	205	None	add
650	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  alternate  =  that.alternates.get(result);  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  alternate  =  that.alternates.get(result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  alternate  =  that.alternates.get(result);	  	non-compiled	[CE]  cannot  find  symbol  alternates	170	None	add
651	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	77	None	add
652	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.UNKNOWN_TYPE);        result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE);  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
653	[BUG]  [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  result.getNativeType(JSTypeNative.NO_TYPE,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	128	None	replace
654	[BUG]  [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
655	[BUG]  [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);	  result    =    this.alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
656	[BUG]  [BUGGY]  result  =  this.alternates.toArray(result);  [CE]  no  suitable  method  found  for  toArray(JSType)  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.toArray(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.toArray(result);	  result    =    this.alternates.build();    	non-compiled	[CE]  no  suitable  method  found  for  toArray(JSType)	191	None	replace
657	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  it  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  it	7	None	add
658	[BUG]  [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  result);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	101	None	replace
659	[BUG]  [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  other	101	None	replace
660	[BUG]  [BUGGY]  return  that.build();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.build();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.build();	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    that.build();    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
661	[BUG]  [BUGGY]  result  =  alternates.size();  JSType  alternate  =  alternates.iterator().next();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.size();  JSType  alternate  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.size();  JSType  alternate  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    alternate    =    alternates.iterator().next();    	non-compiled	[CE]  incompatible  types	206	None	replace
662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result.isUnknownType()?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null  ||  result.isUnknownType()?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	151	3	replace
663	[BUG]  [BUGGY]  return  result  ==  null  ||  result.isUnknownType()?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result.isUnknownType()?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  ||  result.isUnknownType()?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	151	3	replace
664	[BUG]  [BUGGY]  result  =  alternates.values().next();  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.values().next();  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.values().next();  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
665	[BUG]  [BUGGY]  result  =  alternates.get(result);  =  alternates.iterator().next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(result);  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result);  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    =    alternates.iterator().next();    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
666	[BUG]  [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
667	[BUG]  [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.getNativeType(JSTypeNative.NO_TYPE);	  result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
668	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  null?  null  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  JSType  result  =  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	90	None	replace
669	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  null? "null "  :  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result;  JSType  result  =  null? "null "  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result;  JSType  result  =  null? "null "  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	90	None	replace
670	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result;  JSType  result  ==  null?  null  :  result;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result;  JSType  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result;  JSType  result  ==  null?  null  :  result;	  return    result    ==    null?    null    :    result;    JSType    result    ==    null?    null    :    result;    	non-compiled	[CE]  	90	None	replace
671	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	27	None	replace
672	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_TYPE);    JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  ';'  expected	150	None	add
673	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE)+  3;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE)+  3;	  return    result.getNativeType(JSTypeNative.NO_TYPE)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	219	None	replace
674	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  alternates);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  alternates);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE,  that,  alternates);	  result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	83	None	replace
675	[BUG]  [BUGGY]  result  =  this.builder.build();  Result  =  builder.build();  [CE]  cannot  find  symbol  builder  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  Result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  Result  =  builder.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  builder	163	None	replace
676	[BUG]  [BUGGY]  result  =  other.build();  Result  =  result.build();  [CE]  cannot  find  symbol  other  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.build();  Result  =  result.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build();  Result  =  result.build();	          result    =    builder.build();    Result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  other	163	None	replace
677	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  equals);  [CE]  cannot  find  symbol  equals  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE,  equals);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE,  equals);	  result    =    getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  equals	40	None	replace
678	[BUG]  [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE;  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
679	[BUG]  [BUGGY]  result  =  this.alternates.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.build();  this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
680	[BUG]  [BUGGY]  result  =  that.build();  this.isObject()  &&  this.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  this.isObject()  &&  this.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  this.isObject()  &&  this.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    this.isObject()    &&    that.isObject())    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
681	[BUG]  [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.iterator().next();  for(JSType  alternates  :  that.alternates)  {  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    alternates.iterator().next();    for(JSType    alternates    :    that.alternates)    {    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
682	[BUG]  [BUGGY]  result.put(JSTypeNative.NO_TYPE,  result);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.put(JSTypeNative.NO_TYPE,  result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.put(JSTypeNative.NO_TYPE,  result);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
683	[BUG]  [BUGGY]  result.removeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result.removeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result.removeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
684	[BUG]  [BUGGY]  Result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  Result  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  Result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	Result  =  alternates.iterator().next();  JSType  result  =  alternates.iterator().next();	          result    =    alternates.iterator().next();    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  Result	167	None	replace
685	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	198	None	add
686	[BUG]  [BUGGY]  result  ==  null?  null  :  result;  Result!=  null?  null  :  result;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  null  :  result;  Result!=  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  null  :  result;  Result!=  null?  null  :  result;	  return    result!=    null?    null    :    result;    Result!=    null?    null    :    result;    	non-compiled	[CE]  not  a  statement	108	None	replace
687	[BUG]  [BUGGY]  result  =  builder.build(result,  equals);  [CE]  cannot  find  symbol  equals  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  builder.build(result,  equals);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  builder.build(result,  equals);	  result    =    builder.build(result);    	non-compiled	[CE]  cannot  find  symbol  equals	44	None	replace
688	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(alternates.size());  [CE]  no  suitable  constructor  found  for  TreeSet(int)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(alternates.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(alternates.size());	  result    =    new    TreeSet    <    JSType>();    	non-compiled	[CE]  no  suitable  constructor  found  for  TreeSet(int)	96	None	replace
689	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NO_RESULT_TYPE):  result;	  result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  not  a  statement	28	None	replace
690	[BUG]  [BUGGY]  result  =  this.builder.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [CE]  cannot  find  symbol  builder  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  ReflectionError  <  UnionType>  builder  =  that.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  ReflectionError  <  UnionType>  builder  =  that.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    builder    =    that.build();    	non-compiled	[CE]  cannot  find  symbol  builder	160	None	replace
691	[BUG]  [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
692	[BUG]  [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  other  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  other	9	None	replace
693	[BUG]  [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  Result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    Result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
694	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  other);  [CE]  cannot  find  symbol  other  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  other);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  other);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  other	64	None	replace
695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result  ==  null  ||  result  ==  null?  null  :  result;	  return    result!=    null?    null    :    result;    return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	105	1	replace
696	[BUG]  [BUGGY]  return  result  ==  null  ||  result  ==  null?  null  :  result;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result  ==  null?  null  :  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  ||  result  ==  null?  null  :  result;	  return    result!=    null?    null    :    result;    return    result    ==    null?    null    :    result;    	compilable	  [FE]  AssertionFailedError  	105	1	replace
697	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  that.alternates.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  that.alternates.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  that.alternates.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  alternates	33	None	add
698	[BUG]  [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  replacements.iterator().next();  result  =  alternates.iterator().next();  [CE]  cannot  find  symbol  replacements  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    alternates.iterator().next();    result  =  alternates.iterator().next();  result  =  replacements.iterator().next();  result  =  alternates.iterator().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        alternates.iterator().next();        result    =    alternates.iterator().next();    result  =  replacements.iterator().next();  result  =  alternates.iterator().next();	  	non-compiled	[CE]  cannot  find  symbol  replacements	33	None	add
699	[BUG]  [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  if(result!=  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
700	[BUG]  [BUGGY]  result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
701	[BUG]  [BUGGY]  result  =  alternates.toArray(result);  [CE]  no  suitable  method  found  for  toArray(JSType)  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.toArray(result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.toArray(result);	  result    =    alternates.build();    	non-compiled	[CE]  no  suitable  method  found  for  toArray(JSType)	140	None	replace
702	[BUG]  [BUGGY]  result  =  alternates.toArray(new  Set());  [CE]  Set  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.toArray(new  Set());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.toArray(new  Set());	  result    =    alternates.build();    	non-compiled	[CE]  Set  is  abstract;  cannot  be  instantiated	140	None	replace
703	[BUG]  [BUGGY]  result  =  equals.result();  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  equals.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  equals.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol  equals	45	None	replace
704	[BUG]  [BUGGY]  result  =  replacement.result();  [CE]  cannot  find  symbol  replacement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  replacement.result();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  replacement.result();	  result    =    builder.result();    	non-compiled	[CE]  cannot  find  symbol  replacement	45	None	replace
705	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.NO_TYPE,  that);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.NO_TYPE,  that);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.NO_TYPE,  that);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    findNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
706	[BUG]  [BUGGY]  result  =  result!=  null?  result.getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result!=  null?  result.getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result!=  null?  result.getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	127	None	replace
707	[BUG]  [BUGGY]  result  =  result.restrictByNotNullOrUndefined();  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  result.restrictByNotNullOrUndefined();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    result    =    result.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	127	None	replace
708	[BUG]  [BUGGY]  result  =  iter.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  iter  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  iter.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  iter.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result    =    it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  iter	183	None	replace
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null  &&  result.isUnknownType()?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null  &&  result.isUnknownType()?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	208	1	replace
710	[BUG]  [BUGGY]  return  result!=  null  &&  result.isUnknownType()?  getNativeType(JSTypeNative.NO_TYPE):  result;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null  &&  result.isUnknownType()?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null  &&  result.isUnknownType()?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	compilable	  [FE]  AssertionFailedError  	208	1	replace
711	[BUG]  [BUGGY]  return  result!=  null  &&  result.getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null  &&  result.getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null  &&  result.getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result!=    null    &&    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  ';'  expected	208	None	replace
712	[BUG]  [BUGGY]  result  =  new  TreeSet  <  JSType>(result.alternates.size());  [CE]  cannot  find  symbol  alternates  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  TreeSet  <  JSType>(result.alternates.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  TreeSet  <  JSType>(result.alternates.size());	  result    =    new    TreeSet    <    JSType>(result.size());    	non-compiled	[CE]  cannot  find  symbol  alternates	112	None	replace
713	[BUG]  [BUGGY]  result  =  alternates.get(result.type).iterator(),  that.next();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.get(result.type).iterator(),  that.next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.get(result.type).iterator(),  that.next();	  result    =    alternates.get(result.type).iterator().next();    	non-compiled	[CE]  ';'  expected	145	None	replace
714	[BUG]  [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  this.getMessage());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  System.err.println( "Unexpected  error: "  +  this.getMessage());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  System.err.println( "Unexpected  error: "  +  this.getMessage());	          result    =    builder.build();    System.err.println(   "Unexpected    error:   "    +    that.getMessage());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
715	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    JSType  alternate  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
716	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unknown  type:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unknown    type:   "    +    that.getClass());    JSType  alternate  =  builder.build();  System.err.println( "Unknown  type:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	19	1	add
717	[BUG]  [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  it  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        that.getNativeType(JSTypeNative.NO_OBJECT_TYPE);        result    =    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    result  =  it.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  result  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  cannot  find  symbol  it	14	None	add
718	[BUG]  [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  that.getNativeType(JSTypeNative.NO_TYPE,  result);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  that.getNativeType(JSTypeNative.NO_TYPE,  result);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	32	None	replace
719	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  other);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  other);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  other);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  other	32	None	replace
720	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  this,  that);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE,  this,  that);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE,  this,  that);	  return    result.getNativeType(JSTypeNative.NO_TYPE,    that);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	32	None	replace
721	[BUG]  [BUGGY]  final  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  final  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	final  JSType  result  =  getNativeType(JSTypeNative.NO_TYPE);	          result    =    getNativeType(JSTypeNative.NO_TYPE);    JSType    result    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	61	None	replace
722	[BUG]  [BUGGY]  result  =  new  HashSet  <  JSType>(that.alternates.size());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  new  HashSet  <  JSType>(that.alternates.size());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  new  HashSet  <  JSType>(that.alternates.size());	  result    =    new    HashSet    <    JSType>(that.size());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
723	[BUG]  [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    JSType    result    ==    null?    getNativeType(JSTypeNative.NO_OBJECT_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	154	None	replace
724	[BUG]  [BUGGY]  result  =  alternate.build();  [CE]  cannot  find  symbol  alternate  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternate.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternate.build();	  result    =    otherAlternate.build();    	non-compiled	[CE]  cannot  find  symbol  alternate	43	None	replace
725	[BUG]  [BUGGY]  result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
726	[BUG]  [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType    result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	158	None	replace
727	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotEmptyOrUndefined();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.restrictByNotEmptyOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.restrictByNotEmptyOrUndefined();	  return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    	non-compiled	[CE]  cannot  find  symbol	185	None	replace
728	[BUG]  [BUGGY]  return  result  ==  null  ||  result.restrictByNotNullOrUndefined();  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null  ||  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null  ||  result.restrictByNotNullOrUndefined();	  return    result    ==    null?    null    :    result.restrictByNotNullOrUndefined();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	185	None	replace
729	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          result    =    getNativeType(JSTypeNative.NO_TYPE);    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	62	None	replace
730	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  result  =  builder.build();  }  [CE]  missing  return  statement  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  result  =  builder.build();  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  result  =  builder.build();  }	          result    =    getNativeType(JSTypeNative.NO_TYPE);    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	62	None	replace
731	[BUG]  [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result;  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  result  =  getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result;  }	          result    =    getNativeType(JSTypeNative.NO_TYPE);    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  missing  return  statement	62	None	replace
732	[BUG]  [BUGGY]  if(result!=  null)  {  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result  ==  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  }	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  missing  return  statement	121	None	replace
733	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  other);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  other);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  other);	  result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE,    that);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	109	None	replace
734	[BUG]  [BUGGY]  return  result!=  null?  null  :  result.alternates.iterator().next();  [CE]  cannot  find  symbol  alternates  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  null  :  result.alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  null  :  result.alternates.iterator().next();	  return    result!=    null?    null    :    result;    JSType    result    =    alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  alternates	190	None	replace
735	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  	non-compiled	[CE]  not  a  statement	93	None	add
736	[BUG]  [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType    result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	80	None	replace
737	[BUG]  [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NULL_TYPE):  result;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  ==  null?  getNativeType(JSTypeNative.NULL_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  ==  null?  getNativeType(JSTypeNative.NULL_TYPE):  result;	  result    ==    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  not  a  statement	133	None	replace
738	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.returnType;  [CE]  cannot  find  symbol  returnType  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.returnType;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null?  null  :  result.returnType;	  return    result    ==    null?    null    :    result.result;    	non-compiled	[CE]  cannot  find  symbol  returnType	146	None	replace
739	[BUG]  [BUGGY]  result  =  alternates.keySet().next();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.keySet().next();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.keySet().next();	  result    =    alternates.values().next();    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
740	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  result);  [CE]  cannot  find  symbol  NO_RESULT_TYPE  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT_TYPE,  result);	  result    =    getNativeType(JSTypeNative.NO_RESULT_TYPE,    otherAlternate);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT_TYPE	110	None	replace
741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
742	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	3	replace
743	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	2	replace
744	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_OBJECT_TYPE):  result.getNativeType(JSTypeNative.NO_TYPE);	  return    result.getNativeType(JSTypeNative.NO_TYPE);    Return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	130	2	replace
745	[BUG]  [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE);  result  =  getNativeType(JSTypeNative.NO_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        getNativeType(JSTypeNative.NO_TYPE);        result    =    getNativeType(JSTypeNative.NO_TYPE);    result  =  getNativeType(JSTypeNative.NO_TYPE,  result);  result  =  getNativeType(JSTypeNative.NO_TYPE);	  	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	58	None	add
746	[BUG]  [BUGGY]  return  result  >=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  >=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  >=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;	  return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	132	None	replace
747	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  reverse);  [CE]  cannot  find  symbol  reverse  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  reverse);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  result,  reverse);	  result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    result);    	non-compiled	[CE]  cannot  find  symbol  reverse	174	None	replace
748	[BUG]  [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]                  AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  JSType  result  =  null?  getNativeType(JSTypeNative.NO_TYPE):  result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	JSType  result  =  null?  getNativeType(JSTypeNative.NO_TYPE):  result;	  return    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    JSType    result    ==    null?    getNativeType(JSTypeNative.NO_TYPE):    result;    	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	57	None	replace
749	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  not  a  statement	186	None	add
750	[BUG]  [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result    ==    null?    null    :    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    JSType  result  ==  null?  null  :  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  ';'  expected	186	None	add
751	[BUG]  [BUGGY]  return  result  ==  null? "null "  :  result.restrictByNotNullOrUndefined();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result  ==  null? "null "  :  result.restrictByNotNullOrUndefined();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result  ==  null? "null "  :  result.restrictByNotNullOrUndefined();	  return    result!=    null?    null    :    result.restrictByNotNullOrUndefined();    	non-compiled	[CE]  incompatible  types	201	None	replace
752	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  alternates.iterator().next();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  alternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
753	[BUG]  [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  other.alternates.iterator().next();  [CE]  package  other  does  not  exist  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  other.alternates.iterator().next();  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result.getNativeType(JSTypeNative.NO_TYPE);  JSType  alternates  =  other.alternates.iterator().next();	  return    result.getNativeType(JSTypeNative.NO_TYPE);    JSType    alternates    =    that.alternates.iterator().next();    	non-compiled	[CE]  package  other  does  not  exist	217	None	replace
754	[BUG]  [BUGGY]  result  =  alternates.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();  ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
755	[BUG]  [BUGGY]  result  =  this.builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  builder  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.builder.build();  ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  builder	162	None	replace
756	[BUG]  [BUGGY]  result  =  other.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [CE]  cannot  find  symbol  other  [FE]                AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  other.build();  ReflectionError  <  UnionType>  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  other.build();  ReflectionError  <  UnionType>  result  =  builder.build();	          result    =    builder.build();    ReflectionError    <    UnionType>    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol  other	162	None	replace
757	[BUG]  [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  findNativeType(JSTypeNative.UNKNOWN_TYPE,  result);	          result    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    result    =    findNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
758	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  JSType  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  JSType  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    JSType  result  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	21	None	add
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    JSType  alternate  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
760	[BUG]  [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    System.err.println(   "Unexpected  error:   "  +  that.getClass());  JSType  alternate  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        System.err.println(   "Unexpected    error:   "    +    that.getClass());    JSType  alternate  =  builder.build();  System.err.println( "Unexpected  error:   "  +  that.getClass());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
761	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  result);  [CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_TYPE,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_TYPE,  result);	  result    =    that.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  method  getNativeType  in  class  JSType  cannot  be  applied  to  given  types;	42	None	replace
762	[BUG]  [BUGGY]  result  =  this.alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  this.alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  this.alternates.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	          result    =    builder.build();    result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
763	[BUG]  [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result!=  null)  {  return  result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    return    result.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  missing  return  statement	46	None	replace
764	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.UNKNOWN_TYPE);    }    JSType  result  =  builder.build();  result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.UNKNOWN_TYPE);  }	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	196	None	add
765	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT,  result);  [CE]  cannot  find  symbol  NO_RESULT  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_RESULT,  result);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_RESULT,  result);	  result    =    getNativeType(JSTypeNative.NO_RESULT);    	non-compiled	[CE]  cannot  find  symbol  NO_RESULT	209	None	replace
766	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result.isUnknownType())  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	if(result.isUnknownType())  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	125	3	replace
767	[BUG]  [BUGGY]  if(result.isUnknownType())  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  if(result.isUnknownType())  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	if(result.isUnknownType())  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }  else  {  return  result.getNativeType(JSTypeNative.NO_TYPE);  }	  return    result.getNativeType(JSTypeNative.NO_TYPE);    return    result.getNativeType(JSTypeNative.NO_TYPE);    	compilable	  [FE]  AssertionFailedError  	125	3	replace
768	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(resULt  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [CE]  cannot  find  symbol  resULt  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  if(result  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  result  =  builder.build();  result  =  builder.build();  if(resULt  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    if(result    ==    null)    {    return    getNativeType(JSTypeNative.NO_OBJECT_TYPE);    }    result  =  builder.build();  result  =  builder.build();  if(resULt  ==  null)  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }	  	non-compiled	[CE]  cannot  find  symbol  resULt	193	None	add
769	[BUG]  [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE;  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  getNativeType(JSTypeNative.NO_TYPE;  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  getNativeType(JSTypeNative.NO_TYPE;	          result    =    getNativeType(JSTypeNative.NO_TYPE);    result    =    getNativeType(JSTypeNative.NO_TYPE;    	non-compiled	[CE]  ')'  expected	180	None	replace
770	[BUG]  [BUGGY]  result  =  alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  cannot  find  symbol  alternate  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  result    =    otherAlternate.getNativeType(JSTypeNative.NO_OBJECT_TYPE);    	non-compiled	[CE]  cannot  find  symbol  alternate	99	None	replace
771	[BUG]  [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,  other);	  result    =    that.getNativeType(JSTypeNative.NO_OBJECT_TYPE,    this);    	non-compiled	[CE]  cannot  find  symbol  other	102	None	replace
772	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  this.result;  [CE]  cannot  find  symbol  result  [FE]        AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  this.result;  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.NO_TYPE):  this.result;	  return    result!=    null?    getNativeType(JSTypeNative.NO_TYPE):    that.result;    	non-compiled	[CE]  cannot  find  symbol  result	16	None	replace
773	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	compilable	  [FE]  AssertionFailedError  	171	3	replace
774	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  return    result.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	compilable	  [FE]  AssertionFailedError  	171	3	replace
775	[BUG]  [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  that.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  result  is  already  defined  in  method  meet(JSType)  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  return  result!=  null?  getNativeType(JSTypeNative.UNKNOWN_TYPE):  result;  JSType  result  =  that.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	return    result!=    null?    getNativeType(JSTypeNative.UNKNOWN_TYPE):    result;    JSType  result  =  that.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  meet(JSType)	131	None	add
776	[BUG]  [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.Build();  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]          result    =    builder.build();    result  =  builder.build();  result  =  builder.Build();  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	                result        =        builder.build();        result    =    builder.build();    result  =  builder.Build();  result  =  builder.build();	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
777	[BUG]  [BUGGY]  result  =  that.build();  JSType  result  =  builder.build();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  that.build();  JSType  result  =  builder.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  that.build();  JSType  result  =  builder.build();	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
778	[BUG]  [BUGGY]  result  =  alternates.build();  JSType  result  =  alternates.build();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      for  (JSType  otherAlternate  :  ((UnionType)  that).alternates)  {  if  (otherAlternate.isSubtype(this))  {  builder.addAlternate(otherAlternate);  }  }  }  else  if  (that.isSubtype(this))  {  builder.addAlternate(that);  }  JSType  result  =  builder.build();  if  (result  !=  null)  {      [BUGGY]  result  =  alternates.build();  JSType  result  =  alternates.build();  [BUGGY]      return  result;  }  else  if  (this.isObject()  &&  that.isObject())  {  return  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  else  {  return  getNativeType(JSTypeNative.NO_TYPE);  }  }  [CLASS]  UnionType  [METHOD]  meet  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  Set  alternates  JSType  alternate  otherAlternate  result  that  boolean  UnionTypeBuilder  builder  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	result  =  alternates.build();  JSType  result  =  alternates.build();	          result    =    builder.build();    JSType    result    =    builder.build();    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
