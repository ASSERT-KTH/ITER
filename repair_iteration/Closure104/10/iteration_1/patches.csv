bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
2	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
4	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
5	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  If(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  If(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    If(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
6	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternatives.size())  {  return  false;  }  [CE]  cannot  find  symbol  alternatives  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternatives.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates.size()  >  alternatives.size())  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  alternatives	5	None	add
7	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  options.size())  {  return  false;  }  [CE]  cannot  find  symbol  options  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates.size()  >  options.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates.size()  >  options.size())  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  options	5	None	add
8	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
9	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
11	[BUG]  [BUGGY]  if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
12	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  cannot  find  symbol  Sets  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  cannot  find  symbol  Sets	24	None	replace
13	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
14	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
15	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
16	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
17	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }  [CE]  no  suitable  method  found  for  add(int)  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    +    1);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	8	None	replace
18	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }  [CE]  no  suitable  method  found  for  add(int)  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    +    1);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	8	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
20	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
22	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
23	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  If(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  If(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    If(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	non-compiled	[CE]  ';'  expected	27	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
25	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
26	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }  [CE]  cannot  find  symbol  alternators  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }	  	non-compiled	[CE]  cannot  find  symbol  alternators	27	None	add
27	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  false;  }	  if(alternates    ==    null)return    true;    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	21	None	replace
28	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    alternates.isEmpty();    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
29	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    alternates.isEmpty();    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
30	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  alternates.isEmpty();  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    alternates.isEmpty();    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
31	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size()  -  1);  }  [CE]  no  suitable  method  found  for  add(int)  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size()  -  1);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.size()  -  1);  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    -    1);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	7	None	replace
32	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.size()  -  1);  }  [CE]  no  suitable  method  found  for  add(int)  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.size()  -  1);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.size()  -  1);  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    -    1);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	7	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternates.iterator();  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternates.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  this.alternates.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  >  expected	20	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternators.iterator();  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternators.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  this.alternators.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  >  expected	20	None	replace
35	[BUG]  [BUGGY]  Iterator  <  String>  alternates  =  this.alternates.iterator();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  String>  alternates  =  this.alternates.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  String>  alternates  =  this.alternates.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  alternates  =  this.alternators.iterator();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  String>  alternates  =  this.alternators.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  String>  alternates  =  this.alternators.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternations.iterator();  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternations.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  this.alternations.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  >  expected	20	None	replace
38	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  true;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  true;  }	  return    false;    	non-compiled	[CE]  missing  return  statement	10	None	replace
39	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates!=  null)  {  return  true;  }	  return    false;    	non-compiled	[CE]  missing  return  statement	10	None	replace
40	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)return  true;  return  true;  }	  return    false;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
41	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  true;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  true;  }	  return    false;    	non-compiled	[CE]  missing  return  statement	10	None	replace
42	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  incompatible  types	25	None	replace
43	[BUG]  [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	25	None	replace
44	[BUG]  [BUGGY]  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
45	[BUG]  [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().n  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().n  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().n	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ')'  expected	25	None	replace
46	[BUG]  [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates.size()  ==  alternates.size())  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
47	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }	  if(alternates!=    null)return    false;    if(alternates.size()    ==    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	13	None	replace
48	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.size()  ==  alternates.size())  {  return  false;  }	  if(alternates!=    null)return    false;    if(alternates.size()    ==    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	13	None	replace
49	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates.size()  ==  alternates.size())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates.size()  ==  alternates.size())  {  return  false;  }	  if(alternates!=    null)return    false;    if(alternates.size()    ==    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	13	None	replace
50	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates  ==  null)  {  return  false;  }	  if(alternates!=    null)return    false;    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	22	None	replace
51	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
52	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates.size()  >  alternates.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
53	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  <  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  <  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.size()  <  alternates.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
54	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
55	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
56	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
57	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
58	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
59	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
60	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
61	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
62	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
63	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
64	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
65	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
66	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
67	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
68	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
69	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  [FE]  UnsupportedOperationException  [FE]      UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
70	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
71	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
72	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
73	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [FE]  UnsupportedOperationException  [FE]          UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
74	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.iterator().next());  }  [CE]  illegal  start  of  type  [FE]            UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.iterator().next());  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
75	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
76	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [FE]  UnsupportedOperationException  [FE]              UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
77	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
78	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
79	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates.isEmpty())return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
80	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
81	[BUG]  [BUGGY]  if(!isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(!isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(!isUnionType())  {  if(alternates  ==  null)  {  alternates  =  Collections.emptySet();  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
82	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
83	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  LinkedHashSet  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
84	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.add(alternates.size());  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  HashSet  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
85	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >  this.alternates.size();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >  this.alternates.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >  this.alternates.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
86	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >  this.alternators.size();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >  this.alternators.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >  this.alternators.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
87	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >  list.size();  [CE]  boolean  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >  list.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >  list.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
88	[BUG]  [BUGGY]  boolean  alternates  =  this.alternates.size()  >  this.alternates.size();  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  this.alternates.size()  >  this.alternates.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  this.alternates.size()  >  this.alternates.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  missing  return  statement	1	None	replace
89	[BUG]  [BUGGY]  boolean  alternates  =  possibles.size()  >  alternates.size();  [CE]  cannot  find  symbol  possibles  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  possibles.size()  >  alternates.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  possibles.size()  >  alternates.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  cannot  find  symbol  possibles	1	None	replace
90	[BUG]  [BUGGY]  Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  Sets  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  Sets.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol  Sets	29	None	replace
91	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
92	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
93	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
94	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  return  it.next().isUnionType();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  return  it.next().isUnionType();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  return  it.next().isUnionType();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
95	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.iterator().next())  {  return  false;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.iterator().next())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.iterator().next())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
96	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.values())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  error  :  alternates.values())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
97	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  UnionType  alternates.add(it.next());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  UnionType  alternates.add(it.next());  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  AssertionFailedError>  it  =  alternates.iterator();  it.hasNext();)  {  UnionType  alternates.add(it.next());  }	  	non-compiled	[CE]  ';'  expected	9	None	add
98	[BUG]  [BUGGY]  return  false;  boolean  return  alternates.size()  ==  alternates.size();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  boolean  return  alternates.size()  ==  alternates.size();  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    boolean  return  alternates.size()  ==  alternates.size();	  	non-compiled	[CE]  not  a  statement	9	None	add
99	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  false;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
100	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  true;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates!=  null)  {  return  true;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
101	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  true;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  true;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  Sets.emptySet();  if(alternates!=  null)  {  return  true;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
102	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  true;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  true;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  Collections.emptySet();  if(alternates  ==  null)  {  return  true;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
103	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.isEmpty());    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	4	None	replace
104	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.isEmpty());  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.isEmpty());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.isEmpty());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.isEmpty());    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	4	None	replace
105	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
106	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
107	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.iterator().next());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
108	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
109	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  alternates.size()  >  alternates.size();  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  alternates.size()  >  alternates.size();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)  {  return  alternates.size()  >  alternates.size();  }	  return    false;    	non-compiled	[CE]  missing  return  statement	10	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
111	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
112	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
113	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  ';'  expected	29	None	replace
114	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  >  expected	29	None	replace
115	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternatives.iterator();  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  this.alternatives.iterator();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  this.alternatives.iterator();	      Iterator    <    Set    <    String>    alternates    =    alternates.iterator();    	non-compiled	[CE]  >  expected	20	None	replace
116	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
117	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.add(alternates.size());  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  new  ArrayList  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
118	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates  ==  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates  ==  null)  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
119	[BUG]  [BUGGY]  return  false;  AssertionFailedError  <  String>  alternates  =  new  AssertionFailedError();  alternates.add(alternates);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  AssertionFailedError  <  String>  alternates  =  new  AssertionFailedError();  alternates.add(alternates);  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    AssertionFailedError  <  String>  alternates  =  new  AssertionFailedError();  alternates.add(alternates);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
120	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError( "Union "));  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError( "Union "));  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError( "Union "));  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
121	[BUG]  [BUGGY]  return  false;  boolean  alternates  =  alternates.size()  >  alternates.size();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  boolean  alternates  =  alternates.size()  >  alternates.size();  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    boolean  alternates  =  alternates.size()  >  alternates.size();	  	non-compiled	[CE]  boolean  cannot  be  dereferenced	9	None	add
122	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  true;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  <  String>  error  :  alternates.values())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
123	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError());  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError());  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  alternates.add(new  AssertionFailedError( "Union "));  alternates.add(new  AssertionFailedError());  }	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
124	[BUG]  [BUGGY]  Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Iterator  <  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  >  expected	25	None	replace
125	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >  options.size();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >  options.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >  options.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
126	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >  variants.size();  [CE]  boolean  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >  variants.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >  variants.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
127	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(0));  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(0));  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(0));  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
128	[BUG]  [BUGGY]  if(!isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(!isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(!isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
129	[BUG]  [BUGGY]  if(isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]      UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(isUnionType())return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
130	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >  options.size())  {  return  false;  }  [CE]  cannot  find  symbol  options  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >  options.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.size()  >  options.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  options	6	None	replace
131	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >=  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates.size()  >=  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates.size()  >=  alternates.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
132	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  Lists.emptySet();  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  Lists.emptySet();  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  Lists.emptySet();  if(alternates!=  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
133	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.size());  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
134	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
135	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
136	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.get(0))  {  return  false;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.get(0))  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates.size()  ==  alternates.get(0))  {  return  false;  }	  if(alternates!=    null)return    false;    if(alternates.size()    ==    alternates.size())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
137	[BUG]  [BUGGY]  if(options  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  options  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(options  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(options  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  options	11	None	replace
138	[BUG]  [BUGGY]  if(options!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  options  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(options!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(options!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  options	11	None	replace
139	[BUG]  [BUGGY]  if(parent  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  parent  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(parent  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(parent  ==  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  parent	11	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
141	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
142	[BUG]  [BUGGY]  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
143	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  Collections.EMPTY_SET;  if(alternates!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  Collections.EMPTY_SET;  if(alternates!=  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  Collections.EMPTY_SET;  if(alternates!=  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
144	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.isEmpty());    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	4	None	replace
145	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
146	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>(alternates.values());  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
147	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  new  HashSet  <  String>();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
148	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(!alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(!alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(!alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
149	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
150	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.iterator().next());  }  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)return  false;  if(alternates  ==  null)  {  alternates.add(alternates.iterator().next());  }	  	compilable	  [FE]  UnsupportedOperationException  	2	4	add
151	[BUG]  [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  true;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  true;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
152	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.newHashSet();  }  [CE]  cannot  find  symbol  Sets  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  Sets.newHashSet();  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  Sets.newHashSet();  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  Sets	15	None	replace
153	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates.isEmpty())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	28	None	replace
154	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [CE]  missing  return  statement  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  alternates.isEmpty();  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    alternates.isEmpty();    }    	non-compiled	[CE]  missing  return  statement	31	None	replace
155	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
156	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(alternates!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  false;  if(alternates!=  null)  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
157	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }	      if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
158	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [CE]  no  suitable  method  found  for  add(boolean)  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.isEmpty());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.isEmpty());    }    	non-compiled	[CE]  no  suitable  method  found  for  add(boolean)	4	None	replace
159	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  incompatible  types	19	None	replace
160	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.add(alternates.size());  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.add(alternates.size());    }    	non-compiled	[CE]  incompatible  types	19	None	replace
161	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  alternates.add(alternates.size());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  alternates.add(alternates.size());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  alternates.add(alternates.size());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
162	[BUG]  [BUGGY]  if(parent!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  parent  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(parent!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(parent!=  null)return  false;  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  parent	12	None	replace
163	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
164	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternators.iterator().next());  }  [CE]  cannot  find  symbol  alternators  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternators.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternators.iterator().next());  }	  	non-compiled	[CE]  cannot  find  symbol  alternators	2	None	add
165	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  If(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]      UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  If(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    If(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }	  	non-compiled	[CE]  ';'  expected	2	None	add
166	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternatives.add(alternates.iterator().next());  }  [CE]  cannot  find  symbol  alternatives  [FE]        UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternatives.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternatives.add(alternates.iterator().next());  }	  	non-compiled	[CE]  cannot  find  symbol  alternatives	2	None	add
167	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(alternates.size()  -  1));  }  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(alternates.size()  -  1));  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates!=  null)  {  alternates.add(alternates.get(alternates.size()  -  1));  }	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
168	[BUG]  [BUGGY]  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  true;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  true;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  true;  }	  return    false;    	non-compiled	[CE]  missing  return  statement	10	None	replace
169	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEmpty();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEmpty();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
170	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.contains(alternates);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.contains(alternates);  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.contains(alternates);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
171	[BUG]  [BUGGY]  return  false;  for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.contains(alternates))  {  return  alternates.contains(alternates);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.contains(alternates))  {  return  alternates.contains(alternates);  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.contains(alternates))  {  return  alternates.contains(alternates);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
172	[BUG]  [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEquivalentTo(alternates);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEquivalentTo(alternates);  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    if(alternates  ==  null)  {  for(AssertionFailedError  alternates  :  alternates.values())  {  return  alternates.isEquivalentTo(alternates);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
173	[BUG]  [BUGGY]  return  false;  for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.isEmpty())  {  return  alternates.isEmpty();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  return  false;  for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.isEmpty())  {  return  alternates.isEmpty();  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	return    false;    for(AssertionFailedError  alternates  :  alternates.values())  {  if(alternates.isEmpty())  {  return  alternates.isEmpty();  }	  	non-compiled	[CE]  ';'  expected	9	None	add
174	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  incompatible  types	26	None	replace
175	[BUG]  [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  Set  <  String>  alternates  =  alternates.keySet();  for(Set  <  String>  alternates  :  alternates.keySet())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.keySet())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	26	None	replace
176	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  If(alternates.size()  >  alternates.size())  {  return  false;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.size()  >  alternates.size())  {  return  false;  }  if(alternates  ==  null)return  false;  If(alternates.size()  >  alternates.size())  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.size()    >    alternates.size())    {    return    false;    }    if(alternates  ==  null)return  false;  If(alternates.size()  >  alternates.size())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
177	[BUG]  [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null)  {  alternates  =  new  TreeSet  <  String>();  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    alternates    =    new    HashSet    <    String>();    alternates.addAll(alternates);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
178	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  false;  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates.isEmpty())return  false;  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates.isEmpty())return  false;	  if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	30	None	replace
179	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
180	[BUG]  [BUGGY]  Collection  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Collection  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Collection  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
181	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternators.iterator().next());  }  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternators.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternators.iterator().next());  }	      if(alternates.size()    >    alternates.size())    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  incompatible  types	25	None	replace
182	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
183	[BUG]  [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  Set  <  String>  alternates  =  alternates.values().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  ';'  expected	24	None	replace
184	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(alternates!=  null)  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(alternates!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates.size()  ==  0)return  true;  if(alternates!=  null)  {  return  false;  }	  if(alternates    ==    null)return    true;    if(alternates!=    null)    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	21	None	replace
185	[BUG]  [BUGGY]  if(parent!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  cannot  find  symbol  parent  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(parent!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(parent!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol  parent	11	None	replace
186	[BUG]  [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }  [BUGGY]    }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates  ==  null  ||  alternates!=  null)return  false;  if(alternates!=  null)return  true;  if(alternates.isEmpty())  {  return  false;  }	  if(alternates    ==    null)return    false;    if(alternates!=    null)return    true;    if(alternates.isEmpty())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
187	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.iterator().next();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  incompatible  types	29	None	replace
188	[BUG]  [BUGGY]  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	Set  <  String>  alternates  =  alternates.values();  for(Set  <  String>  alternates  :  alternates.values())  {  alternates.addAll(alternates);  }	      if(alternates    ==    null)    {    Set    <    String>    alternates    =    alternates.iterator().next();    for(Set    <    String>    alternates    :    alternates.values())    {    alternates.addAll(alternates);    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
189	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  alternates.add(alternates.size()  -  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  alternates.add(alternates.size()  -  1);  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  alternates.add(alternates.size()  -  1);  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.size()    -    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
190	[BUG]  [BUGGY]  boolean  alternates  =  alternates.size()  >=  alternates.size();  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  boolean  alternates  =  alternates.size()  >=  alternates.size();  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	boolean  alternates  =  alternates.size()  >=  alternates.size();	      boolean    alternates    =    alternates.size()    >    alternates.size();    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
191	[BUG]  [BUGGY]  if(alternates!=  null)return  false;  if(alternates.size()  ==  0)  {  alternates.add(alternates.iterator().next());  }  [CE]  missing  return  statement  [FE]    UnsupportedOperationException    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)return  false;  if(alternates.size()  ==  0)  {  alternates.add(alternates.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)return  false;  if(alternates.size()  ==  0)  {  alternates.add(alternates.iterator().next());  }	      if(alternates    ==    null)return    false;    if(alternates!=    null)    {    alternates.add(alternates.iterator().next());    }    	non-compiled	[CE]  missing  return  statement	3	None	replace
192	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }  [CE]  cannot  find  symbol  alternators  [FE]    AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternators.iterator().next());  }	  	non-compiled	[CE]  cannot  find  symbol  alternators	27	None	add
193	[BUG]  [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.get(alternates.size()  -  1));  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]      if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.iterator().next());  }  if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.get(alternates.size()  -  1));  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	        if(alternates    ==    null)return    false;    if(alternates.isEmpty())    {    alternates.add(alternates.iterator().next());    }    if(alternates  ==  null)return  false;  if(alternates.isEmpty())  {  alternates.add(alternates.get(alternates.size()  -  1));  }	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
194	[BUG]  [BUGGY]  if(alternates!=  null)  {  alternates  =  Sets.emptySet();  if(alternates  ==  null)  {  return  false;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  boolean  isUnionType()  {    [BUGGY]  if(alternates!=  null)  {  alternates  =  Sets.emptySet();  if(alternates  ==  null)  {  return  false;  }  [BUGGY]    return  true;  }  [CLASS]  UnionType  [METHOD]  isUnionType  [RETURN_TYPE]  boolean  [VARIABLES]  long  serialVersionUID  Set  alternates  boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	if(alternates!=  null)  {  alternates  =  Sets.emptySet();  if(alternates  ==  null)  {  return  false;  }	      if(alternates    ==    null)    {    alternates    =    Collections.emptySet();    if(alternates    ==    null)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	16	None	replace
