bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } else if (that.isSubtype(this)) { [FE] AssertionFailedError [CONTEXT] builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } [BUGGY] } else if (that.isSubtype(this)) { [BUGGY] builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.7071067811865475	287	287	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } [BUGGY] [BUGGY] } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.7071067811865475	287	287	1	add	
3	[BUG] [BUGGY] UnionTypeBuilder builder = new UnionTypeBuilder(registry); [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { [BUGGY] UnionTypeBuilder builder = new UnionTypeBuilder(registry); [BUGGY] for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	274	274	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { [BUGGY] [BUGGY] UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	274	274	1	add	
5	[BUG] [BUGGY] for (JSType alternate : alternates) { [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); [BUGGY] for (JSType alternate : alternates) { [BUGGY] if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	275	275	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); [BUGGY] [BUGGY] for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	275	275	1	add	
7	[BUG] [BUGGY] if (alternate.isSubtype(that)) { [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { [BUGGY] if (alternate.isSubtype(that)) { [BUGGY] builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	276	276	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { [BUGGY] [BUGGY] if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	276	276	1	add	
9	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } [BUGGY] } [BUGGY]  if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	279	279	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } [BUGGY] [BUGGY] } if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	279	279	1	add	
11	[BUG] [BUGGY] if (that instanceof UnionType) { [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } [BUGGY] if (that instanceof UnionType) { [BUGGY] for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	281	281	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSType meet(JSType that) { UnionTypeBuilder builder = new UnionTypeBuilder(registry); for (JSType alternate : alternates) { if (alternate.isSubtype(that)) { builder.addAlternate(alternate); } } [BUGGY] [BUGGY] if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	281	281	1	add	
13	[BUG] [BUGGY] JSType result = builder.build(); [FE] AssertionFailedError [CONTEXT] if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } [BUGGY] JSType result = builder.build(); [BUGGY] if (result != null) { return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	290	290	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } [BUGGY] [BUGGY] JSType result = builder.build(); if (result != null) { return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	290	290	1	add	
15	[BUG] [BUGGY] if (result != null) { [FE] AssertionFailedError [CONTEXT] if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); [BUGGY] if (result != null) { [BUGGY] return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (that instanceof UnionType) { for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); [BUGGY] [BUGGY] if (result != null) { return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	291	291	1	add	
17	[BUG] [BUGGY] return result; [FE] AssertionFailedError [CONTEXT] for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { [BUGGY] return result; [BUGGY] } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (JSType otherAlternate : ((UnionType) that).alternates) { if (otherAlternate.isSubtype(this)) { builder.addAlternate(otherAlternate); } } } else if (that.isSubtype(this)) { builder.addAlternate(that); } JSType result = builder.build(); if (result != null) { [BUGGY] [BUGGY] return result; } else if (this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } else { return getNativeType(JSTypeNative.NO_TYPE); } } [CLASS] UnionType [METHOD] meet [RETURN_TYPE] JSType  JSType that [VARIABLES] Set alternates JSType alternate otherAlternate result that boolean UnionTypeBuilder builder long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5773502691896258	292	292	1	add	
19	[BUG] [BUGGY] return true; [FE] AssertionFailedError [CONTEXT] public boolean isUnionType() { [BUGGY] return true; [BUGGY] } [CLASS] UnionType [METHOD] isUnionType [RETURN_TYPE] boolean  [VARIABLES] long serialVersionUID Set alternates boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isUnionType() { [BUGGY] [BUGGY] return true; } [CLASS] UnionType [METHOD] isUnionType [RETURN_TYPE] boolean  [VARIABLES] long serialVersionUID Set alternates boolean  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.5	321	321	1	add	
21	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { for (JSType element : alternates) { if (!element.isSubtype(that)) { [BUGGY] return false; [BUGGY] } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.4472135954999579	394	394	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { for (JSType element : alternates) { if (!element.isSubtype(that)) { [BUGGY] [BUGGY] return false; } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.4472135954999579	394	394	1	add	
23	[BUG] [BUGGY] for (JSType t : alternates) { [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { [BUGGY] for (JSType t : alternates) { [BUGGY] if (t.isUnknownType()) { return true; } } return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { [BUGGY] [BUGGY] for (JSType t : alternates) { if (t.isUnknownType()) { return true; } } return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	add	
25	[BUG] [BUGGY] if (t.isUnknownType()) { [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { [BUGGY] if (t.isUnknownType()) { [BUGGY] return true; } } return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	253	253	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { [BUGGY] [BUGGY] if (t.isUnknownType()) { return true; } } return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	253	253	1	add	
27	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { if (t.isUnknownType()) { return true; } [BUGGY] } [BUGGY] return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	256	256	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { if (t.isUnknownType()) { return true; } [BUGGY] [BUGGY] } return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	256	256	1	add	
29	[BUG] [BUGGY] return false; [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { if (t.isUnknownType()) { return true; } } [BUGGY] return false; [BUGGY] } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isUnknownType() { for (JSType t : alternates) { if (t.isUnknownType()) { return true; } } [BUGGY] [BUGGY] return false; } [CLASS] UnionType [METHOD] isUnknownType [RETURN_TYPE] boolean  [VARIABLES] Set alternates JSType t boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	257	257	1	add	
31	[BUG] [BUGGY] for (JSType element : alternates) { [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { [BUGGY] for (JSType element : alternates) { [BUGGY] if (!element.isSubtype(that)) { return false; } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { [BUGGY] [BUGGY] for (JSType element : alternates) { if (!element.isSubtype(that)) { return false; } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	392	392	1	add	
33	[BUG] [BUGGY] if (!element.isSubtype(that)) { [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { for (JSType element : alternates) { [BUGGY] if (!element.isSubtype(that)) { [BUGGY] return false; } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	393	393	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public boolean isSubtype(JSType that) { for (JSType element : alternates) { [BUGGY] [BUGGY] if (!element.isSubtype(that)) { return false; } } return true; } [CLASS] UnionType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] Set alternates JSType element that boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	393	393	1	add	
35	[BUG] [BUGGY] super(registry); [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { [BUGGY] super(registry); [BUGGY] this.alternates = alternates; } [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	76	76	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { [BUGGY] [BUGGY] super(registry); this.alternates = alternates; } [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	76	76	1	add	
37	[BUG] [BUGGY] this.alternates = alternates; [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { super(registry); [BUGGY] this.alternates = alternates; [BUGGY] } [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	77	77	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { super(registry); [BUGGY] [BUGGY] this.alternates = alternates; } [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	77	77	1	add	
39	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { super(registry); this.alternates = alternates; [BUGGY] } [BUGGY]  [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] UnionType(JSTypeRegistry registry, Set<JSType> alternates) { super(registry); this.alternates = alternates; [BUGGY] [BUGGY] } [CLASS] UnionType [METHOD] <init> [RETURN_TYPE] Set)  JSTypeRegistry registry JSType> alternates [VARIABLES] JSTypeRegistry registry Set alternates boolean long serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.2886751345948129	78	78	1	add	
