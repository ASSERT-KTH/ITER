bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  this.alternates)  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	add	for(JSType  t  :  this.alternates)  {	for  (JSType  t  :  alternates)  {  	compilable	  [FE]  AssertionFailedError  	23	1	replace
2	[BUG]  [BUGGY]  for(JSType  t  :  this.alternates)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  this.alternates)  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  this.alternates)  {	for  (JSType  t  :  alternates)  {  	compilable	  [FE]  AssertionFailedError  	23	1	replace
3	[BUG]  [BUGGY]  for(JSType  t  :  this.alternators)  {  [CE]  cannot  find  symbol  alternators  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  this.alternators)  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  this.alternators)  {	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol  alternators	23	None	replace
4	[BUG]  [BUGGY]  for(JSType  t  :  alternates.values())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  alternates.values())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  alternates.values())  {	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
5	[BUG]  [BUGGY]  for(JSType  t  :  others.size())  {  [CE]  cannot  find  symbol  others  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  others.size())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  others.size())  {	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol  others	23	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	  	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet();		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
8	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates);		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
9	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [CE]  cannot  find  symbol  Sets  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates.size());		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
10	[BUG]  [BUGGY]    JSType  alternates  =(JSType)this.alternates.get(alternates.size()  -  1);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  alternates  =(JSType)this.alternates.get(alternates.size()  -  1);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  alternates  =(JSType)this.alternates.get(alternates.size()  -  1);		non-compiled	[CE]  cannot  find  symbol	24	None	add
11	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();  [CE]  cannot  find  symbol  Sets  [FE]            AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternates).iterator();		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
12	[BUG]  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [CE]  cannot  find  symbol  alternations  [FE]              AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  JSType>  alternates  =  Sets.newHashSet(alternations);		non-compiled	[CE]  cannot  find  symbol  alternations	24	None	add
13	[BUG]  [BUGGY]    JSType  alternates  =  getAlternates();  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  alternates  =  getAlternates();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  alternates  =  getAlternates();		non-compiled	[CE]  incompatible  types	24	None	add
14	[BUG]  [BUGGY]    JSType  alternates  =  getSingleNodeType().getAlternates();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  alternates  =  getSingleNodeType().getAlternates();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  alternates  =  getSingleNodeType().getAlternates();		non-compiled	[CE]  cannot  find  symbol	24	None	add
15	[BUG]  [BUGGY]    JSType  alternates  =(JSType)super.getAlternates();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  alternates  =(JSType)super.getAlternates();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  alternates  =(JSType)super.getAlternates();		non-compiled	[CE]  cannot  find  symbol	24	None	add
16	[BUG]  [BUGGY]    JSType  alternates  =  getImplicitReturnType();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  alternates  =  getImplicitReturnType();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  alternates  =  getImplicitReturnType();		non-compiled	[CE]  cannot  find  symbol	24	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  getAlternates())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	add	for(JSType  t  :  getAlternates())  {	for  (JSType  t  :  alternates)  {  	compilable	  [FE]  AssertionFailedError  	23	1	replace
18	[BUG]  [BUGGY]  for(JSType  t  :  getAlternates())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  getAlternates())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  getAlternates())  {	for  (JSType  t  :  alternates)  {  	compilable	  [FE]  AssertionFailedError  	23	1	replace
19	[BUG]  [BUGGY]  for(JSType  t  :  getImplicitReturnType())  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  getImplicitReturnType())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  getImplicitReturnType())  {	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
20	[BUG]  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet();  [CE]  cannot  find  symbol  Sets  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet();  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  String>  alternates  =  Sets.newHashSet();		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
21	[BUG]  [BUGGY]    JSType  t  =  getNativeType(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]      AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  t  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  t  =  getNativeType(UNKNOWN_TYPE);		non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	24	None	add
22	[BUG]  [BUGGY]    JSType  t  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  variable  t  is  already  defined  in  method  isUnknownType()  [FE]        AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    JSType  t  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    JSType  t  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);		non-compiled	[CE]  variable  t  is  already  defined  in  method  isUnknownType()	24	None	add
23	[BUG]  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet(alternates);  [CE]  cannot  find  symbol  Sets  [FE]          AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]    Set  <  String>  alternates  =  Sets.newHashSet(alternates);  [BUGGY]  for  (JSType  t  :  alternates)  {  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	    Set  <  String>  alternates  =  Sets.newHashSet(alternates);		non-compiled	[CE]  cannot  find  symbol  Sets	24	None	add
24	[BUG]  [BUGGY]  for(JSType  t  :  getImmediateParentConstructors())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  boolean  isUnknownType()  {  [BUGGY]  for(JSType  t  :  getImmediateParentConstructors())  {  [BUGGY]  if  (t.isUnknownType())  {  return  true;  }  }  return  false;  }  [CLASS]  UnionType  [METHOD]  isUnknownType  [RETURN_TYPE]  boolean  [VARIABLES]  Set  alternates  JSType  t  boolean  long  serialVersionUID  	projects/Closure104/src/com/google/javascript/rhino/jstype/UnionType.java	0.3779644730092272	252	252	1	replace	for(JSType  t  :  getImmediateParentConstructors())  {	for  (JSType  t  :  alternates)  {  	non-compiled	[CE]  cannot  find  symbol	23	None	replace
