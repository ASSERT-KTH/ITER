bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Node  child  =  n.getFirstChild();  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable);	      	non-compiled	[CE]  ';'  expected	12	None	replace
3	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssigns(n,  variable);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable);	      	non-compiled	[CE]  ';'  expected	12	None	replace
4	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicates.checkState(variable.equals(n.getString()));  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()));	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable);  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable);	      	non-compiled	[CE]  ';'  expected	12	None	replace
6	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable);  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n.getString(),  variable);	      	non-compiled	[CE]  ';'  expected	12	None	replace
7	[BUG]  [BUGGY]  Node  child  =  n.getLastChild();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Node  child  =  n.getLastChild();  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild();	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
9	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
10	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
11	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	7	None	add
12	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
13	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
14	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	9	None	add
15	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
16	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	9	None	add
17	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
18	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
19	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
20	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
21	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {	  	non-compiled	[CE]  ')'  expected	1	None	add
22	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
23	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
25	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	6	52	replace
26	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	6	52	replace
27	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
28	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
29	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
30	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
31	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
32	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
33	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	6	None	replace
34	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]                RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	6	None	replace
35	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	13	55	replace
36	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	13	55	replace
37	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getParent()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  variable.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
38	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(parent,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	13	None	replace
39	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
40	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
41	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	11	None	replace
42	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
43	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()),  variable)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()),  variable)  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
44	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
45	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString()  +  1))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
46	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	4	52	replace
47	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	4	52	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
49	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
51	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
52	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	4	None	replace
53	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
54	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	4	52	replace
55	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	4	52	replace
56	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	add
57	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	15	None	add
58	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	add
59	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	15	None	add
60	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
61	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
62	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
63	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getfirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
64	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	61	replace
65	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	61	replace
66	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	8	None	replace
67	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	8	None	replace
68	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	61	replace
69	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	61	replace
70	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	16	None	replace
71	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	16	61	replace
72	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	16	61	replace
73	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	16	None	replace
74	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	16	None	replace
75	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
76	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
77	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
78	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
79	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
80	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	2	None	replace
81	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	2	None	replace
82	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	2	61	replace
83	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	2	61	replace
84	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	2	None	replace
85	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType()))  {	  if(NodeUtil.isLhs(n,    child.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	14	None	replace
86	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	10	61	replace
87	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	10	61	replace
88	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	10	52	replace
89	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	10	52	replace
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	4	55	replace
91	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	4	55	replace
92	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	4	None	replace
93	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
94	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
95	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
96	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
97	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
98	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n,  variable.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	11	None	replace
99	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	11	None	replace
100	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	11	None	replace
101	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n,  variable.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
102	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
103	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	6	61	replace
104	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	6	61	replace
105	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	6	61	replace
106	[BUG]  [BUGGY]  if(NodeUtil.isLhs(var,  n.getParent()))  {  [CE]  cannot  find  symbol  var  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(var,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(var,  n.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  var	13	None	replace
107	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	13	None	replace
108	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	15	None	add
109	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Preconditions.checkState(variable.equals(n.getString()));  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()));	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
110	[BUG]  [BUGGY]  Predicates.checkNotNull(variable);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicates.checkNotNull(variable);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkNotNull(variable);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
111	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild();  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString());  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString());	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
113	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	2	None	replace
114	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	2	None	replace
115	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	2	None	replace
116	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	16	61	replace
117	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	16	61	replace
118	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	16	None	replace
119	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	16	None	replace
120	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	16	61	replace
121	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	16	61	replace
122	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
123	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
124	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	8	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	8	57	replace
126	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	8	57	replace
127	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	8	None	replace
128	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&&  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&&  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&&	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
130	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
131	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
132	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
133	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
134	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	61	replace
135	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	61	replace
136	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	10	None	replace
137	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  parent.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent.getParent()))  {	  if(NodeUtil.isLhs(n,    child.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	14	None	replace
138	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent()))  {  [CE]  cannot  find  symbol  state  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getParent()))  {	  if(NodeUtil.isLhs(n,    child.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	14	None	replace
139	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	add
140	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	5	None	add
141	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isFunction(n,  child)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	10	None	replace
142	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
143	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
144	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
145	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	10	55	replace
146	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
147	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getparent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getparent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getparent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	add
148	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()));  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString()));	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
149	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
150	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Preconditions.checkState(variable.length()  ==  0);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()  ==  0);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
151	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
152	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  illegal  start  of  type	12	None	replace
153	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	13	61	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	13	61	replace
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	13	57	replace
156	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	13	57	replace
157	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	13	61	replace
158	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	13	61	replace
159	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	13	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	13	57	replace
161	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	13	57	replace
162	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	4	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
164	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	4	57	replace
165	[BUG]  [BUGGY]  if(NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	8	None	replace
166	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	add
167	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	add
168	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&|  variable.equals(n.getString()))  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {    [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&|  variable.equals(n.getString()))  {  [BUGGY]        return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())&|  variable.equals(n.getString()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
