bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variables.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	17	52	replace
2	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variables.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	17	52	replace
3	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variables.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
4	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
5	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
6	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	72	None	replace
7	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
8	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	52	replace
9	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	52	replace
10	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	61	replace
11	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	61	replace
12	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType(),  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType(),  variable))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getType()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getType()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
14	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
15	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getType()))  {  [CE]  cannot  find  symbol  child  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getType()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  cannot  find  symbol  child	85	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
17	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())&&!variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
18	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	30	None	replace
19	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	30	None	replace
20	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	30	61	replace
21	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	30	61	replace
22	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	30	None	replace
23	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	142	None	add
24	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	142	None	add
25	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	142	None	add
26	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString  [CE]  ')'  expected  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString	  	non-compiled	[CE]  ')'  expected	142	None	add
27	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get	  	non-compiled	[CE]  ')'  expected	142	None	add
28	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()!=  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]              RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()!=  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()!=  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	142	None	add
29	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n  [CE]  ')'  expected  [FE]                RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n	  	non-compiled	[CE]  ')'  expected	142	None	add
30	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getStr  [CE]  ')'  expected  [FE]                  RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getStr  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getStr	  	non-compiled	[CE]  ')'  expected	142	None	add
31	[BUG]  [BUGGY]  Node  child  =  n.getNext();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getNext();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getNext();	  Node    child    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  Node  child  =  n.getPreviousChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getPreviousChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getPreviousChild();	  Node    child    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  Node  child  =  n.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getParent();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getParent();	  Node    child    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
35	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
36	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	163	None	add
37	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
38	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
39	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getFirstChild()))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    child.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
40	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getFirstChild()))  {  [CE]  cannot  find  symbol  state  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    child.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  state	33	None	replace
41	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable.getFirstChild()))  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    child.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
42	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
43	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	46	None	add
44	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
45	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
46	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
47	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
48	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	122	61	replace
49	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	122	61	replace
50	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	61	replace
51	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	61	replace
52	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	52	replace
53	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	52	replace
54	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	52	replace
55	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	122	52	replace
56	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
57	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	122	None	replace
58	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	120	None	add
59	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	120	None	add
60	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	120	None	add
61	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	120	None	add
62	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
63	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  }  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  }	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
64	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  ')  [CE]  unclosed  character  literal  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  ')  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  ')	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
65	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
66	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  ==  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  ==  '	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
67	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
68	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
69	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
70	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
71	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp(Node.SOURCENAME_PROP))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
72	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getProp	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
73	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())  &&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
74	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
75	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
76	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable.getString());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
77	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  variable.getString());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  variable.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  variable.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
78	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(var  variable.getString());  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(var  variable.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(var  variable.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  ')'  expected	112	None	replace
79	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString()  +  1);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString()  +  1);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n.getString()  +  1);	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
80	[BUG]  [BUGGY]  Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(n.getString(),  variable);	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
81	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  n.getString());  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(n,  n.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
82	[BUG]  [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
83	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME,  variable);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.NAME,  variable);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
84	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
85	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.NAME);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
86	[BUG]  [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
88	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild().getParent()))  {	  if(NodeUtil.isLhs(n,    parent.getParent()))    {    	compilable	  [FE]  RuntimeException  	137	61	replace
89	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getParent()))  {  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild().getParent()))  {	  if(NodeUtil.isLhs(n,    parent.getParent()))    {    	compilable	  [FE]  RuntimeException  	137	61	replace
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild().getNext()))  {	  if(NodeUtil.isLhs(n,    parent.getParent()))    {    	compilable	  [FE]  RuntimeException  	137	61	replace
91	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getNext()))  {  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild().getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild().getNext()))  {	  if(NodeUtil.isLhs(n,    parent.getParent()))    {    	compilable	  [FE]  RuntimeException  	137	61	replace
92	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  RuntimeException  	63	61	replace
93	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  RuntimeException  	63	61	replace
94	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	63	52	replace
95	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	63	52	replace
96	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  RuntimeException  	63	61	replace
97	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	compilable	  [FE]  RuntimeException  	63	61	replace
98	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	add
99	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	68	None	add
100	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	68	None	add
101	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	add
102	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	68	None	add
103	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
104	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	54	None	add
105	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
106	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.getLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
107	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.hasLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
108	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())	  	non-compiled	[CE]  ')'  expected	54	None	add
109	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	167	None	replace
110	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	167	None	replace
111	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
112	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	143	None	replace
113	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	143	None	replace
114	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	143	None	replace
115	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	143	None	replace
116	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	143	None	replace
117	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
118	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
119	[BUG]  [BUGGY]  if(NodeUtil.isFunction(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
120	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
121	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
122	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getLastChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getLastChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getLastChild();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
123	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getNext();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getNext();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getNext();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
124	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  variable.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  variable.getFirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  variable.getFirstChild();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
125	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild().getNext();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getFirstChild().getNext();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
126	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getPreviousChild();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getPreviousChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getPreviousChild();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
127	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getParent();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getParent();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getParent();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
128	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())&&!variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	44	None	replace
129	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	44	None	replace
130	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())&&!variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	44	None	replace
131	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equalsIgnoreCase(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equalsIgnoreCase(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&!variable.equalsIgnoreCase(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	44	None	replace
132	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||!variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	44	None	replace
133	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	44	None	replace
134	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
135	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getQualifiedName()))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getQualifiedName()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getQualifiedName()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
136	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getName()))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getName()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getName()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
137	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getType()))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getType()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
138	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext()))  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getNext()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
139	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  state	73	None	replace
140	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
142	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
143	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	156	61	replace
144	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	156	61	replace
145	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	156	61	replace
146	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	156	61	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
148	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
149	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getChildCount())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	156	None	replace
150	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	156	None	replace
151	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	156	None	replace
152	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
153	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	118	None	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	add
155	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	86	None	add
156	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	86	None	add
157	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	add
158	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	86	None	add
159	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	11	None	replace
160	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  }	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
161	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
162	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
163	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  ==  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  ==  '	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	11	None	replace
164	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
165	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
166	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	161	52	replace
167	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	161	52	replace
168	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  RuntimeException  	161	61	replace
169	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  VariableLiveness.KILL.equals(variable))  {  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  RuntimeException  	161	61	replace
170	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  VariableLiveness.KILL.equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	161	None	replace
171	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  RuntimeException  	161	55	replace
172	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  VariableLiveness.KILL.equals(variable))  {  [FE]  RuntimeException  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  RuntimeException  	161	55	replace
173	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	161	61	replace
174	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	161	61	replace
175	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  VariableLiveness.KILL.equals(variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	161	None	replace
176	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	161	None	replace
177	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getString());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n.getString());	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
178	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  child);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  child);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
179	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getType());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getType());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n.getType());	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
180	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  state);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  state);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  state);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
181	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getFirstChild());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getFirstChild());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n.getFirstChild());	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
182	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getLineno());  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getLineno());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n.getLineno());	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
183	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getJSDocInfo());  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n.getJSDocInfo());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n.getJSDocInfo());	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
184	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  variable,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	99	None	replace
185	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state,  variable,  n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  state	99	None	replace
186	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.NAME)  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.NAME)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.NAME)  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
187	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
188	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
189	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  variable,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	99	None	replace
190	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(child,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	84	None	replace
191	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent(),  variable))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent(),  variable))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
192	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getString()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
193	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	84	None	replace
194	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  variable,  n.getParent()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  variable,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
195	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isFunction(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	84	None	replace
196	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext(),  variable))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext(),  variable))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
197	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
198	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	94	61	replace
199	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	94	61	replace
200	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
201	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
202	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	116	None	add
203	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	116	None	add
204	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	116	None	add
205	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	116	None	add
206	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  ')  [CE]  unclosed  character  literal  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  ')  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  ')	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
207	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  }  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  }	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
208	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
209	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	59	None	replace
210	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
211	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
212	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
213	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	add
214	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	157	None	add
215	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	157	None	add
216	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	add
217	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	157	None	add
218	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	164	52	replace
219	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	164	52	replace
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	164	57	replace
221	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	164	57	replace
222	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	add
223	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	82	None	add
224	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	82	None	add
225	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	add
226	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	82	None	add
227	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
228	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
229	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  If(NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  If(NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    If(NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  ';'  expected	35	None	add
230	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
231	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
232	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||(NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  ')'  expected  [FE]              RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||(NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||(NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  ')'  expected	35	None	add
233	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  <  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [CE]  illegal  start  of  type  [FE]                RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  <  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext()))  <  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
234	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
235	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
236	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
237	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
238	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
239	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getNext()))  {	  if(NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  cannot  find  symbol  child	36	None	replace
240	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  n.getNext()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  n.getNext()))  {	  if(NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	36	None	replace
241	[BUG]  [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
242	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
243	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
244	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR,  variable);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR,  variable);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
245	[BUG]  [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
247	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  null.getParent()))  {  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  null.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  null.getParent()))  {	  if(NodeUtil.isLhs(var,    n.getParent()))    {    	non-compiled	[CE]  <null>  cannot  be  dereferenced	106	None	replace
248	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	87	None	replace
249	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	87	None	replace
250	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	87	61	replace
251	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	87	61	replace
252	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	115	None	replace
253	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
254	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getString()))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  ')'  expected	115	None	replace
255	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getString()))  {  [CE]  cannot  find  symbol  v  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  v	115	None	replace
256	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
257	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
258	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
259	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
260	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
261	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
262	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
263	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
264	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	96	None	replace
265	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
266	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
267	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	61	replace
268	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	61	replace
269	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	89	None	replace
270	[BUG]  [BUGGY]  if(NodeUtil.isRemovableAssignmentOp(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovableAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovableAssignmentOp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
271	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	61	replace
272	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	61	replace
273	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isVar(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	52	replace
274	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	52	replace
275	[BUG]  [BUGGY]  if(NodeUtil.isName(child),  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child),  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child),  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	165	None	replace
276	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isName(n),  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	165	None	replace
277	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.VAR  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.VAR  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	165	52	replace
278	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.VAR  &&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.VAR  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.VAR  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	165	52	replace
279	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.CALL  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.CALL  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	165	53	replace
280	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.CALL  &&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.CALL  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent().getType()  ==  Token.CALL  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	165	53	replace
281	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	add
282	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	add
283	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  ';'  expected	104	None	add
284	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	add
285	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	add
286	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()  ==  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()  ==  1);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()  ==  1);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()!=  0);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()!=  0);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()!=  0);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkState(n.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(n.length()  ==  0);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(n.length()  ==  0);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()  ==  2);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()  ==  2);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()  ==  2);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()  >=  0);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()  >=  0);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()  >=  0);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()!=  1);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()!=  1);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()!=  1);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
292	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
293	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()  +  1));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()  +  1));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()  +  1));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(!variable.equals(n.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(n.equals(variable.getString()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(n.equals(variable.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(n.equals(variable.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
296	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString(),  n.getString()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString(),  n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString(),  n.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
297	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  n.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()),  n.getType()  ==  Token.NAME);	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
298	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	126	None	replace
299	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	103	None	replace
300	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
301	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
302	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	103	None	replace
303	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
304	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
305	[BUG]  [BUGGY]  if(NodeUtil.isRemovableAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovableAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovableAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
306	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getChildCount())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	13	None	replace
307	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getLastChild(),  variable);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getLastChild(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getLastChild(),  variable);	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
308	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getString());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getString());	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
309	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLastChild());  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLastChild());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLastChild());	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
310	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  child);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  child);	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
311	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLocalPart());  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLocalPart());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  n.getLocalPart());	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
312	[BUG]  [BUGGY]  Predicates.matchRemovableAssigns(n.getFirstChild(),  variable);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.matchRemovableAssigns(n.getFirstChild(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.matchRemovableAssigns(n.getFirstChild(),  variable);	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
313	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
314	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	29	None	add
315	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
316	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getfirstChild())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
317	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
318	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	47	None	replace
319	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	47	None	replace
320	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	47	None	replace
321	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	47	61	replace
322	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	47	61	replace
323	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	97	None	replace
324	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	97	None	replace
325	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	158	61	replace
326	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	158	61	replace
327	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
328	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
329	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	158	61	replace
330	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	158	61	replace
331	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	158	61	replace
332	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	158	61	replace
333	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
334	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
335	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  state)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  state)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  state)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  state	141	None	replace
336	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  variable)&&  variable.equals(n.getString()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  variable)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  variable)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	141	None	replace
337	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  VAR_LIVE)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  VAR_LIVE  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  VAR_LIVE)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  VAR_LIVE)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  VAR_LIVE	141	None	replace
338	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  n)&&  variable.equals(n.getString()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	141	None	replace
339	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  VAR)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  VAR  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  VAR)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  VAR)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  VAR	141	None	replace
340	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  parent)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  parent)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  parent)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	141	None	replace
341	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
342	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
343	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
344	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
345	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	93	None	replace
346	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	57	None	replace
347	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	57	None	replace
348	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.get	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	57	None	replace
349	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	57	None	replace
350	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	57	None	replace
351	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
352	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
353	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString()),  variable)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
354	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
355	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()),  variable)  {  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
356	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1)&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString()  +  1)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	43	None	replace
357	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  n.getType()  ==  Token.VAR  &&  n.getString().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
358	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1)||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString()  +  1)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString()  +  1)||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
359	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
360	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  n.getString().equals(variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  n.getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  n.getString().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
361	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	136	None	replace
362	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getNext())&&  n.equals(n.getString()))  {  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getNext())&&  n.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var  variable,  n.getNext())&&  n.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	136	None	replace
363	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
364	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
365	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
366	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
367	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.e  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.e  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getNext())&&  variable.e	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
368	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
369	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    If(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	88	None	add
370	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
371	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()));  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
372	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	88	None	add
373	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
374	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
375	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
376	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
377	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getSourceName()))  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getSourceName()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getSourceName()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
378	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
379	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
380	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  If(NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  If(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    If(NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  ';'  expected	31	None	add
381	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
382	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getlastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getlastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getlastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
383	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	41	None	replace
384	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variables.getString()))  {  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variables.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variables.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  	41	None	replace
385	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  module.getString()))  {  [CE]  cannot  find  symbol  module  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  module.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  module.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  module	41	None	replace
386	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  null.getString()))  {  [CE]  <null>  cannot  be  dereferenced  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  null.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  null.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  <null>  cannot  be  dereferenced	41	None	replace
387	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	42	None	replace
388	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	42	None	replace
389	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	42	None	replace
390	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  state.isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  state.isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  state.isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	42	None	replace
391	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	61	replace
392	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	61	replace
393	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	131	None	replace
394	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString())||  variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString())||  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString())||  variable.equals(n.getString()));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()),  variable);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString()),  variable);	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
396	[BUG]  [BUGGY]  Preconditions.checkArgument(!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(!variable.equals(n.getString()));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
397	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()  +  1));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()  +  1));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString()  +  1));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
398	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString(),  n.getString()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString(),  n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString(),  n.getString()));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
399	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	26	None	replace
400	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	26	61	replace
401	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	26	61	replace
402	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	26	None	replace
403	[BUG]  [BUGGY]  Predicates.checkNotNull(n);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkNotNull(n);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkNotNull(n);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
404	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(n.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(n.getType()  ==  Token.NAME);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
405	[BUG]  [BUGGY]  Predicates.checkState(variable!=  null);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable!=  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable!=  null);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
406	[BUG]  [BUGGY]  Predicates.checkState(variable  ==  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable  ==  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable  ==  null);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
407	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(n.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(n.getType()  ==  Token.VAR);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
408	[BUG]  [BUGGY]  Predicates.checkNotNull(n,  variable);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkNotNull(n,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkNotNull(n,  variable);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
409	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
410	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
411	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
412	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
413	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
414	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state,  n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state,  n.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  state	100	None	replace
415	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	100	None	replace
416	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  variable,  n.getString()))  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  ';'  expected	100	None	replace
417	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variables,  n.getString()))  {  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variables,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variables,  n.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  	100	None	replace
418	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	20	61	replace
419	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	20	61	replace
420	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));  [CE]  illegal  start  of  type  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Context.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Context.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
421	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));  [CE]  illegal  start  of  type  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(NodeUtil.isLhs(n,  n.getFirstChild()));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
422	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  type  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Context.reportCodeChange();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Context.reportCodeChange();	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
423	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isName(n));  [CE]  illegal  start  of  type  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Context.checkState(NodeUtil.isName(n));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Context.checkState(NodeUtil.isName(n));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
424	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Context.checkState(n.getType()  ==  Token.NAME);	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
425	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isLhs(n,  variable));  [CE]  illegal  start  of  type  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(NodeUtil.isLhs(n,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(NodeUtil.isLhs(n,  variable));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
426	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	102	None	add
427	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	102	None	add
428	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  ';'  expected	102	None	add
429	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getfirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	102	None	add
430	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	91	None	replace
431	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  cannot  find  symbol  child	91	None	replace
432	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  cannot  find  symbol  child	91	None	replace
433	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
434	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	78	61	replace
435	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	78	61	replace
436	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	117	61	replace
437	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	117	61	replace
438	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	117	None	replace
439	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	117	None	replace
440	[BUG]  [BUGGY]  if(NodeUtil.isName(n,  variable)||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n,  variable)||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n,  variable)||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;	162	None	replace
441	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	162	None	replace
442	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
443	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	162	None	replace
444	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	162	None	replace
445	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	134	None	add
446	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	134	None	add
447	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	134	None	add
448	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	134	None	add
449	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	add
450	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	48	None	add
451	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	add
452	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	add
453	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
454	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getString())  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getString())	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
455	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getPar  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getPar  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getPar	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
456	[BUG]  [BUGGY]  if(NodeUtil.isLhs(varable,  n,  variable.getString()))  {  [CE]  cannot  find  symbol  varable  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(varable,  n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(varable,  n,  variable.getString()))  {	  if(NodeUtil.isLhs(child,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  varable	98	None	replace
457	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getChildCount()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  child	81	None	replace
458	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()  -  1))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()  -  1))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount()  -  1))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	81	None	replace
459	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getChildCount()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
460	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  child	81	None	replace
461	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount(),  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getChildCount(),  variable))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	81	None	replace
462	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	81	None	replace
463	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getChildCount()))  {  [CE]  cannot  find  symbol  parent  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	81	None	replace
464	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
465	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	130	61	replace
466	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	130	61	replace
467	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	83	61	replace
468	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	83	61	replace
469	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
470	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
471	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getLineno())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	83	None	replace
472	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	52	None	replace
473	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable.getParent()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
474	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent()))  {  [CE]  cannot  find  symbol  var  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  var	52	None	replace
475	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	80	None	replace
476	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	80	None	replace
477	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  variable,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	80	None	replace
478	[BUG]  [BUGGY]  Node  child  =  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  node.getLastChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  node.getLastChild();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
479	[BUG]  [BUGGY]  Node  child  =  n.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.removeFirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.removeFirstChild();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
480	[BUG]  [BUGGY]  Node  child  =  n.getLastChild().getNext();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getLastChild().getNext();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild().getNext();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
481	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getparent()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	147	None	replace
482	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	24	None	replace
483	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
484	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	58	61	replace
485	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	58	61	replace
486	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	58	61	replace
487	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	58	61	replace
488	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getChildCount())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getChildCount())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variables.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	108	None	replace
489	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
490	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	64	None	add
491	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
492	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString()));  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString()));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
493	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	64	None	add
494	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
495	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
496	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  ';'  expected	25	None	add
497	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getfirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
498	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())	  	non-compiled	[CE]  ')'  expected	25	None	add
499	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	105	None	replace
500	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	105	61	replace
501	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	105	61	replace
502	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  parent.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    child.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	66	None	replace
503	[BUG]  [BUGGY]  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ';'  expected	19	None	replace
504	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
505	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getStr  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getStr  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getStr	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
506	[BUG]  [BUGGY]  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ';'  expected	19	None	replace
507	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
508	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
509	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
510	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getString()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    nodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	146	None	replace
511	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ';'  expected	62	None	replace
512	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ';'  expected	62	None	replace
513	[BUG]  [BUGGY]  If(NodeUtil.isFunction(n,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isFunction(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isFunction(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ';'  expected	62	None	replace
514	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	69	None	replace
515	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
516	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
517	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	69	None	replace
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	69	57	replace
519	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  AssertionFailedError  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	69	57	replace
520	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
521	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
522	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
523	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
524	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
525	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
526	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	114	None	replace
527	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable,  n.getParent()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String,Node)  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String,Node)	114	None	replace
528	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(child,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	114	None	replace
529	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getString()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)	114	None	replace
530	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  parent,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  parent,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  parent,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	114	None	replace
531	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  child,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	114	None	replace
532	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	add
533	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  ';'  expected	90	None	add
534	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	add
535	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	add
536	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())	  	non-compiled	[CE]  ')'  expected	90	None	add
537	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
538	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	153	None	add
539	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
540	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	153	None	add
541	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
542	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
543	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  state  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
544	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getState()))  {  [CE]  cannot  find  symbol  state  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getState()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getState()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
545	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  state.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  state.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  state.getParent()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	138	None	replace
546	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getStatement()))  {  [CE]  cannot  find  symbol  state  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getStatement()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getStatement()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
547	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
548	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	23	None	add
549	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
550	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getfirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getfirstChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
551	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  child.getFirstChild())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
552	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString())||  variable.equals(n.getString()));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
553	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()  +  1));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString()  +  1));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()  +  1));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
554	[BUG]  [BUGGY]  Predicates.checkState(n.equals(variable.getString()));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(n.equals(variable.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(n.equals(variable.getString()));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
555	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  variable);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()),  variable);	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
556	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  state);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  state);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()),  state);	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
557	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString(),  n.getString()));  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString(),  n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString(),  n.getString()));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
558	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	121	61	replace
559	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	121	61	replace
560	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	121	None	replace
561	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	121	None	replace
562	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	121	None	replace
563	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	145	None	replace
564	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
565	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getNext().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
566	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getString().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	61	replace
567	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getString().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getString().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	61	replace
568	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  n.getNext().equals(variable))  {  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
569	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	61	replace
570	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  n.getNext().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	61	replace
571	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	135	None	replace
572	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	135	None	replace
573	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	135	61	replace
574	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	135	61	replace
575	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	135	56	replace
576	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	135	56	replace
577	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	135	None	replace
578	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	15	61	replace
579	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	15	61	replace
580	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
581	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  If(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  If(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    If(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {	  	non-compiled	[CE]  ';'  expected	144	None	add
582	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getPrevious().equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getPrevious().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(n)&&  n.getPrevious().equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
583	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getParent().equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getParent().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(n)&&  n.getParent().equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
584	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getNext().equals(variable));  [CE]  reached  end  of  file  while  parsing  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getNext().equals(variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(n)&&  n.getNext().equals(variable));	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	49	57	replace
586	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	49	57	replace
587	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	49	None	replace
588	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	49	None	replace
589	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	49	61	replace
590	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	49	61	replace
591	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	49	52	replace
592	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	49	52	replace
593	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
594	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
595	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	50	None	add
596	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
597	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  n.getLastChild()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	32	None	replace
598	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	32	None	replace
599	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	55	None	replace
600	[BUG]  [BUGGY]  if(NodeUtil.isFunction(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	55	None	replace
601	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	55	None	replace
602	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	55	61	replace
603	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	55	61	replace
604	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString(),  variable))  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString(),  variable))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	39	None	replace
605	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  state)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  state)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable),  state)  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  ')'  expected	39	None	replace
606	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill)  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  ')'  expected	39	None	replace
607	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&!variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable)&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	39	None	replace
608	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	39	None	replace
609	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getString(),  n))  {  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getString(),  n))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getString(),  n))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
610	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  IS_VARIABLE_LIVE)  {  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  IS_VARIABLE_LIVE)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable),  IS_VARIABLE_LIVE)  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  ')'  expected	39	None	replace
611	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	40	None	replace
612	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	40	None	replace
613	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	40	None	replace
614	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equalsIgnoreCase(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equalsIgnoreCase(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&  variable.equalsIgnoreCase(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	40	None	replace
615	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&  variable.equals(n.getString())||  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	40	None	replace
616	[BUG]  [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
617	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()!=  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
618	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(variable.getType()  ==  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
619	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK,  variable);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK,  variable);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
620	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
621	[BUG]  [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getNext();  Preconditions.checkState(child.getType()  ==  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
622	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getString());  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  n.getString());	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
623	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  n);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  n);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  n);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
624	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getFirstChild());  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getFirstChild());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  n.getFirstChild());	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
625	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getType());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getType());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  n.getType());	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
626	[BUG]  [BUGGY]  Predicates.matchRemovableAssigns(n,  variable);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.matchRemovableAssigns(n,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.matchRemovableAssigns(n,  variable);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
627	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getLineno());  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getLineno());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  n.getLineno());	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
628	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getJSDocInfo());  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  n.getJSDocInfo());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  n.getJSDocInfo());	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
629	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  child);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  child);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  ';'  expected	6	None	replace
630	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  state);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  state);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  state);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  ';'  expected	6	None	replace
631	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  null);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  null);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  ';'  expected	6	None	replace
632	[BUG]  [BUGGY]  Predicates.matchRemovableAssignsElimination(n.getString(),  variable);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.matchRemovableAssignsElimination(n.getString(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.matchRemovableAssignsElimination(n.getString(),  variable);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
633	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  false);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  false);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n.getString(),  variable,  false);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  ';'  expected	6	None	replace
634	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(variable.getString(),  n);  [CE]  ';'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(variable.getString(),  n);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(variable.getString(),  n);	  Predicate    matchRemovableAssignsElimination(n.getString(),    variable);    	non-compiled	[CE]  ';'  expected	6	None	replace
635	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	add
636	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	125	None	add
637	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	125	None	add
638	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	add
639	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	125	None	add
640	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
641	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	71	None	add
642	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	71	None	add
643	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
644	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
645	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
646	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	159	None	replace
647	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
648	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
649	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
650	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	159	None	replace
651	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
652	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
653	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
654	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPar	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	77	None	replace
655	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isName(child)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	92	None	replace
656	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getParent()))  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable.getParent()))  {	  if(NodeUtil.isName(child)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
657	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(var  variable,  n.getParent()))  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(var  variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(var  variable,  n.getParent()))  {	  if(NodeUtil.isName(child)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	92	None	replace
658	[BUG]  [BUGGY]  if(NodeUtil.isFunction(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(child)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	51	None	replace
659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	51	57	replace
660	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	51	57	replace
661	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varvariable,  n.getParent()))  {  [CE]  cannot  find  symbol  var  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varvariable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varvariable,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  var	113	None	replace
662	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getParent()))  {  [CE]  cannot  find  symbol  v  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(v,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  v	113	None	replace
663	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	160	None	add
664	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  If(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  If(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    If(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  	non-compiled	[CE]  ';'  expected	160	None	add
665	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	160	None	add
666	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VableLiveness.KILL.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    if(NodeUtil.isLhs(n,  n.getParent())||  VableLiveness.KILL.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	160	None	add
667	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable)  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable)  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable)	  	non-compiled	[CE]  ')'  expected	160	None	add
668	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	154	None	replace
669	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	154	None	replace
670	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
671	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
672	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
673	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
674	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	95	None	replace
675	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	add
676	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  ';'  expected	155	None	add
677	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	add
678	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	add
679	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]            AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isLhs(n,  n.getName())||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	add
680	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]              AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isLhs(n,  n.getType())||  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	155	None	add
681	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
682	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
683	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  VariableLiveness.KILL,  variable.getString()))  {  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  VariableLiveness.KILL,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  VariableLiveness.KILL,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
684	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent,  variable.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  parent,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	101	None	replace
685	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state,  variable.getString()))  {  [CE]  cannot  find  symbol  state  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  state	101	None	replace
686	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  VAR_LIST_VARIABLE,  variable.getString()))  {  [CE]  cannot  find  symbol  VAR_LIST_VARIABLE  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  VAR_LIST_VARIABLE,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  VAR_LIST_VARIABLE,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  VAR_LIST_VARIABLE	101	None	replace
687	[BUG]  [BUGGY]  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
688	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.e  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.e  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.e	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
689	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
690	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
691	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
692	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
693	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	132	None	add
694	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  ';'  expected	132	None	add
695	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  	non-compiled	[CE]  ')'  expected	132	None	add
696	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	132	None	add
697	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [CE]  ')'  expected  [FE]            RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()	  	non-compiled	[CE]  ')'  expected	132	None	add
698	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	67	None	replace
699	[BUG]  [BUGGY]  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	9	None	replace
700	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
701	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.e  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.e  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  variable.e	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
702	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getParent())&&	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
703	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
704	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
705	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	103	None	replace
706	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isCall(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	103	52	replace
707	[BUG]  [BUGGY]  if(NodeUtil.isCall(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isCall(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	103	52	replace
708	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	121	61	replace
709	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	121	61	replace
710	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	121	None	replace
711	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	74	None	replace
712	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  	74	None	replace
713	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
714	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
715	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent())&	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
716	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getName())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getName())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getName())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
717	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirst())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
718	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
719	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variables.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	17	52	replace
720	[BUG]  [BUGGY]  if(VariableLiveness.KILL.equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variables.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	17	52	replace
721	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isGetProp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isGetProp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	52	replace
722	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isGetProp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isGetProp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	52	replace
723	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
724	[BUG]  [BUGGY]  if(NodeUtil.isReadBeforeKill(child,  n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isReadBeforeKill(child,  n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isReadBeforeKill(child,  n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
725	[BUG]  [BUGGY]  if(NodeUtil.isLhs(var,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  var  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(var,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(var,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(child,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  var	34	None	replace
726	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  parent  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(child,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	34	None	replace
727	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
728	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(child)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
729	[BUG]  [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isFunction(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n,  variable)&&  NodeUtil.isFunction(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
730	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(parent,  n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	84	None	replace
731	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isFunction(n,  n.getParent()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isFunction(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isFunction(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	84	None	replace
732	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	113	None	replace
733	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	113	None	replace
734	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(value,  n.getParent()))  {  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(value,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(value,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  value	113	None	replace
735	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getPrevious())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	15	None	replace
736	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	130	None	replace
737	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	130	None	replace
738	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	130	None	replace
739	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getFirst())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getFirst())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&!NodeUtil.isLhs(child,  n.getFirst())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	130	None	replace
740	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	91	None	replace
741	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	91	None	replace
742	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getNext()))  {  [CE]  method  isAssignmentOp  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  method  isAssignmentOp  in  class  NodeUtil  cannot  be  applied  to  given  types;	91	None	replace
743	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	91	52	replace
744	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	91	52	replace
745	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(child)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	135	None	replace
746	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	135	None	replace
747	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.mayHaveSideEffects(n,  n.getNext())  &&  variable.equals(n.getString()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.mayHaveSideEffects(n,  n.getNext())  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.mayHaveSideEffects(n,  n.getNext())  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	135	None	replace
748	[BUG]  [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.BLOCK);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.getType()  ==  Token.BLOCK);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
749	[BUG]  [BUGGY]  Node  child  =  n.getfirstChild();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getfirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getfirstChild();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
750	[BUG]  [BUGGY]  if(NodeUtil.isFunction(child,  variable)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(child,  variable)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(child,  variable)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	141	None	replace
751	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  name)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  name  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  name)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  name)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  name	141	None	replace
752	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
753	[BUG]  [BUGGY]  Preconditions.checkNotNull(variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkNotNull(variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkNotNull(variable.equals(n.getString()));	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
754	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString(),  variable))  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getString(),  variable))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	39	None	replace
755	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	39	None	replace
756	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	133	None	replace
757	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	133	None	replace
758	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	133	None	replace
759	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
760	[BUG]  [BUGGY]  if(NodeUtil.isLhs(var,  n.getNext()))  {  [CE]  cannot  find  symbol  var  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(var,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(var,  n.getNext()))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	non-compiled	[CE]  cannot  find  symbol  var	107	None	replace
761	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext()))  {  [CE]  cannot  find  symbol  parent  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getNext()))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	107	None	replace
762	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	10	None	replace
763	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent,  n.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	100	None	replace
764	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
765	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	75	None	replace
766	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
767	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	75	None	replace
768	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
769	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	85	None	replace
770	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getType()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getType()))  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  cannot  find  symbol  child	85	None	replace
771	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	55	None	replace
772	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	55	None	replace
773	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	55	52	replace
774	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	55	52	replace
775	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(child,  variable);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(child,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(child,  variable);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
776	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  child);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  child);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
777	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  child);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  child);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
778	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  null);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  null);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
779	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	122	None	replace
780	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getLastChild()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getLastChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	122	None	replace
781	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
782	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	77	None	replace
783	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	72	None	replace
784	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	52	replace
785	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	72	52	replace
786	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	49	None	replace
787	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(child)||  NodeUtil.isLhs(n,  n.getNext()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	49	None	replace
788	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	add
789	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	90	None	add
790	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
791	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
792	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	93	None	replace
793	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ')'  expected	93	None	replace
794	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isReadBeforeKill(n,  variable));  [CE]  illegal  start  of  type  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(NodeUtil.isReadBeforeKill(n,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(NodeUtil.isReadBeforeKill(n,  variable));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
795	[BUG]  [BUGGY]  Predicates.checkState(NodeUtil.isName(n));  [CE]  illegal  start  of  type  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(NodeUtil.isName(n));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(NodeUtil.isName(n));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
796	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(n));  [CE]  illegal  start  of  type  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(NodeUtil.isName(n));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(NodeUtil.isName(n));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
797	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	add
798	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	add
799	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	95	None	replace
800	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
801	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	95	None	replace
802	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()  +  1))  {  [CE]  cannot  find  symbol  child  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getString()  +  1))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getString()  +  1))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  cannot  find  symbol  child	45	None	replace
803	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  child.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  child.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  child.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	143	None	replace
804	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString  [CE]  ')'  expected  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getNext().getType()  ==  Token.VAR  &&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	143	None	replace
805	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	143	61	replace
806	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getNext().getType()  ==  Token.VAR  ||!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    n.getNext().getType()    ==    Token.VAR    &&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	143	61	replace
807	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	159	None	replace
808	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	80	None	replace
809	[BUG]  [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;	80	None	replace
810	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	167	None	replace
811	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
812	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	167	None	replace
813	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	167	None	replace
814	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
815	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
816	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
817	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	158	None	replace
818	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	47	None	replace
819	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	47	None	replace
820	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	47	52	replace
821	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	47	52	replace
822	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
823	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
824	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.mayHaveSideEffects(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.mayHaveSideEffects(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	52	replace
825	[BUG]  [BUGGY]  if(NodeUtil.mayHaveSideEffects(n)&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.mayHaveSideEffects(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.mayHaveSideEffects(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	8	52	replace
826	[BUG]  [BUGGY]  If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
827	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals  [CE]  ')'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
828	[BUG]  [BUGGY]  If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
829	[BUG]  [BUGGY]  If(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
830	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.SKILL.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.SKILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    if(NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.SKILL.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	160	None	add
831	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getFirst().equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(n)&&  n.getFirst().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(n)&&  n.getFirst().equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
832	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(var,  n.getParent()))  {  [CE]  cannot  find  symbol  var  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(var,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(var,  n.getParent()))  {	  if(NodeUtil.isName(child)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  var	92	None	replace
833	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	add
834	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	125	None	add
835	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
836	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
837	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
838	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NOdeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  NOdeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  NOdeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
839	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  nodeUtil.isLhs(n,  n.getNext()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  nodeUtil.isLhs(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext())||  nodeUtil.isLhs(n,  n.getNext()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
840	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getType()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
841	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
842	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
843	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())||  variable.equals	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
844	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getType()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	163	None	add
845	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol  child	22	None	replace
846	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPath()))  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol  child	22	None	replace
847	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPath()))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPath()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPath()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
848	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
849	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	26	None	replace
850	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	26	52	replace
851	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	26	52	replace
852	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild().getNext();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild().getNext();	  Node    child    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
853	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getString()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
854	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getPosition())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	add
855	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getType())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	add
856	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
857	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
858	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.e  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.e  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.e	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
859	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	11	None	replace
860	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString())  }	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
861	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equal	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
862	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  <identifier>  expected	11	None	replace
863	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getSource())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getSource())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getSource())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
864	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(n,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(n,  variable))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
865	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(child,  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(child,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())&&  isVariableReadBeforeKill(child,  variable))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
866	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  state  ==  LiveVariablesElimination.KILL)  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())||  state  ==  LiveVariablesElimination.KILL)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())||  state  ==  LiveVariablesElimination.KILL)  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
867	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getProp(Node.SOURCENAME_PROP))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getProp(Node.SOURCENAME_PROP))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getProp(Node.SOURCENAME_PROP))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
868	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
869	[BUG]  [BUGGY]  parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent  ==  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
870	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getProp(Node.SOURCENAME_PROP))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
871	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	42	None	replace
872	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  variable.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	41	None	replace
873	[BUG]  [BUGGY]  if(NodeUtil.isLhs(variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(variable,  n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	41	None	replace
874	[BUG]  [BUGGY]  if(NodeUtil.isLhs(var,  n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(var,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(var,  n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	41	None	replace
875	[BUG]  [BUGGY]  if(NodeUtil.isLhs(varvariable,  n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(varvariable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(varvariable,  n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	41	None	replace
876	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	12	None	replace
877	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getType())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	12	None	replace
878	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	53	None	replace
879	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isRemovable(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
880	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variables.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  	139	None	replace
881	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variables.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	139	None	replace
882	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getParent())&&  variables.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variables.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	139	None	replace
883	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  variable.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	162	None	replace
884	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getPrevious())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
885	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	27	None	add
886	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  child.getNext().equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  child.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  child.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	145	None	replace
887	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isGetProp(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isGetProp(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
888	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(n)&&  n.getNext().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isGetProp(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isGetProp(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
889	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
890	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  n.getNext().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
891	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
892	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getNext())||  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	120	None	add
893	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	134	None	add
894	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	87	None	replace
895	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  VariableLiveness.KILL_LIVE,  variable.getString()))  {  [CE]  cannot  find  symbol  KILL_LIVE  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  VariableLiveness.KILL_LIVE,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  VariableLiveness.KILL_LIVE,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  KILL_LIVE	101	None	replace
896	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  null.getString()))  {  [CE]  <null>  cannot  be  dereferenced  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  null.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  null.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  <null>  cannot  be  dereferenced	101	None	replace
897	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getParent()))  {  [CE]  method  isAssignmentOp  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isAssignmentOp(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getparent()))    {    	non-compiled	[CE]  method  isAssignmentOp  in  class  NodeUtil  cannot  be  applied  to  given  types;	147	None	replace
898	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isGetProp(n,  n.getParent()))  {  [CE]  method  isGetProp  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isGetProp(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isGetProp(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getparent()))    {    	non-compiled	[CE]  method  isGetProp  in  class  NodeUtil  cannot  be  applied  to  given  types;	147	None	replace
899	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	24	None	replace
900	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	24	None	replace
901	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
902	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
903	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
904	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
905	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	117	None	replace
906	[BUG]  [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isRemovable(child)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	117	None	replace
907	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	117	None	replace
908	[BUG]  [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
909	[BUG]  [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
910	[BUG]  [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  n.getName())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
911	[BUG]  [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isReadBeforeKill(n,  variable)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
912	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n,  variable.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n,  variable.getString()))  {	  if(NodeUtil.isLhs(child,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	98	None	replace
913	[BUG]  [BUGGY]  Predicates.checkNotNull(variable,  n);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkNotNull(variable,  n);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkNotNull(variable,  n);	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
914	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  ')'  expected	76	None	replace
915	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext()))    {    	non-compiled	[CE]  ')'  expected	76	None	replace
916	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString())&&!variable.equals(n.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
917	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString())||!variable.equals(n.getString()));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
918	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString())&&  isVariableReadBeforeKill(n,  variable));	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
919	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  state);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  state);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()),  state);	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
920	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())&&!variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getString())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	44	None	replace
921	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  state  ==  LiveVariablesElimination)  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  state  ==  LiveVariablesElimination)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())&&!variable.equals(n.getString())||  state  ==  LiveVariablesElimination)  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	44	None	replace
922	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	105	None	replace
923	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getVar(variable)))  {  [CE]  cannot  find  symbol  state  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getVar(variable)))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getVar(variable)))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
924	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  state.getCurrentNode()))  {  [CE]  cannot  find  symbol  state  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  state.getCurrentNode()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  state.getCurrentNode()))  {	  if(NodeUtil.isLhs(n,    state.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	138	None	replace
925	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	126	None	replace
926	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	126	None	replace
927	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	126	None	replace
928	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]          AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	126	None	replace
929	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(parent,  n.getParent()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	52	None	replace
930	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
931	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	156	57	replace
932	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	156	None	replace
933	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	156	None	replace
934	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	161	None	replace
935	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  AssertionFailedError  	161	57	replace
936	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	compilable	  [FE]  AssertionFailedError  	161	57	replace
937	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	165	None	replace
938	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	165	None	replace
939	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getType()  ==  Token.VAR  &&!NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	165	None	replace
940	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	165	None	replace
941	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(new  Node(n,  variable.getString())))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(new  Node(n,  variable.getString())))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(new  Node(n,  variable.getString())))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
942	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
943	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
944	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
945	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  variable.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  variable.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  variable.getParent()))  {	  if(NodeUtil.isLhs(n,    variable.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	37	None	replace
946	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  '  [CE]  illegal  line  end  in  character  literal  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  '  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  '	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
947	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
948	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())  }  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())  }	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
949	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  ')  [CE]  unclosed  character  literal  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  ')  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString())!=  ')	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
950	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equal  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equal  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equal	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
951	[BUG]  [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
952	[BUG]  [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getLastChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getLastChild();  Preconditions.checkState(variable.getType()  ==  Token.VAR);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
953	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(child.getString()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(child.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getParent())&&  variable.equals(child.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	131	None	replace
954	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.mayHaveSideEffects(n))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.mayHaveSideEffects(n))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	52	replace
955	[BUG]  [BUGGY]  if(NodeUtil.mayHaveSideEffects(n))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.mayHaveSideEffects(n))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.mayHaveSideEffects(n))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	52	replace
956	[BUG]  [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
957	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	132	None	add
958	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	136	None	replace
959	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	136	None	replace
960	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	164	61	replace
961	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isVar(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	164	61	replace
962	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(child.getFirstChild(),  variable);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(child.getFirstChild(),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(child.getFirstChild(),  variable);	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
963	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType())	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  ')'  expected	97	None	replace
964	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getType	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  ')'  expected	97	None	replace
965	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
966	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
967	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
968	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(child,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
969	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())||  variable.equals(n.getString()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	83	None	replace
970	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	96	None	replace
971	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  ')'  expected	96	None	replace
972	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	96	None	replace
973	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
974	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
975	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(child)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
976	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
977	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  state  ==  LiveVariablesElimination$VariableLiveness.KILL)  {  [CE]  reached  end  of  file  while  parsing  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  state  ==  LiveVariablesElimination$VariableLiveness.KILL)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  state  ==  LiveVariablesElimination$VariableLiveness.KILL)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
978	[BUG]  [BUGGY]  if(NodeUtil.mayHaveSideEffects(n,  variable)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.mayHaveSideEffects(n,  variable)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.mayHaveSideEffects(n,  variable)&&  NodeUtil.mayHaveSideEffects(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)	114	None	replace
979	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  n.getNext()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	114	None	replace
980	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  variable))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,String)	114	None	replace
981	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.mayHaveSideEffects(n,  variable.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	114	None	replace
982	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	40	None	replace
983	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLast()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLast()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getLast()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
984	[BUG]  [BUGGY]  Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(variable.getString());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(variable.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignmentsElimination  =  getRemovableAssignmentsElimination(variable.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
985	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	28	None	replace
986	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {  [CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  no  suitable  method  found  for  mayHaveSideEffects(Node,Node)	28	None	replace
987	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getFirstChild()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	28	None	replace
988	[BUG]  [BUGGY]  If(NodeUtil.isLhs(child,  n.getFirstChild()))  {  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isLhs(child,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isLhs(child,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    If(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ';'  expected	62	None	replace
989	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	81	None	replace
990	[BUG]  [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n,  variable)&&  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;	81	None	replace
991	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  variable,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  child	81	None	replace
992	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(child,  variable);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(child,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(child,  variable);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
993	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  null);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  null);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
994	[BUG]  [BUGGY]  Predicates.matchRemovableAssignsElimination(n,  variable);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.matchRemovableAssignsElimination(n,  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.matchRemovableAssignsElimination(n,  variable);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
995	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  false);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  false);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  false);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
996	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  variable,  n);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  variable,  n);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
997	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
998	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
999	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  VariableLiveness.READ.equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  VariableLiveness.READ.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())||  VariableLiveness.READ.equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
1000	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [CE]  ')'  expected  [FE]          RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild())||  NodeUtil.isLhs(n,  n.getLastChild())	  	non-compiled	[CE]  ')'  expected	31	None	add
1001	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.get	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
1002	[BUG]  [BUGGY]  If(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ';'  expected	19	None	replace
1003	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1004	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
1005	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	30	None	replace
1006	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	30	61	replace
1007	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	30	61	replace
1008	[BUG]  [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(parent,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(parent,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	119	None	replace
1009	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	25	None	add
1010	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol  child	123	None	replace
1011	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPosition()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(child,  n.getPosition()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol  child	123	None	replace
1012	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1013	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
1014	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
1015	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	94	None	replace
1016	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
1017	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
1018	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
1019	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	69	52	replace
1020	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	13	None	replace
1021	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	77	None	replace
1022	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  If(NodeUtil.isName(n)&&  NodeUtil.	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1023	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isVar(n,  n.getParent()))  {  [CE]  method  isVar  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isVar(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isVar(n,  n.getParent()))  {	  if(NodeUtil.isVar(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isVar  in  class  NodeUtil  cannot  be  applied  to  given  types;	164	None	replace
1024	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()),  n.getString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()),  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString()),  n.getString());	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1025	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()  + ") ");  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.equals(n.getString()  + ") ");  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.equals(n.getString()  + ") ");	  Preconditions.checkArgument(variable.equals(n.getString()));    	non-compiled	[CE]  	148	None	replace
1026	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  nodeUtil  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  nodeUtil	95	None	replace
1027	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	95	None	replace
1028	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  nodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    nodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	95	None	replace
1029	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(!NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(!NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	76	52	replace
1030	[BUG]  [BUGGY]  if(!NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]          junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(!NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(!NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	76	52	replace
1031	[BUG]  [BUGGY]  if(NodeUtil.isName(variable)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(variable)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(variable)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isName  in  class  NodeUtil  cannot  be  applied  to  given  types;	18	None	replace
1032	[BUG]  [BUGGY]  if(NodeUtil.isName(var)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  var  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(var)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(var)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  var	18	None	replace
1033	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
1034	[BUG]  [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
1035	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
1036	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
1037	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	16	None	replace
1038	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
1039	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())&&  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    VariableLiveness.KILL.equals(variable))    {    	non-compiled	[CE]  cannot  find  symbol  child	161	None	replace
1040	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child))  {  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getfirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	63	None	replace
1041	[BUG]  [BUGGY]  if(VariableUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  VariableUtil  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(VariableUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(VariableUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  VariableUtil	75	None	replace
1042	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	104	None	add
1043	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  ||  variable.equals(n.getString());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  ||  variable.equals(n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  ||  variable.equals(n.getString());	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
1044	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.removeFirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.removeFirstChild();	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
1045	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  +  variable;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  +  variable;  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  n.getFirstChild()  +  variable;	  Predicate    matchRemovableAssignsElimination    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
1046	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  state,  n.getParent()))  {  [CE]  cannot  find  symbol  state  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  state,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  state,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	114	None	replace
1047	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  VAR_LIVE,  n.getParent()))  {  [CE]  cannot  find  symbol  VAR_LIVE  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  VAR_LIVE,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.mayHaveSideEffects(n,  VAR_LIVE,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.mayHaveSideEffects(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  VAR_LIVE	114	None	replace
1048	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild()  ||  variable.equals(n.getString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild()  ||  variable.equals(n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild()  ||  variable.equals(n.getString());	  Node    child    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1049	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	118	None	replace
1050	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	117	None	replace
1051	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	72	61	replace
1052	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	72	61	replace
1053	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	133	None	replace
1054	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getSource()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getSource()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getSource()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1055	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	135	52	replace
1056	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	135	52	replace
1057	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  child.getNext())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	135	None	replace
1058	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	44	61	replace
1059	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&!variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&!variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	44	61	replace
1060	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isRemovable(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
1061	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(v)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(v)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(v)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
1062	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(v2)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(v2)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(v2)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	add
1063	[BUG]  [BUGGY]  Preconditions.checkState(variable.length()  ==  0  ||  variable.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.length()  ==  0  ||  variable.length()  ==  0);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.length()  ==  0  ||  variable.length()  ==  0);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1064	[BUG]  [BUGGY]  Preconditions.checkArgument(variable.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkArgument(variable.length()  ==  0);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkArgument(variable.length()  ==  0);	  Preconditions.checkState(variable.length()    ==    0);    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1065	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getPrevious())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getPrevious())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1066	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString(),  variable))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString(),  variable))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	80	None	replace
1067	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	80	None	replace
1068	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	80	None	replace
1069	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFile()))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFile()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getFile()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getPath()))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
1070	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getFirstChild()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(variable,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(child,    n.getFirstChild()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	34	None	replace
1071	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getType()))  {  [CE]  cannot  find  symbol  child  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getType()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getType()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  cannot  find  symbol  child	97	None	replace
1072	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	add
1073	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())  [CE]  ')'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent())	  	non-compiled	[CE]  ')'  expected	46	None	add
1074	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
1075	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isRemovable(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  if(NodeUtil.isRemovable(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isRemovable(n)||  NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	add
1076	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString(),  child))  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString(),  child))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString(),  child))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	99	None	replace
1077	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n,  variable,  n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n,  variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	99	None	replace
1078	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&!variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable,  n.getString())&&!variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable,  n.getString())&&!variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    variable,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	99	None	replace
1079	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
1080	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	11	None	replace
1081	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString())    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1082	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
1083	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent(),  variable)||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	159	None	replace
1084	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [CE]  cannot  find  symbol  parent  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent,  n.getParent())||  NodeUtil.isLhs(variable,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(variable,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	159	None	replace
1085	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	51	None	replace
1086	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	51	61	replace
1087	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	51	61	replace
1088	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(v)&&  n.getNext().equals(variable))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getNext().equals(variable))  {  if(NodeUtil.isName(v)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    if(NodeUtil.isName(v)&&  n.getNext().equals(variable))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	144	None	add
1089	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  n.getString());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()),  n.getString());	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1090	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  variable);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()),  variable);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()),  variable);	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1091	[BUG]  [BUGGY]  Preconditions.checkState(variable.equals(n.getString()  + ") ");  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Preconditions.checkState(variable.equals(n.getString()  + ") ");  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Preconditions.checkState(variable.equals(n.getString()  + ") ");	  Preconditions.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  	109	None	replace
1092	[BUG]  [BUGGY]  parent.replaceChild(n,  child);  [CE]  illegal  start  of  type  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent.replaceChild(n,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent.replaceChild(n,  child);	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1093	[BUG]  [BUGGY]  ParentNode  child  =  n.getParent();  [CE]  illegal  start  of  type  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  ParentNode  child  =  n.getParent();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	ParentNode  child  =  n.getParent();	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1094	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(VariableLiveness.KILL,  variable));  [CE]  illegal  start  of  type  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  parent.replaceChild(n,  new  Node(VariableLiveness.KILL,  variable));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	parent.replaceChild(n,  new  Node(VariableLiveness.KILL,  variable));	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    return    VariableLiveness.KILL;    }    else    {    return    VariableLiveness.READ;    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1095	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  module)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  module  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  module)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  module)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  module	141	None	replace
1096	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  variable)&&  VariableLiveness.equals(n.getString()))  {  [CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  variable)&&  VariableLiveness.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  variable)&&  VariableLiveness.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isFunction  in  class  NodeUtil  cannot  be  applied  to  given  types;	141	None	replace
1097	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n,  statement)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  statement  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n,  statement)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n,  statement)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isFunction(n,    child)&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  statement	141	None	replace
1098	[BUG]  [BUGGY]  if(NodeUtil.isFunction(child,  n)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(child,  n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(child,  n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    child.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	166	None	replace
1099	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  if(NodeUtil.isLhs(n,  n.getLastChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getLastChild()))    {    if(NodeUtil.isLhs(n,  n.getLastChild()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	add
1100	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext()))  {  if(NodeUtil.isLhs(n,  n.getNext()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getNext()))    {    if(NodeUtil.isLhs(n,  n.getNext()))  {  return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }	  	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	add
1101	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variables.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  variables.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
1102	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  module.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getParent())||  module.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getParent())||  module.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	153	None	add
1103	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)||  variable.equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable)||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	39	None	replace
1104	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable)&&  isVariableReadBeforeKill(variable,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	39	None	replace
1105	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill(variable,  n))  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill(variable,  n))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString(),  variable),  isVariableReadBeforeKill(variable,  n))  {	  if(NodeUtil.isLhs(n,    n.getString(),    variable))    {    	non-compiled	[CE]  ')'  expected	39	None	replace
1106	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getType()  ==  Token.VAR  &&  n.getFirstChild()  ==  n)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getType()  ==  Token.VAR  &&  n.getFirstChild()  ==  n)  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	52	replace
1107	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getType()  ==  Token.VAR  &&  n.getFirstChild()  ==  n)  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getType()  ==  Token.VAR  &&  n.getFirstChild()  ==  n)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getType()  ==  Token.VAR  &&  n.getFirstChild()  ==  n)  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getType())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	131	52	replace
1108	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(variable,  n.getNext())&&  n.getString().equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getNext())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	136	None	replace
1109	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  module.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())&&  module.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())&&  module.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	add
1110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	158	57	replace
1111	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  AssertionFailedError  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  AssertionFailedError  	158	57	replace
1112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	158	55	replace
1113	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [FE]  RuntimeException  [FE]      junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isName(n)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  RuntimeException  	158	55	replace
1114	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  source.getString()))  {  [CE]  cannot  find  symbol  source  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  source.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  source.getString()))  {	  if(NodeUtil.isLhs(child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  source	41	None	replace
1115	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	96	61	replace
1116	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	96	61	replace
1117	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
1118	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	compilable	  [FE]  RuntimeException  	96	61	replace
1119	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getLastChild())	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  ')'  expected	96	None	replace
1120	[BUG]  [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [CE]  cannot  find  symbol  child  [FE]                    RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(child,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(child,  n.getFirstChild())&&  NodeUtil.isLhs(n,  n.getLastChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getLastChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	96	None	replace
1121	[BUG]  [BUGGY]  if(NodeUtil.isName(n),  child.getParent())&&  variable.equals(n.getString()))  {  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n),  child.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n),  child.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	165	None	replace
1122	[BUG]  [BUGGY]  if(NodeUtil.isName(child,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	165	None	replace
1123	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent())||  variable.equals(n.getString()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1124	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()  ||  variable.equals(n.getString()))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()  ||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()  ||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	165	None	replace
1125	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent())  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent())  {	  if(NodeUtil.isName(n),    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	165	None	replace
1126	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  false);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  false);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  false);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
1127	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  state);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n,  variable,  state);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n,  variable,  state);	  Predicate    matchRemovableAssigns(n,    variable);    	non-compiled	[CE]  ';'  expected	3	None	replace
1128	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  NodeUtil.isLhs(n,  n.getFirst())&&  variable.equals(n.getString	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getFirst())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	130	None	replace
1129	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  NOdeUtil  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  NOdeUtil	94	None	replace
1130	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  NOdeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NOdeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	94	None	replace
1131	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  module,  n.getString()))  {  [CE]  cannot  find  symbol  module  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  module,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  module,  n.getString()))  {	  if(NodeUtil.isLhs(n,    child,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  module	100	None	replace
1132	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getType()),  variable)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getType()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getType()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getType()))    {    	non-compiled	[CE]  ')'  expected	85	None	replace
1133	[BUG]  [BUGGY]  Predicates.checkArgument(!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkArgument(!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkArgument(!variable.equals(n.getString()));	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1134	[BUG]  [BUGGY]  Predicates.checkState(!variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(!variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(!variable.equals(n.getString()));	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1135	[BUG]  [BUGGY]  Predicates.checkArgument(variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkArgument(variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkArgument(variable.equals(n.getString()));	  Predicates.checkNotNull(variable);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1136	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()),  variable)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild()),  variable)  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild()),  variable)  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
1137	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getString(),  variable))  {  [CE]  cannot  find  symbol  child  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getString(),  variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getString(),  variable))  {	  if(NodeUtil.isLhs(n,    n.getString()),    variable)    {    	non-compiled	[CE]  cannot  find  symbol  child	43	None	replace
1138	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignedOp(n)&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString()))  {  if(NodeUtil.isAssignedOp(n)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    if(NodeUtil.isAssignedOp(n)&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	88	None	add
1139	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getNext())||  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getNext())||    variable.equals(n.getString())    	non-compiled	[CE]  ')'  expected	59	None	replace
1140	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	61	replace
1141	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isAssignmentOp(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	89	61	replace
1142	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  n.getString());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString()),  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()),  n.getString());	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1143	[BUG]  [BUGGY]  Predicates.checkState(variable.equals(n.getString()  + ") ");  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicates.checkState(variable.equals(n.getString()  + ") ");  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicates.checkState(variable.equals(n.getString()  + ") ");	  Predicates.checkState(variable.equals(n.getString()));    	non-compiled	[CE]  	4	None	replace
1144	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK  ||  child.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK  ||  child.getType()  ==  Token.NAME);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.BLOCK  ||  child.getType()  ==  Token.NAME);	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1145	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  child);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination(n,  child);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination(n,  child);	  Predicate    matchRemovableAssignsElimination(n,    variable);    	non-compiled	[CE]  ';'  expected	2	None	replace
1146	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	156	55	replace
1147	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  RuntimeException  	156	55	replace
1148	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child.getParent())&&  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isLhs(n,    n.getParent())||    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	156	None	replace
1149	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	61	replace
1150	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	65	61	replace
1151	[BUG]  [BUGGY]  Node  child  =  n,  variable.getFirstChild();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n,  variable.getFirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n,  variable.getFirstChild();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  ';'  expected	7	None	replace
1152	[BUG]  [BUGGY]  Node  child  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  node.getFirstChild();  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  node.getFirstChild();	  Node    child    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1153	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	126	None	replace
1154	[BUG]  [BUGGY]  if(NodeUtil.isLhs(var,  n,  variable.getString()))  {  [CE]  cannot  find  symbol  var  [FE]                      AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(var,  n,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(var,  n,  variable.getString()))  {	  if(NodeUtil.isLhs(child,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	98	None	replace
1155	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)||  NodeUtil.isLhs(n,  n.getParent())	  	non-compiled	[CE]  ')'  expected	50	None	add
1156	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getLastChild().getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getLastChild().getString().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	60	61	replace
1157	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getLastChild().getString().equals(variable))  {  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getLastChild().getString().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getLastChild().getString().equals(variable))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	60	61	replace
1158	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  child,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	84	None	replace
1159	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  state,  n.getParent()))  {  [CE]  cannot  find  symbol  state  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  state,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isFunction(n,  state,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isFunction(n,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  state	84	None	replace
1160	[BUG]  [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable,  n.getString());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable,  n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssignsElimination  =  getRemovableAssignmentsElimination(variable,  n.getString());	  Predicate    matchRemovableAssignsElimination    =    getRemovableAssignmentsElimination(n.getString());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1161	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getParent()))  {  [CE]  cannot  find  symbol  varVariable  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getParent()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(child,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  varVariable	113	None	replace
1162	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  VAR_LIVE,  variable.getString()))  {  [CE]  cannot  find  symbol  VAR_LIVE  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  VAR_LIVE,  variable.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  VAR_LIVE,  variable.getString()))  {	  if(NodeUtil.isLhs(n,    n,    variable.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  VAR_LIVE	101	None	replace
1163	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getString()))  {  [CE]  cannot  find  symbol  varVariable  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(varVariable,  n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  varVariable	115	None	replace
1164	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	compilable	  [FE]  RuntimeException  	107	55	replace
1165	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {  [FE]  RuntimeException  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.READ.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	compilable	  [FE]  RuntimeException  	107	55	replace
1166	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	compilable	  [FE]  RuntimeException  	107	55	replace
1167	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {  [FE]  RuntimeException  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getNext())||  VariableLiveness.KILL.equals(variable))  {	  if(NodeUtil.isLhs(child,    n.getNext()))    {    	compilable	  [FE]  RuntimeException  	107	55	replace
1168	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&!!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&!NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&!!NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	134	None	add
1169	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getChildCount()))  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  child	81	None	replace
1170	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  state,  n.getChildCount()))  {  [CE]  cannot  find  symbol  state  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  state,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  state,  n.getChildCount()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getChildCount()))    {    	non-compiled	[CE]  cannot  find  symbol  state	81	None	replace
1171	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  child.getParent())||  variable.equals(n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	83	None	replace
1172	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
1173	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
1174	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
1175	[BUG]  [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	103	61	replace
1176	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	129	61	replace
1177	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())&&  variable.equals(n.getString())||  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,    n.getName())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	129	61	replace
1178	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	93	None	replace
1179	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
1180	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	compilable	  [FE]  RuntimeException  	93	61	replace
1181	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [CE]  cannot  find  symbol  child  [FE]            RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)||  NodeUtil.isLhs(n,  n.getFirstChild()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  cannot  find  symbol  child	93	None	replace
1182	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())  [CE]  ')'  expected  [FE]              RuntimeException      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  NodeUtil.isLhs(n,  n.getFirstChild())||  NodeUtil.isLhs(n,  n.getFirstChild())	  if(NodeUtil.isLhs(n,    n.getFirstChild()))    {    if(NodeUtil.isLhs(n,    n.getFirstChild())||    NodeUtil.isLhs(n,    n.getFirstChild()))    {    	non-compiled	[CE]  ')'  expected	93	None	replace
1183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	49	57	replace
1184	[BUG]  [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isCall(n)||  NodeUtil.isLhs(n,  n.getParent()))  {	  if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    	compilable	  [FE]  AssertionFailedError  	49	57	replace
1185	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  module.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getFirstChild())||  variable.equals(n.getString()))  {  if(NodeUtil.isLhs(n,  n.getFirstChild())||  module.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,    n.getFirstChild())||    variable.equals(n.getString()))    {    if(NodeUtil.isLhs(n,  n.getFirstChild())||  module.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	add
1186	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getString())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  parent  [FE]                        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  parent,  n.getString())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  parent,  n.getString())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  parent	40	None	replace
1187	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(child,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(child,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(child,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
1188	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getString())||  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString()    +    1))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	45	None	replace
1189	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(child,  n.getParent()))  {  [CE]  cannot  find  symbol  child  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(child,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  n.getParent())||  NodeUtil.isLhs(child,  n.getParent()))  {	  if(NodeUtil.isLhs(var,    n.getParent()))    {    	non-compiled	[CE]  cannot  find  symbol  child	106	None	replace
1190	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isFunction(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isFunction(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isFunction(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isFunction(n)&&  nodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
1191	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  var  [FE]        AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(var,  n.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  var	124	None	replace
1192	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getParent())&&  variables.equals(n.getString()))  {	  if(NodeUtil.isName(child)&&    NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  	124	None	replace
1193	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable.getParent())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(child,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1194	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getChild  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getChild  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getChild	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
1195	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.CALL  &&!NodeUtil.isLhs(n,  n.getParent	  if(NodeUtil.isName(n)&&    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.CALL    &&!NodeUtil.isLhs(n,    n.getParent())&&    	non-compiled	[CE]  ')'  expected	128	None	replace
1196	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  n.getFirstChild().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  RuntimeException  	145	61	replace
1197	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild().equals(variable))  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  n.getFirstChild().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  n.getFirstChild().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  RuntimeException  	145	61	replace
1198	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isVar(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
1199	[BUG]  [BUGGY]  if(NodeUtil.isVar(n)&&  n.getNext().equals(variable))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isVar(n)&&  n.getNext().equals(variable))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isVar(n)&&  n.getNext().equals(variable))  {	  if(NodeUtil.isName(n)&&    n.getNext().equals(variable))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	145	52	replace
1200	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  variable)&&  n.getString().equals(n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  variable)&&  n.getString().equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  variable)&&  n.getString().equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getString())||    variable.equals(n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	42	None	replace
1201	[BUG]  [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR  ||  variable.equals(n.getString()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR  ||  variable.equals(n.getString()));  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Node  child  =  n.getFirstChild();  Preconditions.checkState(child.getType()  ==  Token.VAR  ||  variable.equals(n.getString()));	  Node    child    =    n.getFirstChild();    Preconditions.checkState(child.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1202	[BUG]  [BUGGY]  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ';'  expected	19	None	replace
1203	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1204	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getString()))  {  If(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n	  if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    If(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getParent()))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
1205	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  NodeUtil.isLhs(n,  n.getParent()))  {  if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isAssignmentOp(n)&&  NodeUtil.isLhs(n,  n.getParent()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	add
1206	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  null);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  null);  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable,  null);	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
1207	[BUG]  [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable)&&!variable.equals(n.getString());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  Predicate  matchRemovableAssigns(n.getFirstChild(),  variable)&&!variable.equals(n.getString());  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	Predicate  matchRemovableAssigns(n.getFirstChild(),  variable)&&!variable.equals(n.getString());	  Predicate    matchRemovableAssigns(n.getFirstChild(),    variable);    	non-compiled	[CE]  ';'  expected	5	None	replace
1208	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  module.equals(n.getString()))  {  [CE]  reached  end  of  file  while  parsing  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  variable.equals(n.getString()))  {  if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  module.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&    NodeUtil.isLhs(n,    n.getNext())&&    variable.equals(n.getString()))    {    if(NodeUtil.isName(n)&&  NodeUtil.isLhs(n,  n.getNext())&&  module.equals(n.getString()))  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	132	None	add
1209	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable,  n.getString()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable,  n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  variable,  n.getString()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getString()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	162	None	replace
1210	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isName(n)&&  variable.equals(n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
1211	[BUG]  [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getFirstChild())&&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]    RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)&&  variable.equals(n.getFirstChild())&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)&&  variable.equals(n.getFirstChild())&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
1212	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	add	if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
1213	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  [FE]      RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n)&&  n.getFirstChild()  ==  n  &&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1  	24	52	replace
1214	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n,  child)&&  variable.equals(n.getString()))  {  [CE]  cannot  find  symbol  child  [FE]        RuntimeException    [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isAssignmentOp(n,  child)&&  variable.equals(n.getString()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isAssignmentOp(n,  child)&&  variable.equals(n.getString()))  {	  if(NodeUtil.isLhs(n,    n.getFirstChild())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  cannot  find  symbol  child	24	None	replace
1215	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getChildCount()))  {  [CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getChildCount()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(n)||  NodeUtil.isLhs(n,  n.getChildCount()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  method  isLhs  in  class  NodeUtil  cannot  be  applied  to  given  types;	79	None	replace
1216	[BUG]  [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [CE]  cannot  find  symbol  child  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  FUNC(param1      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getPosition()))  {  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isName(child)||  NodeUtil.isLhs(n,  n.getPosition()))  {	  if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getParent()))    {    if(NodeUtil.isName(n)||    NodeUtil.isLhs(n,    n.getPosition()))    {    	non-compiled	[CE]  cannot  find  symbol  child	79	None	replace
1217	[BUG]  [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString())  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  VariableLiveness  isVariableReadBeforeKill(  Node  n,  String  variable)  {  if  (NodeUtil.isName(n)  &&  variable.equals(n.getString()))  {      [BUGGY]  if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString())  [BUGGY]          return  VariableLiveness.KILL;  }  else  {  return  VariableLiveness.READ;  }  }    [CLASS]  DeadAssignmentsElimination  1  VariableLiveness  [METHOD]  isVariableReadBeforeKill  [RETURN_TYPE]  DeadAssignmentsElimination$VariableLiveness  Node  n  String  variable  [VARIABLES]  AbstractCompiler  compiler  boolean  Node  child  n  String  variable  VariableLiveness  KILL  MAYBE_LIVE  READ  state  LiveVariablesAnalysis  liveness  Predicate  matchRemovableAssigns  	projects/Closure88/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java	0.7745966692414834	326	326	6	replace	if(NodeUtil.isLhs(n,  child)&&  variable.equals(n.getString()))  {  If(NodeUtil.isLhs(n,  child.getParent())&&  variable.equals(n.getString())	  if(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    If(NodeUtil.isLhs(n,    n.getParent())&&    variable.equals(n.getString()))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
