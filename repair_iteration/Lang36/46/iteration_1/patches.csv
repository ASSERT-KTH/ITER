bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  str.substring(0,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  str.substring(0,  str.length());	      String    mant    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
4	[BUG]  [BUGGY]  String  mant  =  numeric.substring(0,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  numeric.substring(0,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  numeric.substring(0,  str.length());	      String    mant    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
5	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant)||    isAllZeros(exp);    	non-compiled	[CE]  	7	None	replace
6	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant);  [CE]  [FE]              NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(mant);	      boolean    allZeros    =    isAllZeros(numeric);    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)  &&  isAllZeros(exp);  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)  &&  isAllZeros(exp);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(dec)  &&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  	1	None	replace
8	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(expPos  +  1,  str.length());	      Integer    numeric    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
9	[BUG]  [BUGGY]  String  numeric  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  numeric  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  numeric  =  str.substring(expPos  +  1,  str.length());	      Integer    numeric    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
10	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  	8	None	replace
11	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  	8	None	replace
12	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(0,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(0,  str.length());	      Integer    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  numeric  =  str.substring(0,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  numeric  =  str.substring(0,  str.length());	      Integer    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(0,  str.length()  +  1);	      Integer    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(dec);    	non-compiled	[CE]  	6	None	replace
16	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  numeric;  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  numeric;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  numeric;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  	12	None	replace
17	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  	12	None	replace
18	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  dec  =  str.substring(expPos  +  1,  str.length());	      Integer    numeric    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
20	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]                NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  str.substring(0,  str.length()  -  1  +  1);	      String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
21	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]                  NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  str.substring(0,  str.length()  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  str.substring(0,  str.length()  +  1);	      String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
22	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1  +  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  1  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(0,  str.length()  -  1  +  1);	      Integer    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(decPos  +  1,  str.length());	      Integer    numeric    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
24	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(decPos  +  1,  str.length()  -  1);	      Integer    numeric    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
25	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  	12	None	replace
26	[BUG]  [BUGGY]  String  mant  =  str.substring(1,  str.length());  [CE]  [FE]                NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  str.substring(1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  str.substring(1,  str.length());	      String    mant    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(1,  str.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  Integer  numeric  =  str.substring(1,  str.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	Integer  numeric  =  str.substring(1,  str.length());	      Integer    numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  String  mant  =  str.substring(0,  str.length())+  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  String  mant  =  str.substring(0,  str.length())+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	String  mant  =  str.substring(0,  str.length())+  1;	      String    mant    =    numeric.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	2	None	replace
29	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);  [CE]  [FE]          NumberFormatException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	499	499	2	replace	boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant)||    isAllZeros(exp);    	non-compiled	[CE]  	7	None	replace
