bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
2	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
3	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
4	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
5	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  dec  =  createNeighborDecimal(exp);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str,  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  dec  =  createNeighborDecimal(str,  exp);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  dec  =  createNumberDecimal(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  dec  =  createNumberDecimal(str);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ");  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NumberFormatException  e  =  new  NumberFormatException( " ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NumberFormatException  e  =  new  NumberFormatException( " ");	  NegativeFormatException    e    =    new    NegativeFormatException(   "   ");    	non-compiled	[CE]  	33	None	replace
9	[BUG]  [BUGGY]  NegativeFormatException  e  =  new  NegativeFormatException( " ",  nfe);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NegativeFormatException  e  =  new  NegativeFormatException( " ",  nfe);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NegativeFormatException  e  =  new  NegativeFormatException( " ",  nfe);	  NegativeFormatException    e    =    new    NegativeFormatException(   "   ");    	non-compiled	[CE]  	33	None	replace
10	[BUG]  [BUGGY]  NullPointer  str  =  createNullPointer(str,  exp);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullPointer  str  =  createNullPointer(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullPointer  str  =  createNullPointer(str,  exp);	  NullPointer    str    =    createNullPointer(str);    	non-compiled	[CE]  	32	None	replace
11	[BUG]  [BUGGY]  NullPointer  str  =  createNullPointer(str.length());  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullPointer  str  =  createNullPointer(str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullPointer  str  =  createNullPointer(str.length());	  NullPointer    str    =    createNullPointer(str);    	non-compiled	[CE]  	32	None	replace
12	[BUG]  [BUGGY]  NullPointer  str  =  createNumber(str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullPointer  str  =  createNumber(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullPointer  str  =  createNumber(str);	  NullPointer    str    =    createNullPointer(str);    	non-compiled	[CE]  	32	None	replace
13	[BUG]  [BUGGY]  Nullables.writeNumber(exp);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNumber(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNumber(exp);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
14	[BUG]  [BUGGY]  Nullables.writeNumber(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNumber(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNumber(dec);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
15	[BUG]  [BUGGY]  Nullables.writeNull(exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNull(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNull(exp);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
16	[BUG]  [BUGGY]  Nullables.copyCurrentStructure(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.copyCurrentStructure(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.copyCurrentStructure(str);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
17	[BUG]  [BUGGY]  catch(NumberFormatException  nfe)  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  catch(NumberFormatException  nfe)  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	catch(NumberFormatException  nfe)  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
18	[BUG]  [BUGGY]  try  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  catch(NumberFormatException  e)  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  catch(NumberFormatException  e)  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	catch(NumberFormatException  e)  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  catch(Throwable  nfe)  {  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  catch(Throwable  nfe)  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	catch(Throwable  nfe)  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
21	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createInteger(str);  }	  if(exp    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	45	None	replace
22	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }	  if(exp    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	45	None	replace
23	[BUG]  [BUGGY]  try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
24	[BUG]  [BUGGY]  if(exp  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(exp  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(exp  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
25	[BUG]  [BUGGY]  try  {  if(dec  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(dec  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(dec  ==  null  ||  exp  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.lastIndexOf('.',  dec);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.lastIndexOf('.',  0);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
29	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.lastIndexOf('.',  1);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
30	[BUG]  [BUGGY]  Integer  dec  =  getInteger(exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getInteger(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getInteger(exp);	  Integer    dec    =    getIntegerValue(str);    	non-compiled	[CE]  	35	None	replace
31	[BUG]  [BUGGY]  Integer  dec  =  getLongValue(str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getLongValue(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getLongValue(str);	  Integer    dec    =    getIntegerValue(str);    	non-compiled	[CE]  	35	None	replace
32	[BUG]  [BUGGY]  Integer  dec  =  getIntegerValue(exp);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getIntegerValue(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getIntegerValue(exp);	  Integer    dec    =    getIntegerValue(str);    	non-compiled	[CE]  	35	None	replace
33	[BUG]  [BUGGY]  nfe.printStackTrace();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nfe.printStackTrace();  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nfe.printStackTrace();	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
34	[BUG]  [BUGGY]  e.printStackTrace(System.err);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  e.printStackTrace(System.err);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	e.printStackTrace(System.err);	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
35	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	throw  new  NumberFormatException( " ");	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
36	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createNull(str);  }	  if(exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	25	None	replace
37	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  return  createLong(str);  }	  if(exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	25	None	replace
38	[BUG]  [BUGGY]  safeNumberFormatException(e);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException(e);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException(e);	  safeNumberFormatException(nfe);    	non-compiled	[CE]  	27	None	replace
39	[BUG]  [BUGGY]  safeNumberFormatException(str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException(str);	  safeNumberFormatException(nfe);    	non-compiled	[CE]  	27	None	replace
40	[BUG]  [BUGGY]  try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  }  catch(NumberFormatException  nfe)  {  return  createNull(str);  }	  if(!(dec    ==    null    &&    exp    ==    null))    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	47	None	replace
41	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  	38	None	replace
42	[BUG]  [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(!allZeros)  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  	38	None	replace
43	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNumberDecimal(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  exp  =  createNumberDecimal(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  exp  =  createNumberDecimal(str);	  NeighborDecimal    exp    =    createNeighborDecimal(str);    	non-compiled	[CE]  	4	None	replace
44	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str,  dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  exp  =  createNeighborDecimal(str,  dec);	  NeighborDecimal    exp    =    createNeighborDecimal(str);    	non-compiled	[CE]  	4	None	replace
45	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  exp  =  createNeighborDecimal(dec);	  NeighborDecimal    exp    =    createNeighborDecimal(str);    	non-compiled	[CE]  	4	None	replace
46	[BUG]  [BUGGY]  Integer  dec  =  getInteger(0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getInteger(0);	  Integer    dec    =    getInteger(str);    	non-compiled	[CE]  	34	None	replace
47	[BUG]  [BUGGY]  Integer  dec  =  getInteger(1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getInteger(1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getInteger(1);	  Integer    dec    =    getInteger(str);    	non-compiled	[CE]  	34	None	replace
48	[BUG]  [BUGGY]  NullableString  str  =  getNullableString(exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNullableString(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNullableString(exp);	  NullableString    str    =    getNullableString(str);    	non-compiled	[CE]  	43	None	replace
49	[BUG]  [BUGGY]  String  str  =  getNullableString(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  String  str  =  getNullableString(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	String  str  =  getNullableString(str);	  NullableString    str    =    getNullableString(str);    	non-compiled	[CE]  	43	None	replace
50	[BUG]  [BUGGY]  NullableString  str  =  getNullableString(str,  exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNullableString(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNullableString(str,  exp);	  NullableString    str    =    getNullableString(str);    	non-compiled	[CE]  	43	None	replace
51	[BUG]  [BUGGY]  Integer  dec  =  createInteger(exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createInteger(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createInteger(exp);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
52	[BUG]  [BUGGY]  Integer  dec  =  createInteger(0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createInteger(0);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
53	[BUG]  [BUGGY]  Integer  dec  =  createLong(str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createLong(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createLong(str);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
54	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  catch(NumberFormatException  nfe)  {  return  createLong(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	8	None	replace
55	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsInfinite( " ");  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsInfinite( " ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsInfinite( " ");	  aughtExceptionHandler.throwAsNumberFormatException(   "   ");    	non-compiled	[CE]  	39	None	replace
56	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedNumberFormatException( " ");  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedNumberFormatException( " ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsUnexpectedNumberFormatException( " ");	  aughtExceptionHandler.throwAsNumberFormatException(   "   ");    	non-compiled	[CE]  	39	None	replace
57	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	10	None	replace
58	[BUG]  [BUGGY]  return  createDouble(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  return  createDouble(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	return  createDouble(str);	  return    createInteger(str);    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  Nullable  <  Number>  dec  =  createNullable(str,  exp);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  dec  =  createNullable(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  dec  =  createNullable(str,  exp);	  Nullable    <    Number>    dec    =    createNullable(str);    	non-compiled	[CE]  	26	None	replace
60	[BUG]  [BUGGY]  Nullable  <  Number>  dec  =  createNumber(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  dec  =  createNumber(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  dec  =  createNumber(str);	  Nullable    <    Number>    dec    =    createNullable(str);    	non-compiled	[CE]  	26	None	replace
61	[BUG]  [BUGGY]  Nullable  <  Number>  dec  =  createNullable(exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  dec  =  createNullable(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  dec  =  createNullable(exp);	  Nullable    <    Number>    dec    =    createNullable(str);    	non-compiled	[CE]  	26	None	replace
62	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
63	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
64	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createNull(str);  }  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createNull(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createNull(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
65	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
66	[BUG]  [BUGGY]  NullableString  str  =  getNullableString().trim();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNullableString().trim();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNullableString().trim();	  NullableString    str    =    getNullableString();    	non-compiled	[CE]  	42	None	replace
67	[BUG]  [BUGGY]  NullableString  str  =  getNumberValue();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNumberValue();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNumberValue();	  NullableString    str    =    getNullableString();    	non-compiled	[CE]  	42	None	replace
68	[BUG]  [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  try    {    if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	13	None	replace
69	[BUG]  [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  try    {    if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	13	None	replace
70	[BUG]  [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }	  try    {    if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	13	None	replace
71	[BUG]  [BUGGY]  Neighbor  exp  =  createNumber(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Neighbor  exp  =  createNumber(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Neighbor  exp  =  createNumber(str);	  Neighbor    exp    =    createNeighbor(str);    	non-compiled	[CE]  	40	None	replace
72	[BUG]  [BUGGY]  Neighbor  exp  =  createBigInteger(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Neighbor  exp  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Neighbor  exp  =  createBigInteger(str);	  Neighbor    exp    =    createNeighbor(str);    	non-compiled	[CE]  	40	None	replace
73	[BUG]  [BUGGY]  Neighbor  exp  =  createBigDecimal(str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Neighbor  exp  =  createBigDecimal(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Neighbor  exp  =  createBigDecimal(str);	  Neighbor    exp    =    createNeighbor(str);    	non-compiled	[CE]  	40	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedNumber( "msg.no.string ");  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedNumber( "msg.no.string ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsUnexpectedNumber( "msg.no.string ");	  aughtExceptionHandler.throwAsNumber(   "msg.no.string   ");    	non-compiled	[CE]  	37	None	replace
75	[BUG]  [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createLong(str);  }  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  null  &&  exp  ==  null)  {  return  createLong(str);  }	  try    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	46	None	replace
76	[BUG]  [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  null  &&  exp  ==  null)  {  return  createLong(str);  }	  try    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	46	None	replace
77	[BUG]  [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  null  &&  exp  ==  null)  {  return  createNumber(str);  }	  try    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	46	None	replace
78	[BUG]  [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  try    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	46	None	replace
79	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(0);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
80	[BUG]  [BUGGY]  Integer  decPos  =  createLong(str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createLong(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createLong(str);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
81	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(exp);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(exp);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
82	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(1);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(1);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
83	[BUG]  [BUGGY]  Integer  exp  =  createInteger(0);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createInteger(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createInteger(0);	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
84	[BUG]  [BUGGY]  Integer  exp  =  createLong(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createLong(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createLong(str);	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
85	[BUG]  [BUGGY]  Integer  exp  =  createBigInteger(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createBigInteger(str);	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
86	[BUG]  [BUGGY]  nisip  =  Float.parseFloat(exp);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  Float.parseFloat(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  Float.parseFloat(exp);	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
87	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(str);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  Integer.parseInt(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  Integer.parseInt(str);	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
88	[BUG]  [BUGGY]  nisip  =  Float.parseFloat(dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  Float.parseFloat(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  Float.parseFloat(dec);	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
89	[BUG]  [BUGGY]  while(dec  ==  null  &&  exp  ==  null)  {  dec  =  createBigInteger(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(dec  ==  null  &&  exp  ==  null)  {  dec  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(dec  ==  null  &&  exp  ==  null)  {  dec  =  createBigInteger(str);	  if(exp    ==    null    ||    dec    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	24	None	replace
90	[BUG]  [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createBigInteger(str);  }	  try    {    if(dec    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	14	None	replace
91	[BUG]  [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }	  try    {    if(dec    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	14	None	replace
92	[BUG]  [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createLong(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(exp  ==  null  ||  exp  ==  null)  {  return  createLong(str);  }	  try    {    if(dec    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	14	None	replace
93	[BUG]  [BUGGY]  secureNumberFormatException( " ");  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  secureNumberFormatException( " ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	secureNumberFormatException( " ");	  safeNumberFormatException(   "   ");    	non-compiled	[CE]  	28	None	replace
94	[BUG]  [BUGGY]  safeNumberFormatException( " ",  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException( " ",  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException( " ",  str);	  safeNumberFormatException(   "   ");    	non-compiled	[CE]  	28	None	replace
95	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  &&  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }	  aughtExceptionHandler.throwAsNumberFormatException(   "   ");    	non-compiled	[CE]  	39	None	replace
96	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsNumberFormatException( " ",  nfe);  [CE]  [FE]                            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsNumberFormatException( " ",  nfe);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsNumberFormatException( " ",  nfe);	  aughtExceptionHandler.throwAsNumberFormatException(   "   ");    	non-compiled	[CE]  	39	None	replace
97	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  &&  exp  ==  null)  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
98	[BUG]  [BUGGY]  Nullable  <  Number>  dec  =  createNullable(str,  expPos);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  dec  =  createNullable(str,  expPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  dec  =  createNullable(str,  expPos);	  Nullable    <    Number>    dec    =    createNullable(str);    	non-compiled	[CE]  	26	None	replace
99	[BUG]  [BUGGY]  try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  }  catch(NoSuchElementException  nfe)  {  return  createInteger(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
100	[BUG]  [BUGGY]  Nullables.writeNumber(dec,  str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNumber(dec,  str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNumber(dec,  str);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
101	[BUG]  [BUGGY]  NullPointer  str  =  createBigInteger(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullPointer  str  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullPointer  str  =  createBigInteger(str);	  NullPointer    str    =    createNullPointer(str);    	non-compiled	[CE]  	32	None	replace
102	[BUG]  [BUGGY]  }  catch  (NumberFormatException  t)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  catch  (NumberFormatException  t)  {  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  catch  (NumberFormatException  t)  {	  }    catch    (Throwable    t)    {    	non-compiled	[CE]  	20	None	replace
103	[BUG]  [BUGGY]  Integer  dec  =  getInteger(dec);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getInteger(dec);	  Integer    dec    =    getIntegerValue(str);    	non-compiled	[CE]  	35	None	replace
104	[BUG]  [BUGGY]  nisip  =  str.parseFloat(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  str.parseFloat(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  str.parseFloat(str);	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
105	[BUG]  [BUGGY]  Nullable  <  Number>  f  =  createNullable(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  f  =  createNullable(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  f  =  createNullable(str);	  if(exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	25	None	replace
106	[BUG]  [BUGGY]  NegativeFormatException  e  =  new  NegativeFormatException( "Expected  numeric  value: ");  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NegativeFormatException  e  =  new  NegativeFormatException( "Expected  numeric  value: ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NegativeFormatException  e  =  new  NegativeFormatException( "Expected  numeric  value: ");	  NegativeFormatException    e    =    new    NegativeFormatException(   "   ");    	non-compiled	[CE]  	33	None	replace
107	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  dec  =  createNeighborDecimal(dec);	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  	6	None	replace
108	[BUG]  [BUGGY]  }  catch  (NullPointerException  ne)  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  catch  (NullPointerException  ne)  {  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  catch  (NullPointerException  ne)  {	  }    catch    (Throwable    ne)    {    	non-compiled	[CE]  	23	None	replace
109	[BUG]  [BUGGY]  if(exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(exp  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
110	[BUG]  [BUGGY]  if(exp  ==  null  ||  dec  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(exp  ==  null  ||  dec  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(exp  ==  null  ||  dec  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
111	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  	38	None	replace
112	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(mant);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(mant);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  exp  =  createNeighborDecimal(mant);	  NeighborDecimal    exp    =    createNeighborDecimal(str);    	non-compiled	[CE]  	4	None	replace
113	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  e.printStackTrace();  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  e.printStackTrace();  }  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  &&  exp  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
114	[BUG]  [BUGGY]  if(nfe  ==  null)  {  e.printStackTrace();  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(nfe  ==  null)  {  e.printStackTrace();  }  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(nfe  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
115	[BUG]  [BUGGY]  Neighbor  exp  =  createNeighbor(str,  dec);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Neighbor  exp  =  createNeighbor(str,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Neighbor  exp  =  createNeighbor(str,  dec);	  Neighbor    exp    =    createNeighbor(str);    	non-compiled	[CE]  	40	None	replace
116	[BUG]  [BUGGY]  Neighbor  exp  =  createNeighbor(dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Neighbor  exp  =  createNeighbor(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Neighbor  exp  =  createNeighbor(dec);	  Neighbor    exp    =    createNeighbor(str);    	non-compiled	[CE]  	40	None	replace
117	[BUG]  [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(str);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	MutableDecimal  dec  =  createMutableDecimal(str);	  if(!(dec    ==    null    &&    exp    ==    null))    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	48	None	replace
118	[BUG]  [BUGGY]  if(!(dec  ==  null  &&  exp!=  null))  {  return  createBigDecimal(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(!(dec  ==  null  &&  exp!=  null))  {  return  createBigDecimal(str);  }  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(!(dec  ==  null  &&  exp!=  null))  {  return  createBigDecimal(str);  }	  if(!(dec    ==    null    &&    exp    ==    null))    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	48	None	replace
119	[BUG]  [BUGGY]  Nullables.writeNumber(dec,  exp);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNumber(dec,  exp);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNumber(dec,  exp);	  if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createLong(str);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  	31	None	replace
120	[BUG]  [BUGGY]  NegativeCollection.this.put(str,  null);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NegativeCollection.this.put(str,  null);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NegativeCollection.this.put(str,  null);	  if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createLong(str);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  	31	None	replace
121	[BUG]  [BUGGY]  NullableString  str  =  getNullableString(dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNullableString(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNullableString(dec);	  NullableString    str    =    getNullableString(str);    	non-compiled	[CE]  	43	None	replace
122	[BUG]  [BUGGY]  Integer  dec  =  getDecimalInteger(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getDecimalInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getDecimalInteger(str);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	30	None	replace
123	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(dec);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
124	[BUG]  [BUGGY]  Integer  decPos  =  createBigInteger(str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createBigInteger(str);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
125	[BUG]  [BUGGY]  safeNumberFormatException( " ",  nfe);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException( " ",  nfe);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException( " ",  nfe);	  safeNumberFormatException(   "   ");    	non-compiled	[CE]  	28	None	replace
126	[BUG]  [BUGGY]  safeToInteger(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeToInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeToInteger(str);	  safeNumberFormatException(   "   ");    	non-compiled	[CE]  	28	None	replace
127	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.no.string ");  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsSurrogate( "msg.no.string ");  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsSurrogate( "msg.no.string ");	  aughtExceptionHandler.throwAsNumber(   "msg.no.string   ");    	non-compiled	[CE]  	37	None	replace
128	[BUG]  [BUGGY]  NullableString  str  =  getNumberString();  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NullableString  str  =  getNumberString();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NullableString  str  =  getNumberString();	  NullableString    str    =    getNullableString();    	non-compiled	[CE]  	42	None	replace
129	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.');  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.indexOf('.');  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.indexOf('.');	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
130	[BUG]  [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  try    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	46	None	replace
131	[BUG]  [BUGGY]  Integer  exp  =  createInteger(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createInteger(dec);	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
132	[BUG]  [BUGGY]  Integer  exp  =  createInteger(str,  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createInteger(str,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createInteger(str,  dec);	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
133	[BUG]  [BUGGY]  Integer  dec  =  createInteger(dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createInteger(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createInteger(dec);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
134	[BUG]  [BUGGY]  safeNumberFormatException(nfe,  dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException(nfe,  dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException(nfe,  dec);	  safeNumberFormatException(nfe);    	non-compiled	[CE]  	27	None	replace
135	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigInteger(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
136	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(str);  }	  try    {    }    catch(NumberFormatException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	16	None	replace
137	[BUG]  [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  [Delete]  catch(NumberFormatException  nfe)  {  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  [Delete]  catch(NumberFormatException  nfe)  {	  if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createLong(str);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  	31	None	replace
138	[BUG]  [BUGGY]  aughtException.weirdString( "msg.no.string.length ");  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtException.weirdString( "msg.no.string.length ");  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtException.weirdString( "msg.no.string.length ");	  if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createLong(str);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  	31	None	replace
139	[BUG]  [BUGGY]  aughtException.weirdString( "msg.no.string.length "));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtException.weirdString( "msg.no.string.length "));  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtException.weirdString( "msg.no.string.length "));	  if(dec    ==    null    &&    exp    ==    null)    {    try    {    return    createLong(str);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  	31	None	replace
140	[BUG]  [BUGGY]  Nullable  <  Number>  dec  =  createBigInteger(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullable  <  Number>  dec  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullable  <  Number>  dec  =  createBigInteger(str);	  Nullable    <    Number>    dec    =    createNullable(str);    	non-compiled	[CE]  	26	None	replace
141	[BUG]  [BUGGY]  try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	25	None	replace
142	[BUG]  [BUGGY]  try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  if(exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	25	None	replace
143	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  ||  exp  ==  null)  {  return  createInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	29	None	replace
144	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str.substring(1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  dec  =  createNeighborDecimal(str.substring(1));	  NeighborDecimal    dec    =    createNeighborDecimal(str);    	non-compiled	[CE]  	6	None	replace
145	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createInteger(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createInteger(str,  exp);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
146	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createBigInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createBigInteger(str);	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
147	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  createInteger(str.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  createInteger(str.substring(1));	  Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
148	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createLong(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
149	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  else  if(dec  ==  null  &&  exp  ==  null)  {  try  {  return  createBigInteger(str);  }  catch(NoSuchElementException  nfe)  {  return  createBigInteger(str);  }	  try    {    }    catch(NoSuchElementException    nfe)    {    return    createLong(str);    }    	non-compiled	[CE]  	22	None	replace
150	[BUG]  [BUGGY]  safeNumberFormatException(dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeNumberFormatException(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeNumberFormatException(dec);	  safeNumberFormatException(nfe);    	non-compiled	[CE]  	27	None	replace
151	[BUG]  [BUGGY]  try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  try    {    if(dec    ==    null    ||    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	14	None	replace
152	[BUG]  [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }	  if(dec    ==    null    ||    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	44	None	replace
153	[BUG]  [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null)))  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!(dec  ==  null  &&  exp  ==  null)))  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
154	[BUG]  [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null))  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!(dec  ==  null  &&  exp  ==  null))  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    	non-compiled	[CE]  	7	None	replace
155	[BUG]  [BUGGY]  }  catch  (Exception  nfe)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  }  catch  (Exception  nfe)  {  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	}  catch  (Exception  nfe)  {	  }    catch    (Throwable    t)    {    	non-compiled	[CE]  	20	None	replace
156	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(str,  expPos);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(str,  expPos);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(str,  expPos);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
157	[BUG]  [BUGGY]  Integer  decPos  =  createInteger(str,  exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  decPos  =  createInteger(str,  exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  decPos  =  createInteger(str,  exp);	  Integer    decPos    =    createInteger(str);    	non-compiled	[CE]  	12	None	replace
158	[BUG]  [BUGGY]  safeMultiply(dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  safeMultiply(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	safeMultiply(dec);	  safeNumberFormatException(   "   ");    	non-compiled	[CE]  	28	None	replace
159	[BUG]  [BUGGY]  e.printStackTrace(System.out);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  e.printStackTrace(System.out);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	e.printStackTrace(System.out);	  e.printStackTrace();    	non-compiled	[CE]  	19	None	replace
160	[BUG]  [BUGGY]  if(!(dec  ==  null  &&  exp  ==  null))  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  [FE]                        NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(!(dec  ==  null  &&  exp  ==  null))  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(!(dec  ==  null  &&  exp  ==  null))  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  	38	None	replace
161	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsNumber( "msg.no.string ",  mant);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  aughtExceptionHandler.throwAsNumber( "msg.no.string ",  mant);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	aughtExceptionHandler.throwAsNumber( "msg.no.string ",  mant);	  aughtExceptionHandler.throwAsNumber(   "msg.no.string   ",    str);    	non-compiled	[CE]  	36	None	replace
162	[BUG]  [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null))  {  try  {  return  createLong(str);  }  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  while(!(dec  ==  null  &&  exp  ==  null))  {  try  {  return  createLong(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	while(!(dec  ==  null  &&  exp  ==  null))  {  try  {  return  createLong(str);  }	  try    {    if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	13	None	replace
163	[BUG]  [BUGGY]  Nullables.writeNull(dec);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Nullables.writeNull(dec);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Nullables.writeNull(dec);	  Nullables.writeNumber(str);    	non-compiled	[CE]  	41	None	replace
164	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]        }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	int  expPos  =  str.indexOf('.',  dec);	  int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	18	None	replace
165	[BUG]  [BUGGY]  try  ==  null  &&  dec  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  try  ==  null  &&  dec  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	try  ==  null  &&  dec  ==  null)  {  return  createBigInteger(str);  }	  if(exp    ==    null    ||    dec    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	24	None	replace
166	[BUG]  [BUGGY]  Integer  str  =  createInteger(str);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  str  =  createInteger(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  str  =  createInteger(str);	  NullPointer    str    =    createNullPointer(str);    	non-compiled	[CE]  	32	None	replace
167	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }  [CE]  [FE]                          NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	if(dec  ==  null  ||  exp  ==  null)  {  aughtExceptionHandler.throwAsNumberFormatException( " ");  }	  aughtExceptionHandler.throwAsNumberFormatException(   "   ");    	non-compiled	[CE]  	39	None	replace
168	[BUG]  [BUGGY]  Integer  dec  =  getIntValue(exp);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  dec  =  getIntValue(exp);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  dec  =  getIntValue(exp);	  Integer    dec    =    getIntegerValue(str);    	non-compiled	[CE]  	35	None	replace
169	[BUG]  [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str.substring(1));  [CE]  [FE]            NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  NeighborDecimal  exp  =  createNeighborDecimal(str.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	NeighborDecimal  exp  =  createNeighborDecimal(str.substring(1));	  NeighborDecimal    exp    =    createNeighborDecimal(str);    	non-compiled	[CE]  	4	None	replace
170	[BUG]  [BUGGY]  Integer  exp  =  createInteger(str.substring(1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  Integer  exp  =  createInteger(str.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	Integer  exp  =  createInteger(str.substring(1));	  Integer    exp    =    createInteger(str);    	non-compiled	[CE]  	17	None	replace
171	[BUG]  [BUGGY]  nisip  =  dec.parseFloat(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  dec.parseFloat(str);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  dec.parseFloat(str);	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
172	[BUG]  [BUGGY]  nisip  =  Float.parseFloat(str)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);      [BUGGY]  nisip  =  Float.parseFloat(str)+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	566	566	2	replace	nisip  =  Float.parseFloat(str)+  1;	  nisip    =    Float.parseFloat(str);    	non-compiled	[CE]  	5	None	replace
