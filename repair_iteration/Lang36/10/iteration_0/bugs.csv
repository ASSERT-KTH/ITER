bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
19	[BUG] [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { [FE] NumberFormatException [CONTEXT]  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) { [BUGGY]   return f; } } catch (NumberFormatException nfe) {  }  case 'd' : [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	519	519	2	replace	
20	[BUG] [BUGGY] [FE] NumberFormatException [CONTEXT]  } return createBigInteger(numeric); } throw new NumberFormatException(str + " is not a valid number."); case 'f' : case 'F' : try { Float f = NumberUtils.createFloat(numeric); [BUGGY] [BUGGY] if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {   return f; } } catch (NumberFormatException nfe) {  }  case 'd' : [CLASS] NumberUtils [METHOD] createNumber [RETURN_TYPE] Number  String str [VARIABLES] Integer INTEGER_MINUS_ONE INTEGER_ONE INTEGER_ZERO Float FLOAT_MINUS_ONE FLOAT_ONE FLOAT_ZERO f boolean allZeros Byte BYTE_MINUS_ONE BYTE_ONE BYTE_ZERO Long LONG_MINUS_ONE LONG_ONE LONG_ZERO char lastChar NumberFormatException e nfe String dec exp mant numeric str Double DOUBLE_MINUS_ONE DOUBLE_ONE DOUBLE_ZERO d Short SHORT_MINUS_ONE SHORT_ONE SHORT_ZERO int decPos expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	519	519	2	add	
