bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(decPos  +  1,  str.length()  -  1);	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos);  exp  =  str.substring(expPos  +  1,  str.length());	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  str.length();  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.length();  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.length();  exp  =  str.substring(decPos  +  1,  str.length());	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  }  catch  (Throwable  e)  {  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  }  catch  (Throwable  e)  {  [BUGGY]      }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	}  catch  (Throwable  e)  {	  }    catch    (NumberFormatException    e)    {    	non-compiled	[CE]  	1	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	7	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  exp.length();  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  exp.length();  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  exp.length();	      int    decPos    =    str.length();    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	dec  =  str.substring(decPos  +  1,  str.length()  -  1);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  +  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	dec  =  str.substring(decPos  +  1,  str.length()  +  1);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	dec  =  str.substring(decPos  +  1,  str.length()  -  2);	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
12	[BUG]  [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  dec  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	dec  =  str.substring(expPos  +  1,  str.length());	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
13	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  exp);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
14	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
15	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  [FE]                    NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.indexOf('.');	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  [FE]                      NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  }  catch  (NullPointerException  npe)  {  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  }  catch  (NullPointerException  npe)  {  [BUGGY]      }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	}  catch  (NullPointerException  npe)  {	  }    catch    (NumberFormatException    npe)    {    	non-compiled	[CE]  	13	None	replace
18	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1);	      exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	9	None	replace
19	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	exp  =  str.substring(0,  str.length()  -  1);	      exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	exp  =  str.substring(decPos  +  1,  str.length());	      exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	9	None	replace
21	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	exp  =  str.substring(expPos  +  1,  str.length()  +  1);	      exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	9	None	replace
22	[BUG]  [BUGGY]  nisip  =  str.charAt(decPos  +  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  nisip  =  str.charAt(decPos  +  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	nisip  =  str.charAt(decPos  +  1);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
23	[BUG]  [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  str  =  getNumberDecimal(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
24	[BUG]  [BUGGY]  NeighborDecimal  str  =  getNumberDecimal();  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  str  =  getNumberDecimal();  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  str  =  getNumberDecimal();	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
25	[BUG]  [BUGGY]  nisip  =  str.charAt(decPos  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  nisip  =  str.charAt(decPos  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	nisip  =  str.charAt(decPos  -  1);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	5	None	replace
26	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  return  createBigInteger(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	return  createBigInteger(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  NeighborDecimal  str  =  createNeighborDecimal(str);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  str  =  createNeighborDecimal(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  str  =  createNeighborDecimal(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  result  =  createBigInteger(str);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  result  =  createBigInteger(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	result  =  createBigInteger(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  result  =  createBigDecimal(str);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  result  =  createBigDecimal(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	result  =  createBigDecimal(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	11	None	replace
30	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  Integer  dec  =  createInteger(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	Integer  dec  =  createInteger(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
31	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  dec  =  createNeighborDecimal(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  dec  =  createNeighborDecimal(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
32	[BUG]  [BUGGY]  NeighborDecimal  dec  =  createNeighbor(str);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  dec  =  createNeighbor(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  dec  =  createNeighbor(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
33	[BUG]  [BUGGY]  }  catch  (NullPointerException  nfe)  {  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  }  catch  (NullPointerException  nfe)  {  [BUGGY]      }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	}  catch  (NullPointerException  nfe)  {	  }    catch    (Throwable    nfe)    {    	non-compiled	[CE]  	2	None	replace
34	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	dec  =  str.substring(decPos  +  1,  expPos.length());	      dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	4	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.indexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.indexOf('.');  exp  =  str.substring(decPos  +  1,  str.length()  -  1);	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  exp  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  exp  =  str.substring(decPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);  exp  =  str.substring(decPos  +  1,  str.length());	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
37	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2);	      exp    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  [BUGGY]      }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	if(dec  ==  null  &&  exp  ==  null)  {  exp  =  str.substring(expPos  +  1,  str.length());  }	      	non-compiled	[CE]  	3	None	replace
39	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	5	None	replace
40	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigDecimal(str);    }    	non-compiled	[CE]  	11	None	replace
41	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.indexOf('.',  expPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(str);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(str);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  dec  =  getDecimalDecimal(str);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	10	None	replace
43	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.indexOf('.',  exp);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	8	None	replace
45	[BUG]  [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  try  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	try  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	      if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	parent  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	      if(dec    ==    null    &&    exp    ==    null)    {    return    createLong(str);    }    	non-compiled	[CE]  	5	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1,  str.length());	      int    decPos    =    str.lastIndexOf('.');    exp    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	NeighborDecimal  exp  =  str.substring(decPos  +  1,  expPos);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	parent  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
50	[BUG]  [BUGGY]  Neighbor  exp  =  str.substring(decPos  +  1,  expPos);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  Neighbor  exp  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	Neighbor  exp  =  str.substring(decPos  +  1,  expPos);	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
51	[BUG]  [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);    [BUGGY]  parent  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	561	561	2	replace	parent  ==  null  &&  exp  ==  null)  {  return  createBigDecimal(str);  }	      if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  	12	None	replace
