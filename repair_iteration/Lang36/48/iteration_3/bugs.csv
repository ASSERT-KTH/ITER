bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	17	None	replace
2	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))))    {    	non-compiled	[CE]  	51	None	replace
3	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))))    {    	non-compiled	[CE]  	51	None	replace
4	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric.substring(1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(numeric.substring(1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(numeric.substring(1));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	22	None	replace
5	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  str.length()  -  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(0,  str.length()  -  1));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	22	None	replace
6	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(1),  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(1),  str.length()  -  1);	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	22	None	replace
7	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(2));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(2));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(2));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	22	None	replace
8	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	25	None	replace
9	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	25	None	replace
10	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
11	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
12	[BUG]  [BUGGY]  Integer  dec  =  createLong(0);  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(0);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(0);	  Integer    dec    =    createInteger(0);    	non-compiled	[CE]  	57	None	replace
13	[BUG]  [BUGGY]  Integer  dec  =  getDecimalValue();  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  getDecimalValue();  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  getDecimalValue();	  Integer    dec    =    createInteger(0);    	non-compiled	[CE]  	57	None	replace
14	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))&&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))&&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));	  Dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	49	None	replace
17	[BUG]  [BUGGY]  Dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));	  Dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	49	None	replace
18	[BUG]  [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  ==  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));	  Dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	49	None	replace
19	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1));    	non-compiled	[CE]  	44	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	  int    decPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  	67	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  	67	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  exp);	  int    decPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  	67	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);	  int    decPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  	67	None	replace
24	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric.substring(decPos  +  1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(numeric.substring(decPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(numeric.substring(decPos  +  1));	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
25	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(str.substring(decPos  +  1));	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
26	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(expPos  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(expPos  +  1));	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
27	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(str.substring(expPos  +  1));	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
28	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)));    	non-compiled	[CE]  	36	None	replace
29	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  	34	None	replace
30	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length())));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length())));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length())));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  	34	None	replace
31	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  +  1)));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  +  1)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  +  1)));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  	34	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	29	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  len)+  1;  [CE]  [FE]                          NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  len)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  len)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	29	None	replace
34	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()  +  1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(0,  str.length()  +  1));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric.substring(0,  decPos));  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(numeric.substring(0,  decPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(numeric.substring(0,  decPos));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
37	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
38	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  expPos));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  expPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(0,  expPos));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
39	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(decPos  +  1,  str.length());	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	65	None	replace
40	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  1);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	65	None	replace
41	[BUG]  [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(expPos  +  1,  str.length()  -  1);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	65	None	replace
42	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createBigInteger(numeric.substring(1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createBigInteger(numeric.substring(1));	  Integer    dec    =    createBigInteger(numeric);    	non-compiled	[CE]  	23	None	replace
43	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len  +  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  len  +  1);	  int    decPos    =    str.lastIndexOf('.',    len);    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  len);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  len);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  len);	  int    decPos    =    str.lastIndexOf('.',    len);    	non-compiled	[CE]  	5	None	replace
45	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(0,  str.length()  -  1)+  1;	  String    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	63	None	replace
46	[BUG]  [BUGGY]  String  dec  =  numeric.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  numeric.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  numeric.substring(0,  str.length()  -  1)+  1;	  String    dec    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	63	None	replace
47	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	19	None	replace
48	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	19	None	replace
49	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	19	None	replace
50	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	24	None	replace
51	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	24	None	replace
52	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(2))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	20	None	replace
53	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  -  2);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	14	None	replace
54	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(0,  str.length()  -  2);	  Integer    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  	37	None	replace
55	[BUG]  [BUGGY]  Integer  dec  =  str.substring(1,  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(1,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(1,  str.length()  -  1);	  Integer    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  	37	None	replace
56	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  	66	None	replace
57	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DECEMBER);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  DECEMBER);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  	66	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.')/  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  	78	None	replace
59	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')-  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.')-  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.')-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  	78	None	replace
60	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  	56	None	replace
61	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  	56	None	replace
62	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  	56	None	replace
63	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length()  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length()  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length()  +  1));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1,    str.length()));    	non-compiled	[CE]  	64	None	replace
64	[BUG]  [BUGGY]  String  dec  =  numeric.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  numeric.substring(0,  str.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  numeric.substring(0,  str.length()  +  1);	  String    dec    =    numeric.substring(0,    str.length());    	non-compiled	[CE]  	31	None	replace
65	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(0,  str.length()  -  2);	  String    dec    =    numeric.substring(0,    str.length());    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(0,  str.length()  *  1  +  1);	  Integer    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	47	None	replace
67	[BUG]  [BUGGY]  int  dec  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  dec  =  str.substring(0,  str.length()  +  1);	  Integer    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	47	None	replace
68	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	46	None	replace
69	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric,  expPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(numeric,  expPos);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(numeric,  expPos);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
70	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  str.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  str.length());	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
71	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  str);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  str);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
72	[BUG]  [BUGGY]  Dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));	  Dec    {    null    &&    exp!=    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	43	None	replace
73	[BUG]  [BUGGY]  String  dec  =  str.substring(descPos  +  1,  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(descPos  +  1,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(descPos  +  1,  str.length()  -  1);	  String    dec    =    str.substring(descPos    +    1,    str.length());    	non-compiled	[CE]  	16	None	replace
74	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	71	None	replace
75	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	71	None	replace
76	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.')/  2;	  int    decPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	28	None	replace
77	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.')+  2;	  int    decPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	28	None	replace
78	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
79	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp!=  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp!=  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  exp!=  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
80	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
81	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	35	None	replace
82	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  0);	  int    decPos    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  	4	None	replace
83	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  2);	  int    decPos    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  	4	None	replace
84	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length())))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
85	[BUG]  [BUGGY]  if(expPos  >=  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(expPos  >=  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(expPos  >=  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
86	[BUG]  [BUGGY]  if(expPos  ==  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {  [CE]  [FE]                          NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(expPos  ==  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(expPos  ==  0  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
87	[BUG]  [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	42	None	replace
88	[BUG]  [BUGGY]  Integer  decPos  =  str.length();  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  decPos  =  str.length();  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  decPos  =  str.length();	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  	40	None	replace
89	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)/  1;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)/  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  lastChar)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	76	None	replace
90	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  len)/  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  len)/  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  len)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	76	None	replace
91	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  	3	None	replace
92	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	50	None	replace
93	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	50	None	replace
94	[BUG]  [BUGGY]  Integer  dec  =  createLong(numeric.substring(0,  str.length()  -  1));  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createLong(numeric.substring(0,  str.length()  -  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createLong(numeric.substring(0,  str.length()  -  1));	  Integer    dec    =    createLong(numeric);    	non-compiled	[CE]  	21	None	replace
95	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	8	None	replace
96	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(numeric);    	non-compiled	[CE]  	59	None	replace
97	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(numeric);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(numeric);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(numeric);    	non-compiled	[CE]  	59	None	replace
98	[BUG]  [BUGGY]  DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
99	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp!=  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
100	[BUG]  [BUGGY]  DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
101	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)+  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP)+  1;	  int    decPos    =    str.indexOf('.',    decPos)+    1;    	non-compiled	[CE]  	77	None	replace
102	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(0,  str.length()  *  1  +  1);	  String    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	54	None	replace
103	[BUG]  [BUGGY]  String  dec  =  str.substring(1,  str.length()  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(1,  str.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(1,  str.length()  +  1);	  String    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	54	None	replace
104	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  lastChar)+  1;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  lastChar)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  lastChar)+  1;	  int    decPos    =    str.indexOf('.',    lastChar)+    1;    	non-compiled	[CE]  	53	None	replace
105	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  firstChar)+  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  firstChar)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  firstChar)+  1;	  int    decPos    =    str.indexOf('.',    lastChar)+    1;    	non-compiled	[CE]  	53	None	replace
106	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  '_')+  1;  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  '_')+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  '_')+  1;	  int    decPos    =    str.indexOf('.',    lastChar)+    1;    	non-compiled	[CE]  	53	None	replace
107	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	72	None	replace
108	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	72	None	replace
109	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	72	None	replace
110	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
111	[BUG]  [BUGGY]  DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <  N,>  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
112	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  length)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
113	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	73	None	replace
114	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	73	None	replace
115	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric)))    {    	non-compiled	[CE]  	45	None	replace
116	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  exp);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	55	None	replace
117	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')-  2;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.')-  2;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.')-  2;	  int    decPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	28	None	replace
118	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  (isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	74	None	replace
119	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  lastChar);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	55	None	replace
120	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  	66	None	replace
121	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)+  1  +  1;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  lastChar)+  1  +  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  lastChar)+  1  +  1;	  int    decPos    =    str.indexOf('.',    lastChar)+    1;    	non-compiled	[CE]  	53	None	replace
122	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	25	None	replace
123	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp!=  null  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
124	[BUG]  [BUGGY]  String  dec  =  str.substring(1,  str.length()  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(1,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(1,  str.length()  -  1);	  String    dec    =    str.substring(0,    str.length());    	non-compiled	[CE]  	11	None	replace
125	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	71	None	replace
126	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
127	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.charAt(1))  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.charAt(1))  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  -  1))  ||  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.charAt(1))	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
128	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	60	None	replace
129	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  exp));  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(0,  exp));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(0,  exp));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
130	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  decPos));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  decPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(str.substring(0,  decPos));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
131	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	24	None	replace
132	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    &&    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	32	None	replace
133	[BUG]  [BUGGY]  if(dec  ==  null)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null)  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null)  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
134	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
135	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp!=    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	9	None	replace
136	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len)-  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len)-  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  len)-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  	78	None	replace
137	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
138	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))))    {    	non-compiled	[CE]  	51	None	replace
139	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length())+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(0,  str.length())+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(0,  str.length())+  1;	  Integer    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	47	None	replace
140	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  expPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  expPos);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  expPos);	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
141	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1)+  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1)+  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(decPos  +  1)+  1);	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
142	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  null.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(0,  null.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(0,  null.length()  -  1);	  String    dec    =    numeric.substring(0,    str.length());    	non-compiled	[CE]  	31	None	replace
143	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(2))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	20	None	replace
144	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))&&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	10	None	replace
145	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))&&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	10	None	replace
146	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  1);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
147	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  expPos  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  expPos  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  expPos  +  1);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
148	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
149	[BUG]  [BUGGY]  DecimalValue  <?>  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <?>  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <?>  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
150	[BUG]  [BUGGY]  Integer  dec  =  createBigDecimal(numeric);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createBigDecimal(numeric);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createBigDecimal(numeric);	  Integer    dec    =    createBigInteger(numeric);    	non-compiled	[CE]  	23	None	replace
151	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1,  str.length()));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	7	None	replace
152	[BUG]  [BUGGY]  char  decPos  =  str.length();  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  char  decPos  =  str.length();  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	char  decPos  =  str.length();	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  	40	None	replace
153	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))))    {    	non-compiled	[CE]  	51	None	replace
154	[BUG]  [BUGGY]  if(expPos  >=  0  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(expPos  >=  0  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(expPos  >=  0  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp!=    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	9	None	replace
155	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	24	None	replace
156	[BUG]  [BUGGY]  String  dec  =  mant.substring(0,  str.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  mant.substring(0,  str.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  mant.substring(0,  str.length()  -  1);	  String    dec    =    numeric.substring(0,    str.length());    	non-compiled	[CE]  	31	None	replace
157	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1,  str.length())));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  	34	None	replace
158	[BUG]  [BUGGY]  String  dec  =  str.substring(delimPos  +  1,  str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(delimPos  +  1,  str.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(delimPos  +  1,  str.length());	  String    dec    =    str.substring(decPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  	61	None	replace
159	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  exp);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  exp);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(decPos  +  1),  exp);	  Integer    dec    =    createInteger(numeric.substring(decPos    +    1));    	non-compiled	[CE]  	69	None	replace
160	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric.substring(decPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric.substring(decPos));	  Integer    dec    =    createInteger(numeric.substring(1));    	non-compiled	[CE]  	22	None	replace
161	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length()));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2,  str.length()));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1,    str.length()    -    1));    	non-compiled	[CE]  	48	None	replace
162	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos  +  1)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos  +  1)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos  +  1)));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	35	None	replace
163	[BUG]  [BUGGY]  DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()));	  Dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	49	None	replace
164	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(0,  str.length()  *  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(0,  str.length()  *  1);	  String    dec    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	54	None	replace
165	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  	78	None	replace
166	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  3);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  str.substring(decPos  +  1,  str.length()  -  3);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	String  dec  =  str.substring(decPos  +  1,  str.length()  -  3);	  String    dec    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	14	None	replace
167	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2)));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)));    	non-compiled	[CE]  	36	None	replace
168	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(decPos  +  1,  str.length()  -  2);	  Integer    dec    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	65	None	replace
169	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos  +  1)+  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos  +  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  decPos  +  1)+  1;	  int    decPos    =    str.indexOf('.',    decPos)+    1;    	non-compiled	[CE]  	77	None	replace
170	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos)+  1;  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  decPos)+  1;	  int    decPos    =    str.indexOf('.',    decPos)+    1;    	non-compiled	[CE]  	77	None	replace
171	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  dec  +  1);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  	66	None	replace
172	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    decPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  	67	None	replace
173	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	29	None	replace
174	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	42	None	replace
175	[BUG]  [BUGGY]  if(expPos  >  0  &&  expPos  <  str.length()  -  1)  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(expPos  >  0  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(expPos  >  0  &&  expPos  <  str.length()  -  1)  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
176	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  1)))  {  [CE]  [FE]                        NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  str.length()  1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
177	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1)))  {  [CE]  [FE]                          NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    str.length()    -    1)))    {    	non-compiled	[CE]  	26	None	replace
178	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos));  [CE]  [FE]            NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(str.substring(0,  expPos));	  Integer    dec    =    createInteger(numeric.substring(0,    decPos));    	non-compiled	[CE]  	68	None	replace
179	[BUG]  [BUGGY]  DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
180	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1)));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  1)));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)));    	non-compiled	[CE]  	75	None	replace
181	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos)/  2;  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos)/  2;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	int  decPos  =  str.indexOf('.',  decPos)/  2;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	76	None	replace
182	[BUG]  [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Dec  {  null  &&  exp  ==  null  &&  isDigits(str.substring(expPos  +  1));	  Dec    {    null    &&    exp    ==    null    &&    isDigits(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	7	None	replace
183	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
184	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                      NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
185	[BUG]  [BUGGY]  if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
186	[BUG]  [BUGGY]  if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	if(!Character.isDigit(numeric.charAt(0))  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-'    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	18	None	replace
187	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  str.substring(0,  str.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  str.substring(0,  str.length()));	  Integer    dec    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  	38	None	replace
188	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  DEC_ZERO);  [CE]  [FE]              NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  DEC_ZERO);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  DEC_ZERO);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
189	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric,  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Integer  dec  =  createInteger(numeric,  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	Integer  dec  =  createInteger(numeric,  2);	  Integer    dec    =    createInteger(numeric,    expPos);    	non-compiled	[CE]  	58	None	replace
190	[BUG]  [BUGGY]  DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <  N,  V>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
191	[BUG]  [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  {  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
192	[BUG]  [BUGGY]  DecimalValue  <  N,  E>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      exp  =  str.substring(expPos  +  1,  str.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  str.substring(0,  str.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  DecimalValue  <  N,  E>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	503	505	2	replace	DecimalValue  <  N,  E>  dec  =  null  &&  exp  ==  null  &&  isDigits(numeric.substring(expPos  +  1));	  DecimalValue    {    null    &&    exp    ==    null    &&    isDigits(numeric.substring(expPos    +    1));    	non-compiled	[CE]  	70	None	replace
