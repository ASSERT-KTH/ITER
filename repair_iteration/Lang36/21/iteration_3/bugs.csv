bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()  -  2);	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  	38	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  str.length()  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  str.length()  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  str.length()  -  1);	  int    decPos    =    str.indexOf('.',    exp);    	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp  +  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  exp  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  exp  +  1);	  int    decPos    =    str.indexOf('.',    exp);    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  str.length());  [CE]  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  str.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  str.length());	  int    decPos    =    str.indexOf('.',    exp);    	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  	4	None	replace
8	[BUG]  [BUGGY]  Integer  decPos  =  exp.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  decPos  =  exp.length();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  decPos  =  exp.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  	35	None	replace
9	[BUG]  [BUGGY]  char  decPos  =  exp.length();  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  char  decPos  =  exp.length();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	char  decPos  =  exp.length();	  int    decPos    =    exp.length();    	non-compiled	[CE]  	35	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(expPos  +  1,  str.length()  -  1);	  String    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	32	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	32	None	replace
13	[BUG]  [BUGGY]  Integer  dec  =  getDecimalValue();  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  getDecimalValue();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  getDecimalValue();	  Integer    dec    =    createInteger(0);    	non-compiled	[CE]  	14	None	replace
14	[BUG]  [BUGGY]  Integer  str  =  createInteger(dec,  expPos);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(dec,  expPos);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(dec,  expPos);	  Integer    str    =    createInteger(dec);    	non-compiled	[CE]  	22	None	replace
15	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(dec);    	non-compiled	[CE]  	22	None	replace
16	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  expPos  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  expPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  expPos  +  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
17	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
18	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  expPos  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  expPos  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  expPos  -  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
19	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  2);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  2);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.')/  2;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.')/  2;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	34	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	34	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  2;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)/  2;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos)/  2;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	34	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.')/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	34	None	replace
24	[BUG]  [BUGGY]  Integer  dec  =  createInteger(2);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(2);	  Integer    dec    =    createInteger(1);    	non-compiled	[CE]  	29	None	replace
25	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  1);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  	7	None	replace
26	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [CE]  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  -  1);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  	7	None	replace
27	[BUG]  [BUGGY]  int  dec  =  createInteger(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  dec  =  createInteger(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  dec  =  createInteger(str);	  Integer    dec    =    createLong(str);    	non-compiled	[CE]  	17	None	replace
28	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  	3	None	replace
29	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length());  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  str.length());	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  	3	None	replace
30	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_MINUS_ONE);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  	3	None	replace
31	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.')+  2;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  Integer  decPos  =  str.length();  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  decPos  =  str.length();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  decPos  =  str.length();	  int    decPos    =    str.length()    +    1;    	non-compiled	[CE]  	9	None	replace
34	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  	30	None	replace
35	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
36	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  expPos));  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  expPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(0,  expPos));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
37	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
38	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
39	[BUG]  [BUGGY]  char  decPos  =  str.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  char  decPos  =  str.length();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	char  decPos  =  str.length();	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  	8	None	replace
40	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	27	None	replace
41	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  2;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  2;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos)+  2;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	27	None	replace
42	[BUG]  [BUGGY]  Integer  dec  =  createInteger(dec,  expPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(dec,  expPos);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(dec,  expPos);	  Integer    dec    =    createInteger(dec);    	non-compiled	[CE]  	15	None	replace
43	[BUG]  [BUGGY]  Integer  dec  =  createInteger(decPos  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(decPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(decPos  +  1);	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  	16	None	replace
44	[BUG]  [BUGGY]  Integer  dec  =  createInteger(expPos  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(expPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(expPos  +  1);	  Integer    dec    =    createInteger(str    +    1);    	non-compiled	[CE]  	37	None	replace
45	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(dec);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createBigInteger(dec);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createBigInteger(dec);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  	24	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  createInt(str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInt(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInt(str);	  Integer    str    =    createLong(str);    	non-compiled	[CE]  	25	None	replace
47	[BUG]  [BUGGY]  Integer  str  =  createLong(dec);  [CE]  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createLong(dec);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createLong(dec);	  Integer    str    =    createLong(str);    	non-compiled	[CE]  	25	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    decPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  	39	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  exp  +  1);	  int    decPos    =    str.lastIndexOf('.',    exp);    	non-compiled	[CE]  	2	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  -  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  exp  -  1);	  int    decPos    =    str.lastIndexOf('.',    exp);    	non-compiled	[CE]  	2	None	replace
51	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos  +  1);	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
52	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  decPos.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  decPos.length());	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
53	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos  +.length());	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
54	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos  +  1,  str.length());	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
55	[BUG]  [BUGGY]  Integer  dec  =  createInt(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInt(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInt(str);	  Integer    dec    =    createLong(str);    	non-compiled	[CE]  	17	None	replace
56	[BUG]  [BUGGY]  Integer  dec  =  getDecimalInteger(dec);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  getDecimalInteger(dec);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  getDecimalInteger(dec);	  Integer    dec    =    createLong(str);    	non-compiled	[CE]  	17	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  	24	None	replace
58	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  decPos));  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  decPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(0,  decPos));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
59	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(decPos));  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(decPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(decPos));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
60	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.charAt(0));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
61	[BUG]  [BUGGY]  Integer  str  =  createInteger(mant);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(mant);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(mant);	  Integer    str    =    createInteger(dec);    	non-compiled	[CE]  	22	None	replace
62	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp  -  1);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  exp  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  exp  -  1);	  int    decPos    =    str.indexOf('.',    exp);    	non-compiled	[CE]  	6	None	replace
63	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.lastIndexOf('.',    expPos);    	non-compiled	[CE]  	3	None	replace
64	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  -  1)/  1;	  int    decPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	34	None	replace
65	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(expPos  +  1,  str.length()  -  2);	  String    str    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
66	[BUG]  [BUGGY]  Integer  dec  =  createInteger(dec  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(dec  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(dec  +  1);	  Integer    dec    =    createInteger(str    +    1);    	non-compiled	[CE]  	37	None	replace
67	[BUG]  [BUGGY]  Integer  dec  =  createInteger(decPos  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(decPos  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(decPos  -  1);	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  	16	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1).length();	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  	7	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [CE]  [FE]                          NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  2);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  	7	None	replace
70	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(dec);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createBigInteger(dec);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createBigInteger(dec);	  Integer    dec    =    createBigInteger(str);    	non-compiled	[CE]  	28	None	replace
71	[BUG]  [BUGGY]  Integer  dec  =  createBigDecimal(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createBigDecimal(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createBigDecimal(str);	  Integer    dec    =    createBigInteger(str);    	non-compiled	[CE]  	28	None	replace
72	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(0);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createBigInteger(0);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createBigInteger(0);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  	23	None	replace
73	[BUG]  [BUGGY]  int  decPos  =  exp.length()  -  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  exp.length()  -  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  exp.length()  -  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	35	None	replace
74	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  DEC_MINUS_ONE);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  DEC_MINUS_ONE);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  DEC_MINUS_ONE);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
75	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos));  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str.substring(expPos));	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  	16	None	replace
76	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos));  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str.substring(decPos));	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  	16	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  createDouble(str);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createDouble(str);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createDouble(str);	  Integer    str    =    createLong(str);    	non-compiled	[CE]  	25	None	replace
78	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1.length());  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos  +  1.length());	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  	41	None	replace
79	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos)+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	32	None	replace
80	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length())+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos.length())+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos.length())+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	32	None	replace
81	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')-  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.')-  1;	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  	8	None	replace
82	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  decPos.length()  -  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  decPos.length()  -  1);	  String    str    =    str.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  	42	None	replace
83	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(decPos  +  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(decPos  +  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
84	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(decPos,  expPos));  [CE]  [FE]                    NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  str  =  createInteger(str.substring(decPos,  expPos));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(decPos,  expPos));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	40	None	replace
85	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  1);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  	30	None	replace
86	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  expPos.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  expPos.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(expPos  +  1,  expPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  	30	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(decPos  +  1,  expPos  +  2);	  String    str    =    str.substring(decPos    +    1,    expPos.length());    	non-compiled	[CE]  	30	None	replace
88	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.',    exp);    	non-compiled	[CE]  	2	None	replace
89	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  decPos.length());  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(expPos  +  1,  decPos.length());	  String    str    =    str.substring(decPos    +    1,    expPos.length()    -    1);    	non-compiled	[CE]  	31	None	replace
90	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  [FE]              NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos);	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  	21	None	replace
91	[BUG]  [BUGGY]  String  str  =  str.substring(0,  decPos);  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  decPos);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  decPos);	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  	21	None	replace
92	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()));	  String    str    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  	20	None	replace
93	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1)+  1;  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  -  1)+  1;	  int    decPos    =    str.indexOf('.',    expPos)+    1;    	non-compiled	[CE]  	27	None	replace
94	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  exp);  [CE]  [FE]            NumberFormatException      [CONTEXT]        if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {      [BUGGY]  Integer  dec  =  createInteger(str,  exp);  [BUGGY]      return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  exp);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  	36	None	replace
