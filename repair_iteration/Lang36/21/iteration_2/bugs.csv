bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createBigDecimal(dec);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  return  createBigDecimal(dec);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	return  createBigDecimal(dec);	  return    createInteger(dec);    	non-compiled	[CE]  	10	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  exp);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  expPos);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  exp);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	5	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1);  [CE]  [FE]                    NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos  +  1);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	5	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.')+  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(decPos  +  1,  str.length()  -  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(decPos  +  1,  str.length()  -  1);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(expPos  +  1,  str.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
14	[BUG]  [BUGGY]  Integer  dec  =  createInteger(0);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(0);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(0);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
15	[BUG]  [BUGGY]  Integer  dec  =  createInteger(dec);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(dec);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(dec);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
16	[BUG]  [BUGGY]  Integer  dec  =  createInteger(decPos);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(decPos);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(decPos);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
17	[BUG]  [BUGGY]  Integer  dec  =  createLong(str);  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createLong(str);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createLong(str);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
18	[BUG]  [BUGGY]  return  createLong(dec);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  return  createLong(dec);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	return  createLong(dec);	  return    createLong(str);    	non-compiled	[CE]  	6	None	replace
19	[BUG]  [BUGGY]  return  createBigInteger(dec);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  return  createBigInteger(dec);  [BUGGY]    }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	return  createBigInteger(dec);	  return    createBigInteger(str);    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  createInteger(dec);  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  str  =  createInteger(dec);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(dec);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	4	None	replace
23	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	4	None	replace
24	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  [FE]                  NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createBigInteger(str);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	4	None	replace
25	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  [FE]                    NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createLong(str);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	4	None	replace
26	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.')+  2;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	12	None	replace
27	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  expPos)+  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	12	None	replace
28	[BUG]  [BUGGY]  Integer  dec  =  createBigInteger(str);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createBigInteger(str);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createBigInteger(str);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
29	[BUG]  [BUGGY]  Integer  dec  =  createInteger(1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(1);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
30	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length());  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(decPos  +  1,  expPos.length());	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
31	[BUG]  [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(decPos  +  1,  expPos.length()  -  1);	      String    str    =    str.substring(decPos    +    1,    str.length());    	non-compiled	[CE]  	13	None	replace
32	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	5	None	replace
34	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.')/  1;	      int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	12	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  exp.length();  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  exp.length();  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  exp.length();	      int    decPos    =    str.length();    	non-compiled	[CE]  	2	None	replace
36	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  expPos);  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(str,  expPos);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str,  expPos);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
37	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str  +  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  dec  =  createInteger(str  +  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  dec  =  createInteger(str  +  1);	      Integer    dec    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [CE]  [FE]            NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POP);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POP);	      int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	3	None	replace
39	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [CE]  [FE]                NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_POP);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	int  decPos  =  str.indexOf('.',  DEC_POP);	      int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  	5	None	replace
40	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  [FE]              NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	4	None	replace
41	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length());  [CE]  [FE]        NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  expPos.length());  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [CE]  [FE]          NumberFormatException    [CONTEXT]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {    [BUGGY]  String  str  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]    return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	560	560	2	replace	String  str  =  str.substring(0,  expPos.length()  -  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	1	None	replace
