bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.lastIndexOf('.',  2);	  int    str    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
5	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(2));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
6	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [CE]  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(1),  str.length());	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
7	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length()  -  1);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(1),  str.length()  -  1);	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
8	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	28	None	replace
9	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str,  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str,  2);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	28	None	replace
10	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str,  4);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str,  4);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	28	None	replace
11	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1).trim();  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1).trim();  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  -  1).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  	24	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  	24	None	replace
13	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2).trim();  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2).trim();  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  -  2).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  	24	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	36	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	36	None	replace
16	[BUG]  [BUGGY]  Integer  str  =  getInteger(1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(1);	  Integer    str    =    getInteger(lastChar);    	non-compiled	[CE]  	25	None	replace
17	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "0x "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "- ")||  str.startsWith( "0x "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	33	None	replace
18	[BUG]  [BUGGY]  Integer  str  =  getMinimumInteger();  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getMinimumInteger();  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getMinimumInteger();	  Integer    str    =    getInteger(0);    	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  	7	None	replace
20	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  true);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  true);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  true);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  	22	None	replace
21	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false,  0);  [CE]  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  false,  0);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  false,  0);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  	22	None	replace
22	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  false,  true);  [CE]  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  false,  true);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  false,  true);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  	22	None	replace
23	[BUG]  [BUGGY]  Number  str  =  createNull(str,  false);  [CE]  [FE]                            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNull(str,  false);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNull(str,  false);	  Number    str    =    createNumber(str,    false);    	non-compiled	[CE]  	22	None	replace
24	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  0);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.indexOf('.',  0);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.indexOf('.',  0);	  int    str    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  	16	None	replace
25	[BUG]  [BUGGY]  Number  str  =  getNumber(str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.length());	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  	17	None	replace
26	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
27	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
28	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
29	[BUG]  [BUGGY]  Number  str  =  createLong(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createLong(str);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createLong(str);	  Number    str    =    createBigInteger(str);    	non-compiled	[CE]  	42	None	replace
30	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( "-0 "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( ".0 ")||  str.startsWith( "-0 "))  {	  if(str.startsWith(   "0   ")||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  	44	None	replace
32	[BUG]  [BUGGY]  Number  str  =  createNull();  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNull();  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNull();	  Number    str    =    createInteger(str);    	non-compiled	[CE]  	26	None	replace
33	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  1);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	20	None	replace
34	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  4);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  4);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  4);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	20	None	replace
35	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0L);  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str,  0L);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str,  0L);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	20	None	replace
36	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	10	None	replace
37	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-1))  {  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0 ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	10	None	replace
38	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.length()  +  1);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length()  -  2);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.length()  -  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.length()  -  2);	  Integer    str    =    getInteger(str.length());    	non-compiled	[CE]  	2	None	replace
40	[BUG]  [BUGGY]  Number  str  =  getNumber(str.getValue());  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.getValue());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.getValue());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	29	None	replace
41	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  2));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(0,  2));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  	38	None	replace
42	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(0,  1));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  	38	None	replace
43	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(2));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(2));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  	38	None	replace
44	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  12);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  12);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.lastIndexOf('.',  12);	  int    str    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  	40	None	replace
45	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  10);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  10);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.lastIndexOf('.',  10);	  int    str    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  	40	None	replace
46	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	34	None	replace
47	[BUG]  [BUGGY]  Number  str  =  getString(str.toUpperCase());  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getString(str.toUpperCase());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getString(str.toUpperCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  	41	None	replace
48	[BUG]  [BUGGY]  Number  str  =  getString(str.toLowerCase());  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getString(str.toLowerCase());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getString(str.toLowerCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  	41	None	replace
49	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	35	None	replace
50	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1)||  str.startsWith( "-1))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1)||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1)||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	35	None	replace
51	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  	11	None	replace
52	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str,  1);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	30	None	replace
53	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  2);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str,  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str,  2);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	30	None	replace
54	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  -1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.indexOf('.',  -1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.indexOf('.',  -1);	  int    str    =    str.indexOf('.');    	non-compiled	[CE]  	32	None	replace
55	[BUG]  [BUGGY]  char  str  =  str.indexOf('.');  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  char  str  =  str.indexOf('.');  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	char  str  =  str.indexOf('.');	  int    str    =    str.indexOf('.');    	non-compiled	[CE]  	32	None	replace
56	[BUG]  [BUGGY]  if(str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {	  if(str.startsWith(   "-0   ")||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  	9	None	replace
57	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-+ "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-+ "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-+ "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	non-compiled	[CE]  	27	None	replace
58	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( ".-1))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( ".-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x   ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	19	None	replace
59	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
60	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
61	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length()  -  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(1),  str.length()  -  1);	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
62	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
63	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(0,  str.length()));	  Integer    str    =    getInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	37	None	replace
64	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  +  1));	  Integer    str    =    getInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	37	None	replace
65	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  1));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(0,  str.length()  1));	  Integer    str    =    getInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	37	None	replace
66	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  4);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str,  4);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str,  4);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	30	None	replace
67	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(1,  str.length()));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(1,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(1,  str.length()));	  Integer    str    =    getInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	37	None	replace
68	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	6	None	replace
69	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	6	None	replace
70	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-1 "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-1 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0 ")||  str.startsWith( "-1 "))  {	  if(str.startsWith(   "0   ")||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  	44	None	replace
71	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       "))    {    	non-compiled	[CE]  	23	None	replace
73	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       "))    {    	non-compiled	[CE]  	23	None	replace
74	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(1),  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(1),  str.length());	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
75	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-0x)||  str.startsWith( "-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-0x)||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "-0x)||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	35	None	replace
76	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	8	None	replace
77	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	8	None	replace
78	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1)||  str.startsWith( "-0 "))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-1)||  str.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-1)||  str.startsWith( "-0 "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	10	None	replace
79	[BUG]  [BUGGY]  if(str.startsWith( "-1   ")||  str.startsWith( "-1   "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "-1   ")||  str.startsWith( "-1   "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "-1   ")||  str.startsWith( "-1   "))  {	  if(str.startsWith(   "-0   ")||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  	9	None	replace
80	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0x "))  {	  if(str.startsWith(   "-0   ")||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  	9	None	replace
81	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  16);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.indexOf('.',  16);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.indexOf('.',  16);	  int    str    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  	40	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.charAt(0));  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.charAt(0));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.charAt(0));	  Integer    str    =    getInteger(str.length()    -    1);    	non-compiled	[CE]  	3	None	replace
83	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	33	None	replace
84	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1)+  1);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
85	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  0);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
86	[BUG]  [BUGGY]  Number  str  =  getNullValue(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNullValue(str);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNullValue(str);	  Number    str    =    getString(str);    	non-compiled	[CE]  	41	None	replace
87	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( ".0x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	19	None	replace
88	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".-1))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	19	None	replace
89	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  4);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.indexOf('.',  4);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.indexOf('.',  4);	  int    str    =    str.indexOf('.');    	non-compiled	[CE]  	32	None	replace
90	[BUG]  [BUGGY]  Number  str  =  createNumber(str.charAt(0));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.charAt(0));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.charAt(0));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
91	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  int  str  =  str.indexOf('.',  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	int  str  =  str.indexOf('.',  1);	  int    str    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  	13	None	replace
92	[BUG]  [BUGGY]  Number  str  =  createBigDecimal(str);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createBigDecimal(str);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createBigDecimal(str);	  Number    str    =    createBigInteger(str);    	non-compiled	[CE]  	42	None	replace
93	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-0 "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-0 "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	non-compiled	[CE]  	27	None	replace
94	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1,  str.length()));  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(1,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(1,  str.length()));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	39	None	replace
95	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.toLowerCase());	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  	17	None	replace
96	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.substring(2,  str.length()));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  getInteger(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  getInteger(str.substring(2,  str.length()));	  Integer    str    =    getInteger(str.substring(1));    	non-compiled	[CE]  	38	None	replace
97	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	34	None	replace
98	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-0x   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  	34	None	replace
99	[BUG]  [BUGGY]  Number  str  =  getString(str.substring(0,  str.length()  -  1));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getString(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getString(str.substring(0,  str.length()  -  1));	  Number    str    =    getString(str);    	non-compiled	[CE]  	41	None	replace
100	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toUpperCase());  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.toUpperCase());  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.toUpperCase());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	29	None	replace
101	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "- "))  {  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "- "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "- "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       "))    {    	non-compiled	[CE]  	23	None	replace
102	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length())+  1;  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  String  str  =  str.substring(1,  str.length())+  1;  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	String  str  =  str.substring(1,  str.length())+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	36	None	replace
103	[BUG]  [BUGGY]  Number  str  =  createInteger(str,  0);  [CE]  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createInteger(str,  0);  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createInteger(str,  0);	  Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	20	None	replace
104	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1 "))  {  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1 "))  {  [BUGGY]          return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	if(str.startsWith( "0x ")||  str.startsWith( "-1 "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "-1))    {    	non-compiled	[CE]  	19	None	replace
105	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	8	None	replace
106	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  getNumber(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  getNumber(str.substring(2,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  	18	None	replace
107	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2,  str.length()));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(2,  str.length()));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
108	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2,  str.length()  -  1));  [CE]  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }      [BUGGY]  Number  str  =  createNumber(str.substring(2,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "--     "))  {      return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     "))  {  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	455	455	2	replace	Number  str  =  createNumber(str.substring(2,  str.length()  -  1));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	21	None	replace
