bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  str.endsWith( ".- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.endsWith( ".- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.endsWith( ".- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  if(str.startsWith(   "-   ")||    str.endsWith(   ".-   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
2	[BUG]  [BUGGY]  ||  str.endsWith( ".000 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.endsWith( ".000 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.endsWith( ".000 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  if(str.startsWith(   "-   ")||    str.endsWith(   ".-   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
3	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str,  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length());  return  new  Number(str,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    return    new    Number(str,    str.length());    	non-compiled	[CE]  not  a  statement	25	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  return  new  Number(str,  str.length());  [CE]  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()));  return  new  Number(str,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()));  return  new  Number(str,  str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    return    new    Number(str,    str.length());    	non-compiled	[CE]  	25	None	replace
5	[BUG]  [BUGGY]  ||  str.startsWith( ".- "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( ".- "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( ".- "))  {  return  null;  }	  if(str.startsWith(   "-   ")||    str.startsWith(   ".-   "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
6	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  0,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  0,  str.length());	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  not  a  statement	21	None	replace
7	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  0,  str.length()  -  1);	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  not  a  statement	21	None	replace
8	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  str,  0,  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  str,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  str,  0,  str.length());	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  not  a  statement	21	None	replace
9	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  2);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length()  -  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  0,  str.length()  -  2);	  NumberUtils.copyValue(str,    0,    str.length());    	non-compiled	[CE]  not  a  statement	21	None	replace
10	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  mant);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  mant);	  NumberUtils.copyNumber(mant,    str);    	non-compiled	[CE]  not  a  statement	72	None	replace
11	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  string);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  string);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  string);	  NumberUtils.copyNumber(mant,    str);    	non-compiled	[CE]  not  a  statement	72	None	replace
12	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  number);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  number);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  number);	  NumberUtils.copyNumber(mant,    str);    	non-compiled	[CE]  not  a  statement	72	None	replace
13	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [CE]  <identifier>  expected  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");	  Throwables.throw    new    NumberFormatException(   "Number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
14	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number ",  str);  [CE]  <identifier>  expected  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number ",  str);	  Throwables.throw    new    NumberFormatException(   "Number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
15	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number: "  +  str);  [CE]  <identifier>  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "Number  is  not  a  valid  number: "  +  str);	  Throwables.throw    new    NumberFormatException(   "Number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
16	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Long(str);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Long(str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Long(str);	  return(null    ==    str)?    null    :    new    Long(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
17	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Long(str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Long(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(null  ==  str)?  null  :  new  Long(str.length());	  return(null    ==    str)?    null    :    new    Long(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
18	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  2);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  2);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
19	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  4);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  4);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  4);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
20	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  str);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	84	None	replace
21	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  ex);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  ex);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  ex);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	84	None	replace
22	[BUG]  [BUGGY]  Number  nfe  =  createNull(str,  dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNull(str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNull(str,  dec);	  Number    nfe    =    createNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	84	None	replace
23	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  1);	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  not  a  statement	74	None	replace
24	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  0,  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  0,  str.length());	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  not  a  statement	74	None	replace
25	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  0L);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  0L);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  0L);	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  not  a  statement	74	None	replace
26	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(0,  str.length()));	  Number    nfe    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	85	None	replace
27	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(0,  str.length()  1));	  Number    nfe    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	85	None	replace
28	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  +  1));  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(0,  str.length()  +  1));	  Number    nfe    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	85	None	replace
29	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  str.substring(0,  str.length()));	  Number    nfe    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	85	None	replace
30	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  this);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  this);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  this);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
31	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  null,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  null,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  null,  str);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
32	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  null,  0);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  null,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  null,  0);	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
33	[BUG]  [BUGGY]  NumberUtils.copyStringValue(str,  0);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyStringValue(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyStringValue(str,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  not  a  statement	66	None	replace
34	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  0);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  not  a  statement	66	None	replace
35	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
36	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str.length());	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
37	[BUG]  [BUGGY]  ||  str.equals( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.equals( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.equals( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.endsWith(   "-   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
38	[BUG]  [BUGGY]  ||  str.endsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.endsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.endsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  if(str.startsWith(   "-   ")||    str.endsWith(   "--   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
39	[BUG]  [BUGGY]  ||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  if(str.startsWith(   "-   ")||    str.endsWith(   "--   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
40	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  str);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
41	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  this);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  this);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  this);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
42	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  true);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  true);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(StringUtils.isBlank(str));  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(StringUtils.isBlank(str));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length());  return  new  Number(StringUtils.isBlank(str));	  String    str    =    str.substring(0,    str.length()    -    1);    return    new    Number(StringUtils.isBlank(str));    	non-compiled	[CE]  not  a  statement	24	None	replace
44	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }	  ||    str.startsWith(   "-   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
45	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    valid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	59	None	replace
46	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "A    valid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	59	None	replace
47	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [CE]  <identifier>  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");	  throw    new    NumberFormatException(   "A    valid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
48	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
49	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
50	[BUG]  [BUGGY]  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	aughtInvalidNumber( "A  blank  string  is  not  a  valid  number. ");	  aughtInvalidNumber(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	78	None	replace
51	[BUG]  [BUGGY]  if(str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.startsWith( "- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  aughtException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	13	None	replace
52	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  nfe);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  nfe);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  nfe);	  NumberUtils.copyNumber(str,    str);    	non-compiled	[CE]  not  a  statement	47	None	replace
53	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    invalid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
54	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "A    invalid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ");  [CE]  <identifier>  expected  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "A  invalid  number  is  not  a  valid  number ");	  throw    new    NumberFormatException(   "A    invalid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
56	[BUG]  [BUGGY]  return  new  Number(str.substring(1,  str.length())));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(1,  str.length())));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(1,  str.length())));	  return    new    Number(str.substring(0,    str.length())));    	non-compiled	[CE]  	76	None	replace
57	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1)));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  +  1)));	  return    new    Number(str.substring(0,    str.length())));    	non-compiled	[CE]  	76	None	replace
58	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  SHORT_ZERO);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  SHORT_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  SHORT_ZERO);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
59	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  null);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  null);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
60	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  SHORT_MINUS_ONE);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  SHORT_MINUS_ONE);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  SHORT_MINUS_ONE);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
61	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  str);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
62	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  0);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  0,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  0,  0);	  NumberUtils.copyValue(str,    0L);    	non-compiled	[CE]  not  a  statement	22	None	replace
63	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  -1,  -1);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  -1,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  -1,  -1);	  NumberUtils.setBlank(str,    -1);    	non-compiled	[CE]  not  a  statement	65	None	replace
64	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  -1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  -1,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  -1,  str.length());	  NumberUtils.setBlank(str,    -1);    	non-compiled	[CE]  not  a  statement	65	None	replace
65	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  -  2));	  return    new    Number(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	4	None	replace
66	[BUG]  [BUGGY]  return  new  Number(str.substring(1,  str.length()  -  1));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(1,  str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(1,  str.length()  -  1));	  return    new    Number(str.substring(1,    str.length()));    	non-compiled	[CE]  not  a  statement	81	None	replace
67	[BUG]  [BUGGY]  return  new  Number(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(2,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(2,  str.length()));	  return    new    Number(str.substring(1,    str.length()));    	non-compiled	[CE]  not  a  statement	81	None	replace
68	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  expPos);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyPos(str,  expPos);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  not  a  statement	80	None	replace
69	[BUG]  [BUGGY]  NumberUtils.copyPos(mant);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyPos(mant);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  not  a  statement	80	None	replace
70	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  decPos);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  decPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyPos(str,  decPos);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  not  a  statement	80	None	replace
71	[BUG]  [BUGGY]  NumberUtils.copyPosition(str);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPosition(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyPosition(str);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  not  a  statement	80	None	replace
72	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1,  str.length()));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  -  1,  str.length()));	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
73	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1),  str.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  -  1),  str.length());	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
74	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1),  str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  +  1),  str.length());	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
75	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1,  str.length()),  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1,  str.length()),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  -  1,  str.length()),  str.length());	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
76	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	43	None	replace
77	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: "  +  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	43	None	replace
78	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	75	None	replace
79	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	75	None	replace
80	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	75	None	replace
81	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  null;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  null;  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length());  return  null;	  String    dec    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  not  a  statement	89	None	replace
82	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  this;  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  this;  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length());  return  this;	  String    dec    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  not  a  statement	89	None	replace
83	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  new  Number(dec);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  new  Number(dec);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length());  return  new  Number(dec);	  String    dec    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  not  a  statement	89	None	replace
84	[BUG]  [BUGGY]  NumberUtils.setLength(str,  true);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(str,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setLength(str,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  not  a  statement	34	None	replace
85	[BUG]  [BUGGY]  NumberUtils.setLong(str,  true);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLong(str,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setLong(str,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  not  a  statement	34	None	replace
86	[BUG]  [BUGGY]  NumberUtils.setShort(str,  true);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setShort(str,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setShort(str,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  not  a  statement	34	None	replace
87	[BUG]  [BUGGY]  ||  str.startsWith( "-- "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "-- "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "-- "))  {  return  null;  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
88	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length()  -  1);	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
89	[BUG]  [BUGGY]  return  createNumber(str,  false);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  false);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  false);	  return    createNumber(str);    	non-compiled	[CE]  not  a  statement	52	None	replace
90	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  this);	  NumberUtils.copyNumber(str,    null);    	non-compiled	[CE]  not  a  statement	48	None	replace
91	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  null,  str);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  null,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  null,  str);	  NumberUtils.copyNumber(str,    null);    	non-compiled	[CE]  not  a  statement	48	None	replace
92	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  str,  null);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(mant,  str,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(mant,  str,  null);	  NumberUtils.copyNumber(str,    null);    	non-compiled	[CE]  not  a  statement	48	None	replace
93	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	18	None	replace
94	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	18	None	replace
95	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  but  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  but  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  but  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	45	None	replace
96	[BUG]  [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length()  +  1,  str.length()  -  1);	  return    new    Number(str.length(),    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
97	[BUG]  [BUGGY]  Parchet.checkState(str!=  null);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkState(str!=  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkState(str!=  null);	  Parchet.checkState(str    ==    null);    	non-compiled	[CE]  not  a  statement	16	None	replace
98	[BUG]  [BUGGY]  Parchet.checkState(mant  ==  null);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkState(mant  ==  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkState(mant  ==  null);	  Parchet.checkState(str    ==    null);    	non-compiled	[CE]  not  a  statement	16	None	replace
99	[BUG]  [BUGGY]  Parchet.checkNotState(str  ==  null);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkNotState(str  ==  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkNotState(str  ==  null);	  Parchet.checkState(str    ==    null);    	non-compiled	[CE]  not  a  statement	16	None	replace
100	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  number  =  str.substring(0,  str.length()  -  1);	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
101	[BUG]  [BUGGY]  aughtException( "Number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtException( "Number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	aughtException( "Number  is  not  a  valid  number ");	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
102	[BUG]  [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  number  =  str.substring(0,  str.length()  -  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  number  =  str.substring(0,  str.length()  -  2);	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
103	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    empty    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	40	None	replace
104	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  2)));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  2)));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  +  2)));	  return    new    Number(str.substring(0,    str.length()    -    2)));    	non-compiled	[CE]  	77	None	replace
105	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0L);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0L);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  0L);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  not  a  statement	32	None	replace
106	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  1);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  not  a  statement	32	None	replace
107	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ",  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number. ",  str);	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	44	None	replace
108	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number   ",    str);    	non-compiled	[CE]  not  a  statement	44	None	replace
109	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  exp);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  exp);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  not  a  statement	62	None	replace
110	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec,  exp);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  dec,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  dec,  exp);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  not  a  statement	62	None	replace
111	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  ex);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  ex);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  ex);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  not  a  statement	62	None	replace
112	[BUG]  [BUGGY]  ||  str.startsWith( ".0 "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( ".0 "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( ".0 "))  {  return  null;  }	  ||    str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
113	[BUG]  [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(0,  str.length()  -  1));	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
114	[BUG]  [BUGGY]  return  createNumber(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]                            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(0,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(0,  str.length()));	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
115	[BUG]  [BUGGY]  return  createNumber(str,  str.substring(1));  [CE]  not  a  statement  [FE]                              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  str.substring(1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  str.substring(1));	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
116	[BUG]  [BUGGY]  return  createNumber(str.substring(1),  str.length());  [CE]  not  a  statement  [FE]                                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(1),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(1),  str.length());	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
117	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  -1,  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  -1,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  -1,  str.length());	  NumberUtils.copyValue(str,    -1);    	non-compiled	[CE]  not  a  statement	87	None	replace
118	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  -1,  str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  -1,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  -1,  str);	  NumberUtils.copyValue(str,    -1);    	non-compiled	[CE]  not  a  statement	87	None	replace
119	[BUG]  [BUGGY]  NumberUtils.copyString(str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyString(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyString(str);	  NumberUtils.copyNumber(mant);    	non-compiled	[CE]  not  a  statement	46	None	replace
120	[BUG]  [BUGGY]  NumberUtils.copyNull(str);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNull(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNull(str);	  NumberUtils.copyNumber(mant);    	non-compiled	[CE]  not  a  statement	46	None	replace
121	[BUG]  [BUGGY]  return(str!=  null)?  null  :  new  Number(str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str!=  null)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str!=  null)?  null  :  new  Number(str.length());	  return(null    ==    str)?    null    :    new    Number(str.length());    	non-compiled	[CE]  not  a  statement	2	None	replace
122	[BUG]  [BUGGY]  ||  str.startsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.startsWith(   ".0   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
123	[BUG]  [BUGGY]  ||  str.startsWith( "0.0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "0.0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "0.0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.startsWith(   ".0   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
124	[BUG]  [BUGGY]  return  createNumber(str,  this);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  this);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  this);	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
125	[BUG]  [BUGGY]  return  createNumber(str,  null,  str);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  null,  str);	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
126	[BUG]  [BUGGY]  return  createNumber(str,  null,  true);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  true);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  null,  true);	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
127	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	58	None	replace
128	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  Throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	58	None	replace
129	[BUG]  [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberFormatException( "Number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    NumberFormatException(       "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	91	None	replace
130	[BUG]  [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberFormatException( "Number  is  not  a  valid  number. ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    NumberFormatException(       "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	91	None	replace
131	[BUG]  [BUGGY]  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberFormatException( "A  valid  number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    NumberFormatException(       "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	91	None	replace
132	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1).trim();  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1).trim();  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  1).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  not  a  statement	79	None	replace
133	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length()).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  not  a  statement	79	None	replace
134	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2).trim();  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2).trim();  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  2).trim();	  String    str    =    str.substring(0,    str.length()).trim();    	non-compiled	[CE]  not  a  statement	79	None	replace
135	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DEC_ZERO);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  DEC_ZERO);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  not  a  statement	86	None	replace
136	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  string);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  string);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  string);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  not  a  statement	86	None	replace
137	[BUG]  [BUGGY]  ||  str.startsWith( ". "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( ". "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( ". "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.endsWith(   ".   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
138	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  true,  false);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  true,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  true,  false);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	8	None	replace
139	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  true,  null);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  true,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  true,  null);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	8	None	replace
140	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	36	None	replace
141	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	1	None	replace
142	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  +  1));  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  +  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  +  1));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	1	None	replace
143	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  1));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	1	None	replace
144	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(str  ==  null)?  null  :  new  Number(str.substring(0,  str.length()  -  1));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	1	None	replace
145	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "Number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "Number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    Throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	27	None	replace
146	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    Throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	27	None	replace
147	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    Throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	27	None	replace
148	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "Str  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "Str  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "Str  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    Throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	27	None	replace
149	[BUG]  [BUGGY]  return  createNull(str,  true);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNull(str,  true);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNull(str,  true);	  return    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	54	None	replace
150	[BUG]  [BUGGY]  return  createNumber(str,  true,  false);  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  true,  false);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  true,  false);	  return    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	54	None	replace
151	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  1)));  [CE]  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  1)));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  1)));	  return    new    Number(str.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  	41	None	replace
152	[BUG]  [BUGGY]  NumberUtils.setLength(str,  false);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(str,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setLength(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
153	[BUG]  [BUGGY]  NumberUtils.setShort(str,  false);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setShort(str,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setShort(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
154	[BUG]  [BUGGY]  NumberUtils.setLong(str,  false);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLong(str,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setLong(str,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
155	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	26	None	replace
156	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "Number  is  not  a  valid  number. ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	26	None	replace
157	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  mant);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  mant);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  not  a  statement	12	None	replace
158	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  string);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  string);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  string);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  not  a  statement	12	None	replace
159	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  false,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  false,  str);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  not  a  statement	7	None	replace
160	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  true);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  false,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  false,  true);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  not  a  statement	7	None	replace
161	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  exp);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  exp);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	73	None	replace
162	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  ex);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  ex);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  ex);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	73	None	replace
163	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  dec,  exp);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  dec,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  dec,  exp);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	73	None	replace
164	[BUG]  [BUGGY]  return  new  Number(str.length()  *  1,  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  *  1,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length()  *  1,  str.length());	  return    new    Number(str.length()    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	51	None	replace
165	[BUG]  [BUGGY]  Parchet.checkArgument(str!=  null);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str!=  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str!=  null);	  Parchet.checkArgument(str    ==    null);    	non-compiled	[CE]  not  a  statement	64	None	replace
166	[BUG]  [BUGGY]  Parchet.checkArgument(str  ==  null  ||  str.length()  ==  0);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str  ==  null  ||  str.length()  ==  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str  ==  null  ||  str.length()  ==  0);	  Parchet.checkArgument(str    ==    null);    	non-compiled	[CE]  not  a  statement	64	None	replace
167	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  aughtException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  not  a  statement	14	None	replace
168	[BUG]  [BUGGY]  aughtException( "A  blank  string  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtException( "A  blank  string  is  not  a  valid  number. ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	aughtException( "A  blank  string  is  not  a  valid  number. ");  }	  aughtException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  not  a  statement	14	None	replace
169	[BUG]  [BUGGY]  ||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }  [CE]  illegal  start  of  expression  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "-- "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
170	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.lastIndexOf('-')+  1));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.lastIndexOf('-')+  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.lastIndexOf('-')+  1));	  return    new    Number(str.substring(0,    str.lastIndexOf('-')));    	non-compiled	[CE]  not  a  statement	42	None	replace
171	[BUG]  [BUGGY]  Parchet.checkNotNull(mant);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkNotNull(mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkNotNull(mant);	  Parchet.checkNotNull(str);    	non-compiled	[CE]  not  a  statement	63	None	replace
172	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()),  null);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()),  null);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()),  null);	  return    new    Number(str.substring(0,    str.length()    +    1));    	non-compiled	[CE]  not  a  statement	5	None	replace
173	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  0,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  0,  str);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  not  a  statement	66	None	replace
174	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	1	None	replace
175	[BUG]  [BUGGY]  ||  str.endsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.endsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.endsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.endsWith(   ".0   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
176	[BUG]  [BUGGY]  ||  str.endsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.endsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.endsWith( "0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.endsWith(   ".0   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
177	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number, ");  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number, ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  valid  number  is  not  a  valid  number, ");	  throw    new    NumberFormatException(   "A    valid    number    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	59	None	replace
178	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "The  Number  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "The  Number  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throw  new  NumberFormatException( "The  Number  is  not  a  valid  number ");	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    Throw    new    NumberFormatException(   "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	27	None	replace
179	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  -1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  -1);	  Number    nfe    =    createNumber(str,    0);    	non-compiled	[CE]  not  a  statement	74	None	replace
180	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  or  a  valid  number ");  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  or  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number,  or  a  valid  number ");	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	45	None	replace
181	[BUG]  [BUGGY]  return  createNumber(str,  0);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  0);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  0);	  return    createNumber(str);    	non-compiled	[CE]  not  a  statement	52	None	replace
182	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length()  -  2);	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
183	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  null;  }  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.length()  ==  0)  {  return  null;  }	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
184	[BUG]  [BUGGY]  Parchet.checkState(str  ==  null  ||  str.length()  ==  0);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkState(str  ==  null  ||  str.length()  ==  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkState(str  ==  null  ||  str.length()  ==  0);	  Parchet.checkState(str    ==    null);    	non-compiled	[CE]  not  a  statement	16	None	replace
185	[BUG]  [BUGGY]  NumberUtils.setBlank(null,  true);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(null,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(null,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  not  a  statement	34	None	replace
186	[BUG]  [BUGGY]  ||  str.startsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  illegal  start  of  expression  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  ||  str.startsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	||  str.startsWith( "-0 "))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  ||    str.startsWith(   ".0   "))    {    throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
187	[BUG]  [BUGGY]  if(str  ==  null)  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str  ==  null)  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str  ==  null)  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }	  aughtInvalidNumber(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	78	None	replace
188	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  ==  0)  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.length()  ==  0)  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }	  aughtInvalidNumber(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	78	None	replace
189	[BUG]  [BUGGY]  if(str.startsWith( "- "))  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.startsWith( "- "))  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.startsWith( "- "))  {  aughtInvalidNumber( "A  blank  string  is  not  a  valid  number ");  }	  aughtInvalidNumber(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	78	None	replace
190	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  false);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  false);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  not  a  statement	7	None	replace
191	[BUG]  [BUGGY]  NumberUtils.setBlank(null,  false);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(null,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(null,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
192	[BUG]  [BUGGY]  NumberUtils.setBlank(mant,  false);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(mant,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(mant,  false);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
193	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  [CE]  <identifier>  expected  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");	  Throwables.throw    new    NumberFormatException(   "Number    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
194	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  empty  string  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "A    empty    string    is    not    a    valid    number   ");    	non-compiled	[CE]  not  a  statement	40	None	replace
195	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  0,  str.length());	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  not  a  statement	32	None	replace
196	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  return  null;  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length())+  1;  return  null;  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length())+  1;  return  null;	  String    dec    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  not  a  statement	89	None	replace
197	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  SHORT_ZERO);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  SHORT_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  SHORT_ZERO);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	73	None	replace
198	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  DEC);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(str,  DEC);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  not  a  statement	73	None	replace
199	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  null,  '-');  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  null,  '-');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  null,  '-');	  NumberUtils.setBlank(str,    null);    	non-compiled	[CE]  not  a  statement	33	None	replace
200	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.endsWith( "-- "))  {  return  null;  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.startsWith( "- ")||  str.endsWith( "-- "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.startsWith( "- ")||  str.endsWith( "-- "))  {  return  null;  }	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	67	None	replace
201	[BUG]  [BUGGY]  Parchet.checkArgument(StringUtils.isBlank(str));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(StringUtils.isBlank(str));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(StringUtils.isBlank(str));	  Parchet.checkArgument(str    ==    null);    	non-compiled	[CE]  not  a  statement	64	None	replace
202	[BUG]  [BUGGY]  Parchet.checkArgument(str  >=  null);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str  >=  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str  >=  null);	  Parchet.checkArgument(str    ==    null);    	non-compiled	[CE]  not  a  statement	64	None	replace
203	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0,  0);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  0,  0);	  NumberUtils.setBlank(str,    -1);    	non-compiled	[CE]  not  a  statement	65	None	replace
204	[BUG]  [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number ",  str);  [CE]  not  a  statement  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberFormatException( "Number  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberFormatException( "Number  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(       "Number    is    not    a    valid    number       ");    NumberFormatException(       "Number    is    not    a    valid    number       ");    	non-compiled	[CE]  not  a  statement	91	None	replace
205	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	36	None	replace
206	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length()));  [CE]  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(1,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(1,  str.length()));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	75	None	replace
207	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  0);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  0);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
208	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  -1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  -1);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
209	[BUG]  [BUGGY]  return  createNumber(str.substring(2));  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(2));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(2));	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
210	[BUG]  [BUGGY]  return  new  Number(str.length()  +  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length()  +  1);	  return    new    Number(str.length(),    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
211	[BUG]  [BUGGY]  MutableString  str  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  MutableString  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	MutableString  str  =  str.substring(0,  str.length()  -  1);	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
212	[BUG]  [BUGGY]  parent.createNumber(str);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  parent.createNumber(str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	parent.createNumber(str);	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
213	[BUG]  [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1),  true);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1),  true);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(0,  str.length()  -  1),  true);	  return    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	54	None	replace
214	[BUG]  [BUGGY]  return  createNumber(str,  null,  0);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  0);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  null,  0);	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
215	[BUG]  [BUGGY]  return  createNumber(str,  null,  -1);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  -1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  null,  -1);	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
216	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  dec);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(null  ==  str)?  null  :  new  Number(str,  dec);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  not  a  statement	3	None	replace
217	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  0L);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  0L);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  0L);	  NumberUtils.copyValue(str,    0L);    	non-compiled	[CE]  not  a  statement	22	None	replace
218	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  exp  +  1);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  exp  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  exp  +  1);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  not  a  statement	86	None	replace
219	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  DEC);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  DEC);	  Number    nfe    =    createNumber(str,    exp);    	non-compiled	[CE]  not  a  statement	86	None	replace
220	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  dec);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyPos(str,  dec);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  not  a  statement	80	None	replace
221	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  null);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(mant,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyNumber(mant,  null);	  NumberUtils.copyNumber(str,    null);    	non-compiled	[CE]  not  a  statement	48	None	replace
222	[BUG]  [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  null;  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.startsWith( "-0 ")||  str.startsWith( "-0 "))  {  return  null;  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
223	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  DEC);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  not  a  statement	62	None	replace
224	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec,  nfe);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  dec,  nfe);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  dec,  nfe);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  not  a  statement	62	None	replace
225	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2),  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()  -  2),  str.length());	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
226	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  true);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(0,  str.length()  -  1),  true);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	8	None	replace
227	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  1);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
228	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  1,  str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  1,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  1,  str);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
229	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  -1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(mant,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(mant,  -1);	  NumberUtils.copyValue(str,    -1);    	non-compiled	[CE]  not  a  statement	87	None	replace
230	[BUG]  [BUGGY]  return  createNumber(str,  dec);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  dec);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  dec);	  return    createNumber(str);    	non-compiled	[CE]  not  a  statement	52	None	replace
231	[BUG]  [BUGGY]  return  new  Number(str.length(),  exp.length());  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length(),  exp.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length(),  exp.length());	  return    new    Number(str.length(),    mant.length());    	non-compiled	[CE]  not  a  statement	57	None	replace
232	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()).length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()).length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(0,  str.length()).length());	  return    new    Number(str.substring(0,    str.length()    +    1));    	non-compiled	[CE]  not  a  statement	5	None	replace
233	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  null;  }  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  null;  }  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	if(str.startsWith( "0 ")||  str.startsWith( "0 "))  {  return  null;  }	  if(str.startsWith(   ".0   ")||    str.startsWith(   ".0   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	82	None	replace
234	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  59);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  59);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  59);	  NumberUtils.copyValue(str,    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
235	[BUG]  [BUGGY]  return  new  Number(str.length()  *  2,  str.length());  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  *  2,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length()  *  2,  str.length());	  return    new    Number(str.length()    +    1,    str.length());    	non-compiled	[CE]  not  a  statement	51	None	replace
236	[BUG]  [BUGGY]  return  createNumber(str,  null,  '-');  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  '-');  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  null,  '-');	  return    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	53	None	replace
237	[BUG]  [BUGGY]  NumberUtils.copyString(str,  0);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyString(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyString(str,  0);	  NumberUtils.copyValue(mant,    0);    	non-compiled	[CE]  not  a  statement	66	None	replace
238	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC_NUMBER);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC_NUMBER);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  DEC_NUMBER);	  NumberUtils.copyNumber(str,    str);    	non-compiled	[CE]  not  a  statement	47	None	replace
239	[BUG]  [BUGGY]  return  new  Number(str.length()  *  2,  str.length()  -  1);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  *  2,  str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.length()  *  2,  str.length()  -  1);	  return    new    Number(str.length(),    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
240	[BUG]  [BUGGY]  return  new  Number(str,  str.substring(0,  str.length()  -  1));  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str,  str.substring(0,  str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str,  str.substring(0,  str.length()  -  1));	  return    new    Number(str.substring(0,    str.length()));    	non-compiled	[CE]  not  a  statement	4	None	replace
241	[BUG]  [BUGGY]  NumberUtils.copyInteger(str);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyInteger(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyInteger(str);	  NumberUtils.copyNumber(mant);    	non-compiled	[CE]  not  a  statement	46	None	replace
242	[BUG]  [BUGGY]  NullPointer  nfe  =  createNumber(str,  true);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NullPointer  nfe  =  createNumber(str,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NullPointer  nfe  =  createNumber(str,  true);	  Number    nfe    =    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	8	None	replace
243	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  exp);  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  exp);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
244	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  DEC);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  DEC);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
245	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  null,  dec);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  null,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  null,  dec);	  Number    nfe    =    createNumber(str,    null);    	non-compiled	[CE]  not  a  statement	9	None	replace
246	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  -1,  -1);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  -1,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  -1,  -1);	  NumberUtils.copyValue(str,    -1);    	non-compiled	[CE]  not  a  statement	87	None	replace
247	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	int  decPos  =  str.lastIndexOf('.');	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
248	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  +  1);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(decPos  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(decPos  +  1);	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
249	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	int  decPos  =  str.indexOf('.');	  [Delete]    	non-compiled	[CE]  not  a  statement	15	None	replace
250	[BUG]  [BUGGY]  return  new  Number(str.substring(1,  str.lastIndexOf('-')));  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(1,  str.lastIndexOf('-')));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(1,  str.lastIndexOf('-')));	  return    new    Number(str.substring(0,    str.lastIndexOf('-')));    	non-compiled	[CE]  not  a  statement	42	None	replace
251	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length());  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(1,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  str  =  str.substring(1,  str.length());	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  not  a  statement	38	None	replace
252	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number, "  +  str);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number, "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number, "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number,   ");    	non-compiled	[CE]  not  a  statement	45	None	replace
253	[BUG]  [BUGGY]  return(this.null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));  [CE]  <identifier>  expected  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(this.null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(this.null  ==  str)?  null  :  new  Number(str.substring(0,  str.length()));	  return(null    ==    str)?    null    :    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
254	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(str.length()  +  1);  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(null  ==  str)?  null  :  new  Number(str.length()  +  1);	  return(null    ==    str)?    null    :    new    Number(str.length());    	non-compiled	[CE]  not  a  statement	2	None	replace
255	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Long(str,  dec);  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Long(str,  dec);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return(null  ==  str)?  null  :  new  Long(str,  dec);	  return(null    ==    str)?    null    :    new    Long(str);    	non-compiled	[CE]  not  a  statement	71	None	replace
256	[BUG]  [BUGGY]  aughtException( "Unknown  number: "  +  str);  [CE]  not  a  statement  [FE]                      NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtException( "Unknown  number: "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	aughtException( "Unknown  number: "  +  str);	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
257	[BUG]  [BUGGY]  aughtException( "Number  string  is  not  a  valid  number ");  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtException( "Number  string  is  not  a  valid  number ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	aughtException( "Number  string  is  not  a  valid  number ");	  if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  not  a  statement	90	None	replace
258	[BUG]  [BUGGY]  return  new  Number(str.substring(1,  str.length()),  str.length());  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(1,  str.length()),  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  new  Number(str.substring(1,  str.length()),  str.length());	  return    new    Number(str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
259	[BUG]  [BUGGY]  Parchet.checkArgument(str.length()  ==  0);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str.length()  ==  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str.length()  ==  0);	  Parchet.checkNotNull(str);    	non-compiled	[CE]  not  a  statement	63	None	replace
260	[BUG]  [BUGGY]  Parchet.checkArgument(str.startsWith( "- "));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str.startsWith( "- "));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str.startsWith( "- "));	  Parchet.checkNotNull(str);    	non-compiled	[CE]  not  a  statement	63	None	replace
261	[BUG]  [BUGGY]  NumberUtils.setBlank(mant,  true);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(mant,  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(mant,  true);	  NumberUtils.setBlank(str,    true);    	non-compiled	[CE]  not  a  statement	34	None	replace
262	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  new  Number(str.length());  [CE]  not  a  statement  [FE]                    NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	String  dec  =  str.substring(0,  str.length());  return  new  Number(str.length());	  String    dec    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  not  a  statement	89	None	replace
263	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  false,  null);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  false,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.setBlank(str,  false,  null);	  NumberUtils.setBlank(str,    false);    	non-compiled	[CE]  not  a  statement	35	None	replace
264	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str,  false,  null);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str,  false,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str,  false,  null);	  Number    nfe    =    createNumber(str,    false);    	non-compiled	[CE]  not  a  statement	7	None	replace
265	[BUG]  [BUGGY]  Parchet.checkArgument(str  ==  null  ||  str.startsWith( "- "));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Parchet.checkArgument(str  ==  null  ||  str.startsWith( "- "));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Parchet.checkArgument(str  ==  null  ||  str.startsWith( "- "));	  Parchet.checkArgument(str    ==    null);    	non-compiled	[CE]  not  a  statement	64	None	replace
266	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  nfe,  dec);  [CE]  not  a  statement  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  nfe,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  nfe,  dec);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
267	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC_ZERO);  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	NumberUtils.copyValue(str,  DEC_ZERO);	  NumberUtils.copyValue(str,    nfe);    	non-compiled	[CE]  not  a  statement	11	None	replace
268	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: ");  [CE]  not  a  statement  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  does  not  match  a  valid  number: ");	  throw    new    NumberFormatException(   "A    blank    string    does    not    match    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	43	None	replace
269	[BUG]  [BUGGY]  return  createNumber(str,  true,  null);  [CE]  not  a  statement  [FE]                        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  true,  null);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str,  true,  null);	  return    createNumber(str,    true);    	non-compiled	[CE]  not  a  statement	54	None	replace
270	[BUG]  [BUGGY]  return  createNumber(str.substring(2,  str.length()));  [CE]  not  a  statement  [FE]                          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(2,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	return  createNumber(str.substring(2,  str.length()));	  return    createNumber(str.substring(1));    	non-compiled	[CE]  not  a  statement	55	None	replace
271	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");  [CE]  not  a  statement  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
272	[BUG]  [BUGGY]  Number  nfe  =  createNumber(str.substring(1,  str.length()));  [CE]  not  a  statement  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  nfe  =  createNumber(str.substring(1,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {      return  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	450	450	2	replace	Number  nfe  =  createNumber(str.substring(1,  str.length()));	  Number    nfe    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  not  a  statement	85	None	replace
