bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [CE]  orphaned  case  [FE]    NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.lastIndexOf('.');		non-compiled	[CE]  orphaned  case	10	None	add
2	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('.')+  1;  [CE]  orphaned  case  [FE]      NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.indexOf('.')+  1;  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.indexOf('.')+  1;		non-compiled	[CE]  orphaned  case	10	None	add
3	[BUG]  [BUGGY]    String  expPos  =  str.substring(decPos  +  1);  [CE]  orphaned  case  [FE]        NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    String  expPos  =  str.substring(decPos  +  1);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    String  expPos  =  str.substring(decPos  +  1);		non-compiled	[CE]  orphaned  case	10	None	add
4	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('.');  [CE]  orphaned  case  [FE]          NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.indexOf('.');  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.indexOf('.');		non-compiled	[CE]  orphaned  case	10	None	add
5	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.')+  1;  [CE]  orphaned  case  [FE]            NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.lastIndexOf('.')+  1;		non-compiled	[CE]  orphaned  case	10	None	add
6	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  orphaned  case  [FE]    NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	dec  =  str.substring(decPos  +  1,  expPos);  	non-compiled	[CE]  orphaned  case	9	None	replace
7	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  orphaned  case  [FE]      NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	dec  =  str.substring(decPos  +  1,  expPos);  	non-compiled	[CE]  orphaned  case	9	None	replace
8	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  orphaned  case  [FE]        NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1);	dec  =  str.substring(decPos  +  1,  expPos);  	non-compiled	[CE]  orphaned  case	9	None	replace
9	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [CE]  orphaned  case  [FE]          NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [BUGGY]  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	dec  =  str.substring(decPos  +  1,  expPos  +  3);	dec  =  str.substring(decPos  +  1,  expPos);  	non-compiled	[CE]  orphaned  case	9	None	replace
10	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.',  expPos);  [CE]  orphaned  case  [FE]    NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.lastIndexOf('.',  expPos);		non-compiled	[CE]  orphaned  case	10	None	add
11	[BUG]  [BUGGY]    int  expPos  =  str.length();  [CE]  orphaned  case  [FE]    NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    int  expPos  =  str.length();  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    int  expPos  =  str.length();		non-compiled	[CE]  orphaned  case	10	None	add
12	[BUG]  [BUGGY]    Integer  expPos  =  str.indexOf('.');  [CE]  orphaned  case  [FE]      NumberFormatException  [CONTEXT]  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [BUGGY]    Integer  expPos  =  str.indexOf('.');  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	478	478	2	replace	    Integer  expPos  =  str.indexOf('.');		non-compiled	[CE]  orphaned  case	10	None	add
