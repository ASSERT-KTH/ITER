bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  [FE]    NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]  return  createBigInteger(str);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	return  createBigInteger(str);	return  createLong(str);  	non-compiled	[CE]  	45	None	replace
2	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  [FE]      NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]  return  createInteger(str);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	return  createInteger(str);	return  createLong(str);  	non-compiled	[CE]  	45	None	replace
3	[BUG]  [BUGGY]  return  createBigDecimal(str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]  return  createBigDecimal(str);  [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	return  createBigDecimal(str);	return  createLong(str);  	non-compiled	[CE]  	45	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    [BUGGY]  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	  	return  createLong(str);  	non-compiled	[CE]  	45	None	replace
5	[BUG]  [BUGGY]    Integer  str  =  createInteger(str);  [CE]  [FE]    NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    Integer  str  =  createInteger(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    Integer  str  =  createInteger(str);		non-compiled	[CE]  	46	None	add
6	[BUG]  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [CE]  [FE]      NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  str.lastIndexOf('.');		non-compiled	[CE]  	46	None	add
7	[BUG]  [BUGGY]    Float  str  =  createFloat(str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    Float  str  =  createFloat(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    Float  str  =  createFloat(str);		non-compiled	[CE]  	46	None	add
8	[BUG]  [BUGGY]    int  decPos  =  str.length();  [CE]  [FE]          NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  str.length();		non-compiled	[CE]  	46	None	add
9	[BUG]  [BUGGY]    int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  [FE]            NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  str.lastIndexOf('.')+  1;		non-compiled	[CE]  	46	None	add
10	[BUG]  [BUGGY]    Integer  dec  =  createInteger(str);  [CE]  [FE]    NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    Integer  dec  =  createInteger(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    Integer  dec  =  createInteger(str);		non-compiled	[CE]  	46	None	add
11	[BUG]  [BUGGY]    Float  mant  =  createFloat(str);  [CE]  [FE]      NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    Float  mant  =  createFloat(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    Float  mant  =  createFloat(str);		non-compiled	[CE]  	46	None	add
12	[BUG]  [BUGGY]    int  decPos  =  createIntegerPos(dec);  [CE]  [FE]        NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  createIntegerPos(dec);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  createIntegerPos(dec);		non-compiled	[CE]  	46	None	add
13	[BUG]  [BUGGY]    boolean  allZeros  =  isAllZeros(exp);  [CE]  [FE]    NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    boolean  allZeros  =  isAllZeros(exp);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    boolean  allZeros  =  isAllZeros(exp);		non-compiled	[CE]  	46	None	add
14	[BUG]  [BUGGY]    int  decPos  =  createIntegerPos(str);  [CE]  [FE]      NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  createIntegerPos(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  createIntegerPos(str);		non-compiled	[CE]  	46	None	add
15	[BUG]  [BUGGY]    int  decPos  =  createInteger(str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  }  try  {  [BUGGY]    int  decPos  =  createInteger(str);  [BUGGY]  return  createLong(str);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(str);  }  else  {  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  try  {  Float  f  =  createFloat(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	565	565	2	replace	    int  decPos  =  createInteger(str);		non-compiled	[CE]  	46	None	add
