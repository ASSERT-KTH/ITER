bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  [FE]    NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	if(str  ==  null  ||  str.length()  ==  0)  {	if  (str  ==  null)  {  	non-compiled	[CE]  	61	None	replace
2	[BUG]  [BUGGY]    [CE]  [FE]      NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    [BUGGY]  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	  	if  (str  ==  null)  {  	non-compiled	[CE]  	61	None	replace
3	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    String  str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  	62	None	add
4	[BUG]  [BUGGY]    Number  str  =  createNumber(str);  [CE]  [FE]      NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    Number  str  =  createNumber(str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    Number  str  =  createNumber(str);		non-compiled	[CE]  	62	None	add
5	[BUG]  [BUGGY]    Number  str  =  getNumber(str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    Number  str  =  getNumber(str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    Number  str  =  getNumber(str);		non-compiled	[CE]  	62	None	add
6	[BUG]  [BUGGY]    NumberUtils.copyNumber(str);  [CE]  [FE]          NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    NumberUtils.copyNumber(str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    NumberUtils.copyNumber(str);		non-compiled	[CE]  	62	None	add
7	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]            NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    String  str  =  str.substring(0,  str.length()  -  2);		non-compiled	[CE]  	62	None	add
8	[BUG]  [BUGGY]    NumberShape.this.setString(str);  [CE]  [FE]    NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    NumberShape.this.setString(str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    NumberShape.this.setString(str);		non-compiled	[CE]  	62	None	add
9	[BUG]  [BUGGY]    NumberUtils.copyValue(str,  0);  [CE]  [FE]      NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    NumberUtils.copyValue(str,  0);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    NumberUtils.copyValue(str,  0);		non-compiled	[CE]  	62	None	add
10	[BUG]  [BUGGY]    NumberUtils.copyValue(str,  0,  str);  [CE]  [FE]        NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    NumberUtils.copyValue(str,  0,  str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    NumberUtils.copyValue(str,  0,  str);		non-compiled	[CE]  	62	None	add
11	[BUG]  [BUGGY]    Number  str  =  createString(str);  [CE]  [FE]    NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    Number  str  =  createString(str);  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    Number  str  =  createString(str);		non-compiled	[CE]  	62	None	add
12	[BUG]  [BUGGY]    String  str  =  str.trim();  [CE]  [FE]      NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    String  str  =  str.trim();  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    String  str  =  str.trim();		non-compiled	[CE]  	62	None	add
13	[BUG]  [BUGGY]    Number  str  =  getNumber();  [CE]  [FE]        NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]    Number  str  =  getNumber();  [BUGGY]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	    Number  str  =  getNumber();		non-compiled	[CE]  	62	None	add
14	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "- "))  {  [CE]  [FE]    NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]  if(str  ==  null  ||  str.startsWith( "- "))  {  [BUGGY]  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	if(str  ==  null  ||  str.startsWith( "- "))  {	if  (str  ==  null)  {  	non-compiled	[CE]  	61	None	replace
15	[BUG]  [BUGGY]  if(str  ==  null  ||  str.equals( "- "))  {  [CE]  [FE]      NumberFormatException  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  [BUGGY]  if(str  ==  null  ||  str.equals( "- "))  {  [BUGGY]  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	0.8164965809277261	449	449	2	replace	if(str  ==  null  ||  str.equals( "- "))  {	if  (str  ==  null)  {  	non-compiled	[CE]  	61	None	replace
