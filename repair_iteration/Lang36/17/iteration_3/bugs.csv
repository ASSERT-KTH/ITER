bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.',  dec  +  1);	  Integer    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  	2	None	replace
2	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  dec);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  dec);	  Integer    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  	2	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  2);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  2);	  int    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  	23	None	replace
4	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  2));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  2));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  2));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
5	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  1));  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  1));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
6	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()));  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
7	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
8	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	20	None	replace
9	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  char  expPos  =  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	20	None	replace
10	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  0;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.')+  0;	  int    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  	32	None	replace
11	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  0;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  0;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')/  0;	  int    expPos    =    str.indexOf('.')+    0;    	non-compiled	[CE]  	32	None	replace
12	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  0  &&  expPos  <  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(dec  ==  null  &&  expPos  >  0  &&  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(dec  ==  null  &&  expPos  >  0  &&  expPos  <  str.length())  {	  if(expPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  	5	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  -1);	  int    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  	24	None	replace
14	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str,  1);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  DEC);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  DEC);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str,  DEC);	  Integer    expPos    =    createInteger(str,    dec);    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  0);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  0);	  Integer    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  	36	None	replace
17	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  -1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.',  -1);	  Integer    expPos    =    str.indexOf('.',    0);    	non-compiled	[CE]  	36	None	replace
18	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  	17	None	replace
19	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  	17	None	replace
20	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.length()  -  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.length()  -  1);	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  	9	None	replace
21	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.length()  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.length()  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.length()  +  1);	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  	9	None	replace
22	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length()  *  1  +  1);	  Integer    expPos    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	28	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.substring(0,  str.length()  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.substring(0,  str.length()  +  1);	  Integer    expPos    =    str.substring(0,    str.length()    -    1    +    1);    	non-compiled	[CE]  	28	None	replace
24	[BUG]  [BUGGY]  if(expPos  ==  -1  &&  expPos  <  str.length())  {  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  ==  -1  &&  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  ==  -1  &&  expPos  <  str.length())  {	  if(dec    ==    null    &&    expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  	16	None	replace
25	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(1);  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(1);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  	29	None	replace
26	[BUG]  [BUGGY]  Integer  expPos  =  getInteger(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  getInteger(str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  getInteger(str);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  	29	None	replace
27	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  2);  [CE]  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.',  2);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  	3	None	replace
28	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  1);  [CE]  [FE]                        NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  1);	  Integer    expPos    =    str.indexOf('.',    1);    	non-compiled	[CE]  	3	None	replace
29	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length()  -  1)+  1;	  Integer    expPos    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	14	None	replace
30	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length()  +  1)+  1;	  Integer    expPos    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	14	None	replace
31	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')/  2;	  int    expPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	18	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  	38	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  4);	  int    expPos    =    str.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  	38	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  2);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  	25	None	replace
35	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  -1  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(decPos  >  -1  ||  expPos  <  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  	15	None	replace
36	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  16)/  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  16)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  16)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	41	None	replace
37	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  4;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  4;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')/  4;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	41	None	replace
38	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length()  -  2);	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  	12	None	replace
39	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(1,  str.length());  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(1,  str.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(1,  str.length());	  Integer    expPos    =    str.substring(0,    str.length());    	non-compiled	[CE]  	12	None	replace
40	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  DEC_POP  +  1);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  	42	None	replace
41	[BUG]  [BUGGY]  if(decPos  >  0  ||  expPos  <  str.length())  {  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  0  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(decPos  >  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  if(expPos  <  0  ||  expPos  <  str.length())  {  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  <  0  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  <  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length()    -    1)    {    	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length();  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length();	  Integer    expPos    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  	13	None	replace
44	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  12);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  12);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  12);	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  	33	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  4);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  4);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  	35	None	replace
46	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(1));  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(1));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  	39	None	replace
47	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec  +  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  dec  +  1);	  int    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  	22	None	replace
48	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  3;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  3;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.')+  3;	  int    expPos    =    str.indexOf('.')+    3;    	non-compiled	[CE]  	19	None	replace
49	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  3;  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')/  3;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')/  3;	  int    expPos    =    str.indexOf('.')+    3;    	non-compiled	[CE]  	19	None	replace
50	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  -1);	  int    expPos    =    str.lastIndexOf('.',    0);    	non-compiled	[CE]  	27	None	replace
51	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  >=  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  -1  ||  expPos  >=  str.length())  {	  if(expPos    >    -1    &&    expPos    >=    str.length())    {    	non-compiled	[CE]  	34	None	replace
52	[BUG]  [BUGGY]  if(expPos  >  0  &&  expPos  >=  str.length())  {  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  &&  expPos  >=  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  0  &&  expPos  >=  str.length())  {	  if(expPos    >    -1    &&    expPos    >=    str.length())    {    	non-compiled	[CE]  	34	None	replace
53	[BUG]  [BUGGY]  if(decPos  >  0  &&  expPos  <  str.length()  -  1)  {  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(decPos  >  0  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(decPos  >  0  &&  expPos  <  str.length()  -  1)  {	  if(decPos    >    0    &&    expPos    <    str.length())    {    	non-compiled	[CE]  	7	None	replace
54	[BUG]  [BUGGY]  if(expPos  >=  0  ||  expPos  <  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >=  0  ||  expPos  <  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >=  0  ||  expPos  <  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length())    {    	non-compiled	[CE]  	31	None	replace
55	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  DEC);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  DEC);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  DEC);	  Integer    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  	37	None	replace
56	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(2);  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(2);	  Integer    expPos    =    createInteger(0);    	non-compiled	[CE]  	8	None	replace
57	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  2);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str,  2);	  Integer    expPos    =    createInteger(str,    0);    	non-compiled	[CE]  	11	None	replace
58	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str,  3);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str,  3);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str,  3);	  Integer    expPos    =    createInteger(str,    0);    	non-compiled	[CE]  	11	None	replace
59	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  4);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  4);	  Integer    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	1	None	replace
60	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.')+  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	43	None	replace
61	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.')+  2;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	43	None	replace
62	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [CE]  [FE]                      NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.')/  1;	  Integer    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  	43	None	replace
63	[BUG]  [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  16);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.lastIndexOf('.',  16);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.lastIndexOf('.',  16);	  Integer    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  	1	None	replace
64	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  DEC  -  1);	  int    expPos    =    str.lastIndexOf('.',    DEC);    	non-compiled	[CE]  	33	None	replace
65	[BUG]  [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  0  ||  expPos  >  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  0  ||  expPos  >  str.length())  {	  if(expPos    >    0    ||    expPos    <    str.length())    {    	non-compiled	[CE]  	31	None	replace
66	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  len)/  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  len)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  len)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	41	None	replace
67	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.charAt(0));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.charAt(0));	  Integer    expPos    =    createInteger(str.length());    	non-compiled	[CE]  	9	None	replace
68	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(dec  ==  null  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(dec    ==    null    &&    expPos    >    -1    &&    expPos    <    str.length())    {    	non-compiled	[CE]  	16	None	replace
69	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  12));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  12));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  12));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
70	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  prefix));  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  prefix));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  prefix));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
71	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  -  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.',  DEC  -  1);	  Integer    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  	37	None	replace
72	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  >  str.length())  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  -1  ||  expPos  >  str.length())  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  	15	None	replace
73	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  2;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')-  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')-  2;	  int    expPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	18	None	replace
74	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  DEC  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  DEC  -  1);	  int    expPos    =    str.indexOf('.',    DEC);    	non-compiled	[CE]  	35	None	replace
75	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  -1  ||  expPos  <  str.length()  -  1)  {	  if(expPos    >    -1    ||    expPos    <    str.length())    {    	non-compiled	[CE]  	15	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  decPos);	  int    expPos    =    str.indexOf('.',    DEC_POP);    	non-compiled	[CE]  	42	None	replace
77	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(0,  str.length()));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(0,  str.length()));	  Integer    expPos    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  	13	None	replace
78	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(0,  DEC_POP));	  Integer    expPos    =    createInteger(str.substring(0,    decPos));    	non-compiled	[CE]  	40	None	replace
79	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec)/  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  dec)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  dec)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	41	None	replace
80	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)/  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  decPos)/  1;	  int    expPos    =    str.indexOf('.')/    1;    	non-compiled	[CE]  	41	None	replace
81	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	20	None	replace
82	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.')-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  	20	None	replace
83	[BUG]  [BUGGY]  Integer  expPos  =  createBigInteger(str);  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createBigInteger(str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createBigInteger(str);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  	29	None	replace
84	[BUG]  [BUGGY]  int  expPos  =  createInteger(str);  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  createInteger(str);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  createInteger(str);	  Integer    expPos    =    createInteger(dec);    	non-compiled	[CE]  	29	None	replace
85	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  [FE]                  NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.lastIndexOf('.',  dec  +  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  	26	None	replace
86	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  2;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	int  expPos  =  str.indexOf('.',  decPos)+  2;	  int    expPos    =    str.indexOf('.')+    2;    	non-compiled	[CE]  	18	None	replace
87	[BUG]  [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  -  1);  [CE]  [FE]                    NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.indexOf('.',  dec  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.indexOf('.',  dec  -  1);	  Integer    expPos    =    str.indexOf('.',    dec);    	non-compiled	[CE]  	2	None	replace
88	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	if(expPos  >  -1  &&  expPos  >=  str.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    >=    str.length())    {    	non-compiled	[CE]  	34	None	replace
89	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos  +  1));  [CE]  [FE]            NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(decPos  +  1));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  	39	None	replace
90	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(1,  decPos));  [CE]  [FE]              NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(1,  decPos));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(1,  decPos));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  	39	None	replace
91	[BUG]  [BUGGY]  Integer  expPos  =  createInteger(str.substring(2,  decPos));  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  createInteger(str.substring(2,  decPos));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  createInteger(str.substring(2,  decPos));	  Integer    expPos    =    createInteger(str.substring(decPos));    	non-compiled	[CE]  	39	None	replace
92	[BUG]  [BUGGY]  Integer  expPos  =  str.substring(1,  str.length())+  1;  [CE]  [FE]                NumberFormatException      [CONTEXT]        }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {        [BUGGY]  Integer  expPos  =  str.substring(1,  str.length())+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  	projects/Lang36/src/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	552	552	2	replace	Integer  expPos  =  str.substring(1,  str.length())+  1;	  Integer    expPos    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	14	None	replace
